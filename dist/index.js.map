{"version":3,"file":"index.js","sources":["../webpack://elastic-logs-action/./lib/github.js","../webpack://elastic-logs-action/./lib/logs.js","../webpack://elastic-logs-action/./lib/run.js","../webpack://elastic-logs-action/./node_modules/@actions/core/lib/command.js","../webpack://elastic-logs-action/./node_modules/@actions/core/lib/core.js","../webpack://elastic-logs-action/./node_modules/@actions/core/lib/file-command.js","../webpack://elastic-logs-action/./node_modules/@actions/core/lib/oidc-utils.js","../webpack://elastic-logs-action/./node_modules/@actions/core/lib/summary.js","../webpack://elastic-logs-action/./node_modules/@actions/core/lib/utils.js","../webpack://elastic-logs-action/./node_modules/@actions/core/node_modules/@actions/http-client/lib/auth.js","../webpack://elastic-logs-action/./node_modules/@actions/core/node_modules/@actions/http-client/lib/index.js","../webpack://elastic-logs-action/./node_modules/@actions/core/node_modules/@actions/http-client/lib/proxy.js","../webpack://elastic-logs-action/./node_modules/@actions/http-client/index.js","../webpack://elastic-logs-action/./node_modules/@actions/http-client/proxy.js","../webpack://elastic-logs-action/./node_modules/@elastic/ecs-helpers/lib/error-formatters.js","../webpack://elastic-logs-action/./node_modules/@elastic/ecs-helpers/lib/http-formatters.js","../webpack://elastic-logs-action/./node_modules/@elastic/ecs-helpers/lib/index.js","../webpack://elastic-logs-action/./node_modules/@elastic/ecs-helpers/lib/serializer.js","../webpack://elastic-logs-action/./node_modules/@elastic/ecs-pino-format/index.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/async_search.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/autoscaling.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/bulk.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/cat.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/ccr.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/clear_scroll.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/close_point_in_time.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/cluster.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/count.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/create.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/dangling_indices.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/delete.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/delete_by_query.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/delete_by_query_rethrottle.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/delete_script.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/enrich.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/eql.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/exists.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/exists_source.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/explain.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/features.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/field_caps.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/fleet.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/get.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/get_script.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/get_script_context.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/get_script_languages.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/get_source.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/graph.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/ilm.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/index.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/indices.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/info.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/ingest.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/license.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/logstash.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/mget.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/migration.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/ml.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/monitoring.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/msearch.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/msearch_template.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/mtermvectors.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/nodes.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/open_point_in_time.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/ping.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/put_script.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/rank_eval.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/reindex.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/reindex_rethrottle.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/render_search_template.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/rollup.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/scripts_painless_execute.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/scroll.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/search.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/search_mvt.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/search_shards.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/search_template.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/searchable_snapshots.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/security.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/shutdown.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/slm.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/snapshot.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/sql.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/ssl.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/tasks.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/terms_enum.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/termvectors.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/text_structure.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/transform.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/update.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/update_by_query.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/update_by_query_rethrottle.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/watcher.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/api/xpack.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/index.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/api/utils.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/index.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/lib/Connection.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/lib/Helpers.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/lib/Serializer.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/lib/Transport.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/lib/errors.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/lib/pool/BaseConnectionPool.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/lib/pool/CloudConnectionPool.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/lib/pool/ConnectionPool.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/lib/pool/index.js","../webpack://elastic-logs-action/./node_modules/@elastic/elasticsearch/node_modules/ms/index.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/ajv.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/cache.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/compile/async.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/compile/equal.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/compile/error_classes.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/compile/formats.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/compile/index.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/compile/resolve.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/compile/rules.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/compile/schema_obj.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/compile/ucs2length.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/compile/util.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/data.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/definition_schema.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/_limit.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/_limitItems.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/_limitLength.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/_limitProperties.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/allOf.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/anyOf.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/comment.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/const.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/contains.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/custom.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/dependencies.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/enum.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/format.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/if.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/index.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/items.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/multipleOf.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/not.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/oneOf.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/pattern.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/properties.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/propertyNames.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/ref.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/required.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/uniqueItems.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/dotjs/validate.js","../webpack://elastic-logs-action/./node_modules/ajv/lib/keyword.js","../webpack://elastic-logs-action/./node_modules/atomic-sleep/index.js","../webpack://elastic-logs-action/./node_modules/debug/src/browser.js","../webpack://elastic-logs-action/./node_modules/debug/src/common.js","../webpack://elastic-logs-action/./node_modules/debug/src/index.js","../webpack://elastic-logs-action/./node_modules/debug/src/node.js","../webpack://elastic-logs-action/./node_modules/deepmerge/dist/cjs.js","../webpack://elastic-logs-action/./node_modules/fast-deep-equal/index.js","../webpack://elastic-logs-action/./node_modules/fast-json-stable-stringify/index.js","../webpack://elastic-logs-action/./node_modules/fast-json-stringify/index.js","../webpack://elastic-logs-action/./node_modules/fast-json-stringify/schema-validator.js","../webpack://elastic-logs-action/./node_modules/fast-redact/index.js","../webpack://elastic-logs-action/./node_modules/fast-redact/lib/modifiers.js","../webpack://elastic-logs-action/./node_modules/fast-redact/lib/parse.js","../webpack://elastic-logs-action/./node_modules/fast-redact/lib/redactor.js","../webpack://elastic-logs-action/./node_modules/fast-redact/lib/restorer.js","../webpack://elastic-logs-action/./node_modules/fast-redact/lib/rx.js","../webpack://elastic-logs-action/./node_modules/fast-redact/lib/state.js","../webpack://elastic-logs-action/./node_modules/fast-redact/lib/validator.js","../webpack://elastic-logs-action/./node_modules/fast-safe-stringify/index.js","../webpack://elastic-logs-action/./node_modules/flatstr/index.js","../webpack://elastic-logs-action/./node_modules/has-flag/index.js","../webpack://elastic-logs-action/./node_modules/hpagent/index.js","../webpack://elastic-logs-action/./node_modules/inherits/inherits.js","../webpack://elastic-logs-action/./node_modules/inherits/inherits_browser.js","../webpack://elastic-logs-action/./node_modules/json-schema-traverse/index.js","../webpack://elastic-logs-action/./node_modules/ms/index.js","../webpack://elastic-logs-action/./node_modules/pino-std-serializers/index.js","../webpack://elastic-logs-action/./node_modules/pino-std-serializers/lib/err.js","../webpack://elastic-logs-action/./node_modules/pino-std-serializers/lib/req.js","../webpack://elastic-logs-action/./node_modules/pino-std-serializers/lib/res.js","../webpack://elastic-logs-action/./node_modules/pino/lib/deprecations.js","../webpack://elastic-logs-action/./node_modules/pino/lib/levels.js","../webpack://elastic-logs-action/./node_modules/pino/lib/meta.js","../webpack://elastic-logs-action/./node_modules/pino/lib/proto.js","../webpack://elastic-logs-action/./node_modules/pino/lib/redaction.js","../webpack://elastic-logs-action/./node_modules/pino/lib/symbols.js","../webpack://elastic-logs-action/./node_modules/pino/lib/time.js","../webpack://elastic-logs-action/./node_modules/pino/lib/tools.js","../webpack://elastic-logs-action/./node_modules/pino/node_modules/sonic-boom/index.js","../webpack://elastic-logs-action/./node_modules/pino/pino.js","../webpack://elastic-logs-action/./node_modules/process-warning/index.js","../webpack://elastic-logs-action/./node_modules/quick-format-unescaped/index.js","../webpack://elastic-logs-action/./node_modules/readable-stream/errors.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/_stream_duplex.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/_stream_passthrough.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/_stream_readable.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/_stream_transform.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/_stream_writable.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/internal/streams/async_iterator.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/internal/streams/buffer_list.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/internal/streams/destroy.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/internal/streams/from.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/internal/streams/pipeline.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/internal/streams/state.js","../webpack://elastic-logs-action/./node_modules/readable-stream/lib/internal/streams/stream.js","../webpack://elastic-logs-action/./node_modules/readable-stream/readable.js","../webpack://elastic-logs-action/./node_modules/rfdc/index.js","../webpack://elastic-logs-action/./node_modules/secure-json-parse/index.js","../webpack://elastic-logs-action/./node_modules/split2/index.js","../webpack://elastic-logs-action/./node_modules/string-similarity/src/index.js","../webpack://elastic-logs-action/./node_modules/string_decoder/lib/string_decoder.js","../webpack://elastic-logs-action/./node_modules/string_decoder/node_modules/safe-buffer/index.js","../webpack://elastic-logs-action/./node_modules/supports-color/index.js","../webpack://elastic-logs-action/./node_modules/tunnel/index.js","../webpack://elastic-logs-action/./node_modules/tunnel/lib/tunnel.js","../webpack://elastic-logs-action/./node_modules/uri-js/dist/es5/uri.all.js","../webpack://elastic-logs-action/./node_modules/util-deprecate/node.js","../webpack://elastic-logs-action/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://elastic-logs-action/external \"assert\"","../webpack://elastic-logs-action/external \"buffer\"","../webpack://elastic-logs-action/external \"events\"","../webpack://elastic-logs-action/external \"fs\"","../webpack://elastic-logs-action/external \"http\"","../webpack://elastic-logs-action/external \"https\"","../webpack://elastic-logs-action/external \"net\"","../webpack://elastic-logs-action/external \"os\"","../webpack://elastic-logs-action/external \"path\"","../webpack://elastic-logs-action/external \"process\"","../webpack://elastic-logs-action/external \"querystring\"","../webpack://elastic-logs-action/external \"stream\"","../webpack://elastic-logs-action/external \"string_decoder\"","../webpack://elastic-logs-action/external \"tls\"","../webpack://elastic-logs-action/external \"tty\"","../webpack://elastic-logs-action/external \"url\"","../webpack://elastic-logs-action/external \"util\"","../webpack://elastic-logs-action/external \"vm\"","../webpack://elastic-logs-action/external \"zlib\"","../webpack://elastic-logs-action/webpack/bootstrap","../webpack://elastic-logs-action/webpack/runtime/compat","../webpack://elastic-logs-action/./lib/main.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchLogs = exports.fetchJobs = exports.getClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst githubAPIUrl = 'https://api.github.com';\nfunction getClient(ghToken) {\n    return new http_client_1.HttpClient('gh-http-client', [], {\n        headers: {\n            Authorization: `token ${ghToken}`,\n            'Content-Type': 'application/json'\n        }\n    });\n}\nexports.getClient = getClient;\nfunction fetchJobs(httpClient, repo, runId, allowList) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const url = `${githubAPIUrl}/repos/${repo}/actions/runs/${runId}/jobs`;\n        const res = yield httpClient.get(url);\n        if (res.message.statusCode === undefined || res.message.statusCode >= 400) {\n            throw new Error(`HTTP request failed: ${res.message.statusMessage}`);\n        }\n        const body = yield res.readBody();\n        const jobs = [];\n        const all = allowList.length === 0;\n        for (const j of JSON.parse(body).jobs) {\n            // if there's an allow list, skip job accordingly\n            if (!all && !allowList.includes(j.name)) {\n                continue;\n            }\n            jobs.push({\n                id: j.id,\n                name: j.name\n            });\n        }\n        return jobs;\n    });\n}\nexports.fetchJobs = fetchJobs;\nfunction fetchLogs(httpClient, repo, job) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const url = `${githubAPIUrl}/repos/${repo}/actions/jobs/${job.id}/logs`;\n        const res = yield httpClient.get(url);\n        if (res.message.statusCode === undefined || res.message.statusCode >= 400) {\n            throw new Error(`HTTP request failed: ${res.message.statusMessage}`);\n        }\n        const body = yield res.readBody();\n        return body.split('\\n');\n    });\n}\nexports.fetchLogs = fetchLogs;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bulkSend = exports.getESClient = exports.convert = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nconst ecs_pino_format_1 = __importDefault(require(\"@elastic/ecs-pino-format\"));\nconst elasticsearch_1 = require(\"@elastic/elasticsearch\");\nconst fs_1 = require(\"fs\");\nconst pino_1 = __importDefault(require(\"pino\"));\nconst split2_1 = __importDefault(require(\"split2\"));\nfunction convert(lines, destPath) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const log = (0, pino_1.default)((0, ecs_pino_format_1.default)(), pino_1.default.destination(destPath));\n        for (const l of lines) {\n            log.info(l);\n        }\n    });\n}\nexports.convert = convert;\nfunction getESClient(cloudId, addresses, user, pass) {\n    const config = {\n        auth: {\n            username: user,\n            password: pass\n        }\n    };\n    if (cloudId !== '') {\n        config['cloud'] = {\n            id: cloudId\n        };\n    }\n    else {\n        config['node'] = addresses;\n    }\n    return new elasticsearch_1.Client(config);\n}\nexports.getESClient = getESClient;\nfunction bulkSend(client, indexName, path) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return client.helpers.bulk({\n            datasource: (0, fs_1.createReadStream)(path).pipe((0, split2_1.default)()),\n            onDocument(doc) {\n                return {\n                    create: { _index: indexName }\n                };\n            }\n        });\n    });\n}\nexports.bulkSend = bulkSend;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run = exports.getCommaSeparatedInput = void 0;\nconst core = __importStar(require(\"@actions/core\"));\nconst process = __importStar(require(\"process\"));\nconst gh = __importStar(require(\"./github\"));\nconst logs = __importStar(require(\"./logs\"));\nconst defaultIndex = 'logs-generic-default';\n// Split comma separated inputs into an array of trimmed values\nfunction getCommaSeparatedInput(value) {\n    let retVal = [];\n    if (value !== '') {\n        retVal = value.split(',');\n        // trim array items\n        retVal = retVal.map(s => s.trim());\n    }\n    return retVal;\n}\nexports.getCommaSeparatedInput = getCommaSeparatedInput;\nfunction run() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            // retrieve config params\n            // Github repo token\n            const repoToken = core.getInput('repo-token', { required: true });\n            // List of jobs to collect logs from (all jobs when empty)\n            const jobNames = core.getInput('job-names', { required: false }) || '';\n            const allowList = getCommaSeparatedInput(jobNames);\n            // Elastic Cloud ID\n            const cloudId = core.getInput('cloud-id', { required: false }) || '';\n            // Elasticsearch addresses (when Cloud ID is not present)\n            const addrValue = core.getInput('addresses', { required: false }) || '';\n            const addresses = getCommaSeparatedInput(addrValue);\n            // Elasticsearch index\n            const indexName = core.getInput('index-name', { required: false }) || defaultIndex;\n            // Elasticsearch user\n            const username = core.getInput('username', { required: false });\n            // Elasticsearch pass\n            const password = core.getInput('password', { required: false });\n            // get an authenticated HTTP client for the GitHub API\n            const client = gh.getClient(repoToken);\n            // get all the jobs for the current workflow\n            const workflowId = process.env['GITHUB_RUN_ID'] || '';\n            const repo = process.env['GITHUB_REPOSITORY'] || '';\n            core.debug(`Allow listing ${allowList.length} jobs in repo ${repo}`);\n            const jobs = yield gh.fetchJobs(client, repo, workflowId, allowList);\n            // get the logs for each job\n            core.info(`Getting logs for ${jobs.length} jobs`);\n            for (const j of jobs) {\n                const lines = yield gh.fetchLogs(client, repo, j);\n                core.info(`Fetched ${lines.length} lines for job ${j.name}`);\n                const tmpfile = `./out-${j.id}.log`;\n                // convert logs to ECS and dump to disk\n                logs.convert(lines, tmpfile);\n                core.info(`Bulk request results: DONE}`);\n            }\n        }\n        catch (e) {\n            core.setFailed(`Run failed: ${e}`);\n        }\n    });\n}\nexports.run = run;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n/**\n * Summary exports\n */\nvar summary_1 = require(\"./summary\");\nObject.defineProperty(exports, \"summary\", { enumerable: true, get: function () { return summary_1.summary; } });\n/**\n * @deprecated use core.summary\n */\nvar summary_2 = require(\"./summary\");\nObject.defineProperty(exports, \"markdownSummary\", { enumerable: true, get: function () { return summary_2.markdownSummary; } });\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/lib/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;\nconst os_1 = require(\"os\");\nconst fs_1 = require(\"fs\");\nconst { access, appendFile, writeFile } = fs_1.promises;\nexports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';\nexports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';\nclass Summary {\n    constructor() {\n        this._buffer = '';\n    }\n    /**\n     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist\n     * Also checks r/w permissions.\n     *\n     * @returns step summary file path\n     */\n    filePath() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._filePath) {\n                return this._filePath;\n            }\n            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];\n            if (!pathFromEnv) {\n                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);\n            }\n            try {\n                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);\n            }\n            catch (_a) {\n                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);\n            }\n            this._filePath = pathFromEnv;\n            return this._filePath;\n        });\n    }\n    /**\n     * Wraps content in an HTML tag, adding any HTML attributes\n     *\n     * @param {string} tag HTML tag to wrap\n     * @param {string | null} content content within the tag\n     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add\n     *\n     * @returns {string} content wrapped in HTML element\n     */\n    wrap(tag, content, attrs = {}) {\n        const htmlAttrs = Object.entries(attrs)\n            .map(([key, value]) => ` ${key}=\"${value}\"`)\n            .join('');\n        if (!content) {\n            return `<${tag}${htmlAttrs}>`;\n        }\n        return `<${tag}${htmlAttrs}>${content}</${tag}>`;\n    }\n    /**\n     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.\n     *\n     * @param {SummaryWriteOptions} [options] (optional) options for write operation\n     *\n     * @returns {Promise<Summary>} summary instance\n     */\n    write(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);\n            const filePath = yield this.filePath();\n            const writeFunc = overwrite ? writeFile : appendFile;\n            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });\n            return this.emptyBuffer();\n        });\n    }\n    /**\n     * Clears the summary buffer and wipes the summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.emptyBuffer().write({ overwrite: true });\n        });\n    }\n    /**\n     * Returns the current summary buffer as a string\n     *\n     * @returns {string} string of summary buffer\n     */\n    stringify() {\n        return this._buffer;\n    }\n    /**\n     * If the summary buffer is empty\n     *\n     * @returns {boolen} true if the buffer is empty\n     */\n    isEmptyBuffer() {\n        return this._buffer.length === 0;\n    }\n    /**\n     * Resets the summary buffer without writing to summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    emptyBuffer() {\n        this._buffer = '';\n        return this;\n    }\n    /**\n     * Adds raw text to the summary buffer\n     *\n     * @param {string} text content to add\n     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addRaw(text, addEOL = false) {\n        this._buffer += text;\n        return addEOL ? this.addEOL() : this;\n    }\n    /**\n     * Adds the operating system-specific end-of-line marker to the buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addEOL() {\n        return this.addRaw(os_1.EOL);\n    }\n    /**\n     * Adds an HTML codeblock to the summary buffer\n     *\n     * @param {string} code content to render within fenced code block\n     * @param {string} lang (optional) language to syntax highlight code\n     *\n     * @returns {Summary} summary instance\n     */\n    addCodeBlock(code, lang) {\n        const attrs = Object.assign({}, (lang && { lang }));\n        const element = this.wrap('pre', this.wrap('code', code), attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML list to the summary buffer\n     *\n     * @param {string[]} items list of items to render\n     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addList(items, ordered = false) {\n        const tag = ordered ? 'ol' : 'ul';\n        const listItems = items.map(item => this.wrap('li', item)).join('');\n        const element = this.wrap(tag, listItems);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML table to the summary buffer\n     *\n     * @param {SummaryTableCell[]} rows table rows\n     *\n     * @returns {Summary} summary instance\n     */\n    addTable(rows) {\n        const tableBody = rows\n            .map(row => {\n            const cells = row\n                .map(cell => {\n                if (typeof cell === 'string') {\n                    return this.wrap('td', cell);\n                }\n                const { header, data, colspan, rowspan } = cell;\n                const tag = header ? 'th' : 'td';\n                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));\n                return this.wrap(tag, data, attrs);\n            })\n                .join('');\n            return this.wrap('tr', cells);\n        })\n            .join('');\n        const element = this.wrap('table', tableBody);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds a collapsable HTML details element to the summary buffer\n     *\n     * @param {string} label text for the closed state\n     * @param {string} content collapsable content\n     *\n     * @returns {Summary} summary instance\n     */\n    addDetails(label, content) {\n        const element = this.wrap('details', this.wrap('summary', label) + content);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML image tag to the summary buffer\n     *\n     * @param {string} src path to the image you to embed\n     * @param {string} alt text description of the image\n     * @param {SummaryImageOptions} options (optional) addition image attributes\n     *\n     * @returns {Summary} summary instance\n     */\n    addImage(src, alt, options) {\n        const { width, height } = options || {};\n        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));\n        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML section heading element\n     *\n     * @param {string} text heading text\n     * @param {number | string} [level=1] (optional) the heading level, default: 1\n     *\n     * @returns {Summary} summary instance\n     */\n    addHeading(text, level) {\n        const tag = `h${level}`;\n        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)\n            ? tag\n            : 'h1';\n        const element = this.wrap(allowedTag, text);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML thematic break (<hr>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addSeparator() {\n        const element = this.wrap('hr', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML line break (<br>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addBreak() {\n        const element = this.wrap('br', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML blockquote to the summary buffer\n     *\n     * @param {string} text quote text\n     * @param {string} cite (optional) citation url\n     *\n     * @returns {Summary} summary instance\n     */\n    addQuote(text, cite) {\n        const attrs = Object.assign({}, (cite && { cite }));\n        const element = this.wrap('blockquote', text, attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML anchor tag to the summary buffer\n     *\n     * @param {string} text link text/content\n     * @param {string} href hyperlink\n     *\n     * @returns {Summary} summary instance\n     */\n    addLink(text, href) {\n        const element = this.wrap('a', text, { href });\n        return this.addRaw(element).addEOL();\n    }\n}\nconst _summary = new Summary();\n/**\n * @deprecated use `core.summary`\n */\nexports.markdownSummary = _summary;\nexports.summary = _summary;\n//# sourceMappingURL=summary.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n//# sourceMappingURL=auth.js.map","\"use strict\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nconst pm = __importStar(require(\"./proxy\"));\nconst tunnel = __importStar(require(\"tunnel\"));\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let output = Buffer.alloc(0);\n                this.message.on('data', (chunk) => {\n                    output = Buffer.concat([output, chunk]);\n                });\n                this.message.on('end', () => {\n                    resolve(output.toString());\n                });\n            }));\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    const parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    get(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('GET', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    del(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('POST', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PUT', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    head(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request(verb, requestUrl, stream, additionalHeaders);\n        });\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    getJson(requestUrl, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            const res = yield this.get(requestUrl, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    postJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.post(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    putJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.put(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    patchJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.patch(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    request(verb, requestUrl, data, headers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                throw new Error('Client has already been disposed.');\n            }\n            const parsedUrl = new URL(requestUrl);\n            let info = this._prepareRequest(verb, parsedUrl, headers);\n            // Only perform retries on reads since writes may not be idempotent.\n            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)\n                ? this._maxRetries + 1\n                : 1;\n            let numTries = 0;\n            let response;\n            do {\n                response = yield this.requestRaw(info, data);\n                // Check if it's an authentication challenge\n                if (response &&\n                    response.message &&\n                    response.message.statusCode === HttpCodes.Unauthorized) {\n                    let authenticationHandler;\n                    for (const handler of this.handlers) {\n                        if (handler.canHandleAuthentication(response)) {\n                            authenticationHandler = handler;\n                            break;\n                        }\n                    }\n                    if (authenticationHandler) {\n                        return authenticationHandler.handleAuthentication(this, info, data);\n                    }\n                    else {\n                        // We have received an unauthorized response but have no handlers to handle it.\n                        // Let the response return to the caller.\n                        return response;\n                    }\n                }\n                let redirectsRemaining = this._maxRedirects;\n                while (response.message.statusCode &&\n                    HttpRedirectCodes.includes(response.message.statusCode) &&\n                    this._allowRedirects &&\n                    redirectsRemaining > 0) {\n                    const redirectUrl = response.message.headers['location'];\n                    if (!redirectUrl) {\n                        // if there's no location to redirect to, we won't\n                        break;\n                    }\n                    const parsedRedirectUrl = new URL(redirectUrl);\n                    if (parsedUrl.protocol === 'https:' &&\n                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&\n                        !this._allowRedirectDowngrade) {\n                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                    }\n                    // we need to finish reading the response before reassigning response\n                    // which will leak the open socket.\n                    yield response.readBody();\n                    // strip authorization header if redirected to a different hostname\n                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                        for (const header in headers) {\n                            // header names are case insensitive\n                            if (header.toLowerCase() === 'authorization') {\n                                delete headers[header];\n                            }\n                        }\n                    }\n                    // let's make the request with the new redirectUrl\n                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                    response = yield this.requestRaw(info, data);\n                    redirectsRemaining--;\n                }\n                if (!response.message.statusCode ||\n                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {\n                    // If not a retry code, return immediately instead of retrying\n                    return response;\n                }\n                numTries += 1;\n                if (numTries < maxTries) {\n                    yield response.readBody();\n                    yield this._performExponentialBackoff(numTries);\n                }\n            } while (numTries < maxTries);\n            return response;\n        });\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                function callbackForResult(err, res) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else if (!res) {\n                        // If `err` is not passed, then `res` must be passed.\n                        reject(new Error('Unknown error'));\n                    }\n                    else {\n                        resolve(res);\n                    }\n                }\n                this.requestRawWithCallback(info, data, callbackForResult);\n            });\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        if (typeof data === 'string') {\n            if (!info.options.headers) {\n                info.options.headers = {};\n            }\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        function handleResult(err, res) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        }\n        const req = info.httpModule.request(info.options, (msg) => {\n            const res = new HttpClientResponse(msg);\n            handleResult(undefined, res);\n        });\n        let socket;\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error(`Request timeout: ${info.options.path}`));\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        const parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            for (const handler of this.handlers) {\n                handler.prepareRequest(info.options);\n            }\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        const proxyUrl = pm.getProxyUrl(parsedUrl);\n        const useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.\n        if (proxyUrl && proxyUrl.hostname) {\n            const agentOptions = {\n                maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {\n                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                })), { host: proxyUrl.hostname, port: proxyUrl.port })\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        return __awaiter(this, void 0, void 0, function* () {\n            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n            return new Promise(resolve => setTimeout(() => resolve(), ms));\n        });\n    }\n    _processResponse(res, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                const statusCode = res.message.statusCode || 0;\n                const response = {\n                    statusCode,\n                    result: null,\n                    headers: {}\n                };\n                // not found leads to null obj returned\n                if (statusCode === HttpCodes.NotFound) {\n                    resolve(response);\n                }\n                // get the result from the body\n                function dateTimeDeserializer(key, value) {\n                    if (typeof value === 'string') {\n                        const a = new Date(value);\n                        if (!isNaN(a.valueOf())) {\n                            return a;\n                        }\n                    }\n                    return value;\n                }\n                let obj;\n                let contents;\n                try {\n                    contents = yield res.readBody();\n                    if (contents && contents.length > 0) {\n                        if (options && options.deserializeDates) {\n                            obj = JSON.parse(contents, dateTimeDeserializer);\n                        }\n                        else {\n                            obj = JSON.parse(contents);\n                        }\n                        response.result = obj;\n                    }\n                    response.headers = res.message.headers;\n                }\n                catch (err) {\n                    // Invalid resource (contents not json);  leaving result obj null\n                }\n                // note that 3xx redirects are handled by the http layer.\n                if (statusCode > 299) {\n                    let msg;\n                    // if exception/error in body, attempt to get better error\n                    if (obj && obj.message) {\n                        msg = obj.message;\n                    }\n                    else if (contents && contents.length > 0) {\n                        // it may be the case that the exception is in the body message as string\n                        msg = contents;\n                    }\n                    else {\n                        msg = `Failed request: (${statusCode})`;\n                    }\n                    const err = new HttpClientError(msg, statusCode);\n                    err.result = response.result;\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }));\n        });\n    }\n}\nexports.HttpClient = HttpClient;\nconst lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkBypass = exports.getProxyUrl = void 0;\nfunction getProxyUrl(reqUrl) {\n    const usingSsl = reqUrl.protocol === 'https:';\n    if (checkBypass(reqUrl)) {\n        return undefined;\n    }\n    const proxyVar = (() => {\n        if (usingSsl) {\n            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n        }\n        else {\n            return process.env['http_proxy'] || process.env['HTTP_PROXY'];\n        }\n    })();\n    if (proxyVar) {\n        return new URL(proxyVar);\n    }\n    else {\n        return undefined;\n    }\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    const upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (const upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n//# sourceMappingURL=proxy.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst pm = require(\"./proxy\");\nlet tunnel;\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return new Promise(async (resolve, reject) => {\n            let output = Buffer.alloc(0);\n            this.message.on('data', (chunk) => {\n                output = Buffer.concat([output, chunk]);\n            });\n            this.message.on('end', () => {\n                resolve(output.toString());\n            });\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    let parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n    }\n    get(requestUrl, additionalHeaders) {\n        return this.request('GET', requestUrl, null, additionalHeaders || {});\n    }\n    del(requestUrl, additionalHeaders) {\n        return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return this.request('POST', requestUrl, data, additionalHeaders || {});\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return this.request('PUT', requestUrl, data, additionalHeaders || {});\n    }\n    head(requestUrl, additionalHeaders) {\n        return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return this.request(verb, requestUrl, stream, additionalHeaders);\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    async getJson(requestUrl, additionalHeaders = {}) {\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        let res = await this.get(requestUrl, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async postJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.post(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async putJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.put(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async patchJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.patch(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    async request(verb, requestUrl, data, headers) {\n        if (this._disposed) {\n            throw new Error('Client has already been disposed.');\n        }\n        let parsedUrl = new URL(requestUrl);\n        let info = this._prepareRequest(verb, parsedUrl, headers);\n        // Only perform retries on reads since writes may not be idempotent.\n        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1\n            ? this._maxRetries + 1\n            : 1;\n        let numTries = 0;\n        let response;\n        while (numTries < maxTries) {\n            response = await this.requestRaw(info, data);\n            // Check if it's an authentication challenge\n            if (response &&\n                response.message &&\n                response.message.statusCode === HttpCodes.Unauthorized) {\n                let authenticationHandler;\n                for (let i = 0; i < this.handlers.length; i++) {\n                    if (this.handlers[i].canHandleAuthentication(response)) {\n                        authenticationHandler = this.handlers[i];\n                        break;\n                    }\n                }\n                if (authenticationHandler) {\n                    return authenticationHandler.handleAuthentication(this, info, data);\n                }\n                else {\n                    // We have received an unauthorized response but have no handlers to handle it.\n                    // Let the response return to the caller.\n                    return response;\n                }\n            }\n            let redirectsRemaining = this._maxRedirects;\n            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&\n                this._allowRedirects &&\n                redirectsRemaining > 0) {\n                const redirectUrl = response.message.headers['location'];\n                if (!redirectUrl) {\n                    // if there's no location to redirect to, we won't\n                    break;\n                }\n                let parsedRedirectUrl = new URL(redirectUrl);\n                if (parsedUrl.protocol == 'https:' &&\n                    parsedUrl.protocol != parsedRedirectUrl.protocol &&\n                    !this._allowRedirectDowngrade) {\n                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                }\n                // we need to finish reading the response before reassigning response\n                // which will leak the open socket.\n                await response.readBody();\n                // strip authorization header if redirected to a different hostname\n                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                    for (let header in headers) {\n                        // header names are case insensitive\n                        if (header.toLowerCase() === 'authorization') {\n                            delete headers[header];\n                        }\n                    }\n                }\n                // let's make the request with the new redirectUrl\n                info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                response = await this.requestRaw(info, data);\n                redirectsRemaining--;\n            }\n            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {\n                // If not a retry code, return immediately instead of retrying\n                return response;\n            }\n            numTries += 1;\n            if (numTries < maxTries) {\n                await response.readBody();\n                await this._performExponentialBackoff(numTries);\n            }\n        }\n        return response;\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return new Promise((resolve, reject) => {\n            let callbackForResult = function (err, res) {\n                if (err) {\n                    reject(err);\n                }\n                resolve(res);\n            };\n            this.requestRawWithCallback(info, data, callbackForResult);\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        let socket;\n        if (typeof data === 'string') {\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        let handleResult = (err, res) => {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        };\n        let req = info.httpModule.request(info.options, (msg) => {\n            let res = new HttpClientResponse(msg);\n            handleResult(null, res);\n        });\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error('Request timeout: ' + info.options.path), null);\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err, null);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        let parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            this.handlers.forEach(handler => {\n                handler.prepareRequest(info.options);\n            });\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        let proxyUrl = pm.getProxyUrl(parsedUrl);\n        let useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (!!agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (!!this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        if (useProxy) {\n            // If using proxy, need tunnel\n            if (!tunnel) {\n                tunnel = require('tunnel');\n            }\n            const agentOptions = {\n                maxSockets: maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: {\n                    ...((proxyUrl.username || proxyUrl.password) && {\n                        proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                    }),\n                    host: proxyUrl.hostname,\n                    port: proxyUrl.port\n                }\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n        return new Promise(resolve => setTimeout(() => resolve(), ms));\n    }\n    static dateTimeDeserializer(key, value) {\n        if (typeof value === 'string') {\n            let a = new Date(value);\n            if (!isNaN(a.valueOf())) {\n                return a;\n            }\n        }\n        return value;\n    }\n    async _processResponse(res, options) {\n        return new Promise(async (resolve, reject) => {\n            const statusCode = res.message.statusCode;\n            const response = {\n                statusCode: statusCode,\n                result: null,\n                headers: {}\n            };\n            // not found leads to null obj returned\n            if (statusCode == HttpCodes.NotFound) {\n                resolve(response);\n            }\n            let obj;\n            let contents;\n            // get the result from the body\n            try {\n                contents = await res.readBody();\n                if (contents && contents.length > 0) {\n                    if (options && options.deserializeDates) {\n                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);\n                    }\n                    else {\n                        obj = JSON.parse(contents);\n                    }\n                    response.result = obj;\n                }\n                response.headers = res.message.headers;\n            }\n            catch (err) {\n                // Invalid resource (contents not json);  leaving result obj null\n            }\n            // note that 3xx redirects are handled by the http layer.\n            if (statusCode > 299) {\n                let msg;\n                // if exception/error in body, attempt to get better error\n                if (obj && obj.message) {\n                    msg = obj.message;\n                }\n                else if (contents && contents.length > 0) {\n                    // it may be the case that the exception is in the body message as string\n                    msg = contents;\n                }\n                else {\n                    msg = 'Failed request: (' + statusCode + ')';\n                }\n                let err = new HttpClientError(msg, statusCode);\n                err.result = response.result;\n                reject(err);\n            }\n            else {\n                resolve(response);\n            }\n        });\n    }\n}\nexports.HttpClient = HttpClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getProxyUrl(reqUrl) {\n    let usingSsl = reqUrl.protocol === 'https:';\n    let proxyUrl;\n    if (checkBypass(reqUrl)) {\n        return proxyUrl;\n    }\n    let proxyVar;\n    if (usingSsl) {\n        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n    }\n    else {\n        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];\n    }\n    if (proxyVar) {\n        proxyUrl = new URL(proxyVar);\n    }\n    return proxyUrl;\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    let upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (let upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n","// Licensed to Elasticsearch B.V. under one or more contributor\n// license agreements. See the NOTICE file distributed with\n// this work for additional information regarding copyright\n// ownership. Elasticsearch B.V. licenses this file to you under\n// the Apache License, Version 2.0 (the \"License\"); you may\n// not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict'\n\nconst { toString } = Object.prototype\n\n// Format an Error instance into ECS-compatible fields on the `ecs` object.\n// https://www.elastic.co/guide/en/ecs/current/ecs-error.html\n// Return true iff the given `err` was an Error object that could be processed.\nfunction formatError (ecsFields, err) {\n  if (!(err instanceof Error)) {\n    ecsFields.err = err\n    return false\n  }\n\n  ecsFields.error = {\n    type: toString.call(err.constructor) === '[object Function]'\n      ? err.constructor.name\n      : err.name,\n    message: err.message,\n    stack_trace: err.stack\n  }\n\n  return true\n}\n\nmodule.exports = { formatError }\n","// Licensed to Elasticsearch B.V. under one or more contributor\n// license agreements. See the NOTICE file distributed with\n// this work for additional information regarding copyright\n// ownership. Elasticsearch B.V. licenses this file to you under\n// the Apache License, Version 2.0 (the \"License\"); you may\n// not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict'\n\n// Write ECS fields for the given HTTP request (expected to be\n// `http.IncomingMessage`-y) into the `ecs` object. This returns true iff\n// the given `req` was a request object it could process.\nfunction formatHttpRequest (ecs, req) {\n  if (req === undefined || req === null || typeof req !== 'object') {\n    return false\n  }\n  if (req.raw && req.raw.req && req.raw.req.httpVersion) {\n    // This looks like a hapi request object (https://hapi.dev/api/#request),\n    // use the raw Node.js http.IncomingMessage that it references.\n    // TODO: Use hapi's already parsed `req.url` for speed.\n    req = req.raw.req\n  }\n  // Use duck-typing to check this is a `http.IncomingMessage`-y object.\n  if (!('httpVersion' in req && 'headers' in req && 'method' in req)) {\n    return false\n  }\n\n  const {\n    id,\n    method,\n    url,\n    headers,\n    hostname,\n    httpVersion,\n    socket\n  } = req\n\n  if (id) {\n    ecs.event = ecs.event || {}\n    ecs.event.id = id\n  }\n\n  ecs.http = ecs.http || {}\n  ecs.http.version = httpVersion\n  ecs.http.request = ecs.http.request || {}\n  ecs.http.request.method = method\n\n  ecs.url = ecs.url || {}\n  ecs.url.full = (socket && socket.encrypted ? 'https://' : 'http://') + headers.host + url\n  const hasQuery = url.indexOf('?')\n  const hasAnchor = url.indexOf('#')\n  if (hasQuery > -1 && hasAnchor > -1) {\n    ecs.url.path = url.slice(0, hasQuery)\n    ecs.url.query = url.slice(hasQuery + 1, hasAnchor)\n    ecs.url.fragment = url.slice(hasAnchor + 1)\n  } else if (hasQuery > -1) {\n    ecs.url.path = url.slice(0, hasQuery)\n    ecs.url.query = url.slice(hasQuery + 1)\n  } else if (hasAnchor > -1) {\n    ecs.url.path = url.slice(0, hasAnchor)\n    ecs.url.fragment = url.slice(hasAnchor + 1)\n  } else {\n    ecs.url.path = url\n  }\n\n  if (hostname) {\n    const [host, port] = hostname.split(':')\n    ecs.url.domain = host\n    if (port) {\n      ecs.url.port = Number(port)\n    }\n  }\n\n  // https://www.elastic.co/guide/en/ecs/current/ecs-client.html\n  ecs.client = ecs.client || {}\n  let ip\n  if (req.ip) {\n    // Express provides req.ip that may handle X-Forward-For processing.\n    // https://expressjs.com/en/5x/api.html#req.ip\n    ip = req.ip\n  } else if (socket && socket.remoteAddress) {\n    ip = socket.remoteAddress\n  }\n  if (ip) {\n    ecs.client.ip = ecs.client.address = ip\n  }\n  if (socket) {\n    ecs.client.port = socket.remotePort\n  }\n\n  const hasHeaders = Object.keys(headers).length > 0\n  if (hasHeaders === true) {\n    // See https://github.com/elastic/ecs/issues/232 for discussion of\n    // specifying headers in ECS.\n    ecs.http.request.headers = Object.assign(ecs.http.request.headers || {}, headers)\n    const cLen = Number(headers['content-length'])\n    if (!isNaN(cLen)) {\n      ecs.http.request.body = ecs.http.request.body || {}\n      ecs.http.request.body.bytes = cLen\n    }\n    if (headers['user-agent']) {\n      ecs.user_agent = ecs.user_agent || {}\n      ecs.user_agent.original = headers['user-agent']\n    }\n  }\n\n  return true\n}\n\n// Write ECS fields for the given HTTP response (expected to be\n// `http.ServiceResponse`-y) into the `ecs` object. This returns true iff\n// the given `res` was a response object it could process.\nfunction formatHttpResponse (ecs, res) {\n  if (res === undefined || res === null || typeof res !== 'object') {\n    return false\n  }\n  if (res.raw && res.raw.res && typeof (res.raw.res.getHeaders) === 'function') {\n    // This looks like a hapi request object (https://hapi.dev/api/#request),\n    // use the raw Node.js http.ServerResponse that it references.\n    res = res.raw.res\n  }\n  // Use duck-typing to check this is a `http.ServerResponse`-y object.\n  if (!('statusCode' in res && typeof res.getHeaders === 'function')) {\n    return false\n  }\n\n  const { statusCode } = res\n  ecs.http = ecs.http || {}\n  ecs.http.response = ecs.http.response || {}\n  ecs.http.response.status_code = statusCode\n\n  const headers = res.getHeaders()\n  const hasHeaders = Object.keys(headers).length > 0\n  if (hasHeaders === true) {\n    // See https://github.com/elastic/ecs/issues/232 for discussion of\n    // specifying headers in ECS.\n    ecs.http.response.headers = Object.assign(ecs.http.response.headers || {}, headers)\n    const cLen = Number(headers['content-length'])\n    if (!isNaN(cLen)) {\n      ecs.http.response.body = ecs.http.response.body || {}\n      ecs.http.response.body.bytes = cLen\n    }\n  }\n\n  return true\n}\n\nmodule.exports = { formatHttpRequest, formatHttpResponse }\n","// Licensed to Elasticsearch B.V. under one or more contributor\n// license agreements. See the NOTICE file distributed with\n// this work for additional information regarding copyright\n// ownership. Elasticsearch B.V. licenses this file to you under\n// the Apache License, Version 2.0 (the \"License\"); you may\n// not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict'\n\nconst stringify = require('./serializer')\nconst errorFormatters = require('./error-formatters')\nconst httpFormatters = require('./http-formatters')\n\nmodule.exports = {\n  version: '1.6.0',\n  stringify,\n  ...errorFormatters,\n  ...httpFormatters\n}\n","// Licensed to Elasticsearch B.V. under one or more contributor\n// license agreements. See the NOTICE file distributed with\n// this work for additional information regarding copyright\n// ownership. Elasticsearch B.V. licenses this file to you under\n// the Apache License, Version 2.0 (the \"License\"); you may\n// not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict'\n\nconst build = require('fast-json-stringify')\n\nconst string = { type: 'string' }\nconst number = { type: 'number' }\n\nconst stringify = build({\n  type: 'object',\n  properties: {\n    '@timestamp': string,\n    'log.level': string,\n    log: {\n      type: 'object',\n      properties: {\n        logger: string\n      }\n    },\n    message: string,\n    ecs: {\n      type: 'object',\n      properties: {\n        version: string\n      }\n    },\n    // https://www.elastic.co/guide/en/ecs/current/ecs-event.html\n    event: {\n      type: 'object',\n      properties: {\n        dataset: string,\n        id: string\n      },\n      additionalProperties: true\n    },\n    // https://www.elastic.co/guide/en/ecs/current/ecs-http.html\n    http: {\n      type: 'object',\n      properties: {\n        version: string,\n        request: {\n          type: 'object',\n          properties: {\n            method: string,\n            headers: {\n              type: 'object',\n              additionalProperties: true\n            },\n            body: {\n              type: 'object',\n              properties: {\n                bytes: number\n              }\n            }\n          }\n        },\n        response: {\n          type: 'object',\n          properties: {\n            status_code: number,\n            headers: {\n              type: 'object',\n              additionalProperties: true\n            },\n            body: {\n              type: 'object',\n              properties: {\n                bytes: number\n              }\n            }\n          }\n        }\n      }\n    },\n    // https://www.elastic.co/guide/en/ecs/current/ecs-url.html\n    url: {\n      type: 'object',\n      properties: {\n        path: string,\n        domain: string,\n        port: number,\n        query: string,\n        fragment: string,\n        full: string\n      }\n    },\n    // https://www.elastic.co/guide/en/ecs/current/ecs-client.html\n    client: {\n      type: 'object',\n      properties: {\n        address: string,\n        ip: string,\n        port: number\n      }\n    },\n    // https://www.elastic.co/guide/en/ecs/current/ecs-user_agent.html\n    user_agent: {\n      type: 'object',\n      properties: {\n        original: string\n      }\n    },\n    // https://www.elastic.co/guide/en/ecs/current/ecs-tracing.html\n    trace: {\n      type: 'object',\n      properties: {\n        id: string\n      }\n    },\n    transaction: {\n      type: 'object',\n      properties: {\n        id: string\n      }\n    },\n    span: {\n      type: 'object',\n      properties: {\n        id: string\n      }\n    },\n    // https://www.elastic.co/guide/en/ecs/current/ecs-service.html\n    service: {\n      type: 'object',\n      properties: {\n        name: string\n      },\n      additionalProperties: true\n    },\n    // https://www.elastic.co/guide/en/ecs/current/ecs-error.html\n    error: {\n      type: 'object',\n      properties: {\n        type: string,\n        message: string,\n        stack_trace: string\n      },\n      additionalProperties: true\n    }\n  },\n  additionalProperties: true\n})\n\nmodule.exports = stringify\n","// Licensed to Elasticsearch B.V. under one or more contributor\n// license agreements. See the NOTICE file distributed with\n// this work for additional information regarding copyright\n// ownership. Elasticsearch B.V. licenses this file to you under\n// the Apache License, Version 2.0 (the \"License\"); you may\n// not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict'\n\nconst {\n  version,\n  formatError,\n  formatHttpRequest,\n  formatHttpResponse\n} = require('@elastic/ecs-helpers')\n\nconst { hasOwnProperty } = Object.prototype\nlet triedElasticApmImport = false\nlet elasticApm = null\n\n// Create options for `pino(...)` that configure it for ecs-logging output.\n//\n// @param {Object} opts - Optional.\n//    - {Boolean} opts.convertErr - Whether to convert a logged `err` field\n//      to ECS error fields. Default true, to match Pino's default of having\n//      an `err` serializer.\n//    - {Boolean} opts.convertReqRes - Whether to convert logged `req` and `res`\n//      HTTP request and response fields to ECS HTTP, User agent, and URL\n//      fields. Default false.\n//    - {Boolean} opts.apmIntegration - Whether to automatically integrate with\n//      Elastic APM (https://github.com/elastic/apm-agent-nodejs). If a started\n//      APM agent is detected, then log records will include the following\n//      fields:\n//        - \"service.name\" - the configured serviceName in the agent\n//        - \"event.dataset\" - set to \"$serviceName.log\" for correlation in Kibana\n//        - \"trace.id\", \"transaction.id\", and \"span.id\" - if there is a current\n//          active trace when the log call is made\n//      Default true.\nfunction createEcsPinoOptions (opts) {\n  let convertErr = true\n  let convertReqRes = false\n  let apmIntegration = true\n  if (opts) {\n    if (hasOwnProperty.call(opts, 'convertErr')) {\n      convertErr = opts.convertErr\n    }\n    if (hasOwnProperty.call(opts, 'convertReqRes')) {\n      convertReqRes = opts.convertReqRes\n    }\n    if (hasOwnProperty.call(opts, 'apmIntegration')) {\n      apmIntegration = opts.apmIntegration\n    }\n  }\n\n  let apm = null\n  let apmServiceName = null\n  if (apmIntegration) {\n    // istanbul ignore if\n    if (opts && opts._elasticApm) {\n      // `opts._elasticApm` is an internal/testing-only option to be used\n      // for testing in the APM agent where the import is a local path\n      // rather than \"elastic-apm-node\".\n      elasticApm = opts._elasticApm\n    } else if (!triedElasticApmImport) {\n      triedElasticApmImport = true\n      // We lazily require this module here instead of at the top-level to\n      // avoid a possible circular-require if the user code does\n      // `require('@elastic/ecs-pino-format')` and has a \"node_modules/\"\n      // where 'elastic-apm-node' shares the same ecs-pino-format install.\n      try {\n        elasticApm = require('elastic-apm-node')\n      } catch (ex) {\n        // Silently ignore.\n      }\n    }\n    if (elasticApm && elasticApm.isStarted && elasticApm.isStarted()) {\n      apm = elasticApm\n      // Elastic APM v3.11.0 added getServiceName(). Fallback to private `apm._conf`.\n      // istanbul ignore next\n      apmServiceName = apm.getServiceName\n        ? apm.getServiceName()\n        : apm._conf.serviceName\n    }\n  }\n\n  let isServiceNameInBindings = false\n  let isEventDatasetInBindings = false\n\n  const ecsPinoOptions = {\n    messageKey: 'message',\n    timestamp: () => `,\"@timestamp\":\"${new Date().toISOString()}\"`,\n    formatters: {\n      level (label, number) {\n        return { 'log.level': label }\n      },\n\n      bindings (bindings) {\n        const {\n          // `pid` and `hostname` are default bindings, unless overriden by\n          // a `base: {...}` passed to logger creation.\n          pid,\n          hostname,\n          // name is defined if `log = pino({name: 'my name', ...})`\n          name,\n          // Warning: silently drop any \"ecs\" value from `base`. See\n          // \"ecs.version\" comment below.\n          ecs,\n          ...ecsBindings\n        } = bindings\n\n        if (pid !== undefined) {\n          // https://www.elastic.co/guide/en/ecs/current/ecs-process.html#field-process-pid\n          ecsBindings.process = { pid: pid }\n        }\n        if (hostname !== undefined) {\n          // https://www.elastic.co/guide/en/ecs/current/ecs-host.html#field-host-hostname\n          ecsBindings.host = { hostname: hostname }\n        }\n        if (name !== undefined) {\n          // https://www.elastic.co/guide/en/ecs/current/ecs-log.html#field-log-logger\n          ecsBindings.log = { logger: name }\n        }\n\n        // Note if service.name & event.dataset are set, to not do so again below.\n        if (bindings.service && bindings.service.name) {\n          isServiceNameInBindings = true\n        }\n        if (bindings.event && bindings.event.dataset) {\n          isEventDatasetInBindings = true\n        }\n\n        return ecsBindings\n      },\n\n      log (obj) {\n        const {\n          req,\n          res,\n          err,\n          ...ecsObj\n        } = obj\n\n        // https://www.elastic.co/guide/en/ecs/current/ecs-ecs.html\n        // For \"ecs.version\" we take a heavier-handed approach, because it is\n        // a require ecs-logging field: overwrite any possible \"ecs\" value from\n        // the log statement. This means we don't need to spend the time\n        // guarding against \"ecs\" being null, Array, Buffer, Date, etc.\n        ecsObj.ecs = { version }\n\n        if (apm) {\n          // A mis-configured APM Agent can be \"started\" but not have a\n          // \"serviceName\".\n          if (apmServiceName) {\n            // Per https://github.com/elastic/ecs-logging/blob/master/spec/spec.json\n            // \"service.name\" and \"event.dataset\" should be automatically set\n            // if not already by the user.\n            if (!isServiceNameInBindings) {\n              const service = ecsObj.service\n              if (service === undefined) {\n                ecsObj.service = { name: apmServiceName }\n              } else if (!isVanillaObject(service)) {\n                // Warning: \"service\" type conflicts with ECS spec. Overwriting.\n                ecsObj.service = { name: apmServiceName }\n              } else if (typeof service.name !== 'string') {\n                ecsObj.service.name = apmServiceName\n              }\n            }\n            if (!isEventDatasetInBindings) {\n              const event = ecsObj.event\n              if (event === undefined) {\n                ecsObj.event = { dataset: apmServiceName + '.log' }\n              } else if (!isVanillaObject(event)) {\n                // Warning: \"event\" type conflicts with ECS spec. Overwriting.\n                ecsObj.event = { dataset: apmServiceName + '.log' }\n              } else if (typeof event.dataset !== 'string') {\n                ecsObj.event.dataset = apmServiceName + '.log'\n              }\n            }\n          }\n\n          // https://www.elastic.co/guide/en/ecs/current/ecs-tracing.html\n          const tx = apm.currentTransaction\n          if (tx) {\n            ecsObj.trace = ecsObj.trace || {}\n            ecsObj.trace.id = tx.traceId\n            ecsObj.transaction = ecsObj.transaction || {}\n            ecsObj.transaction.id = tx.id\n            const span = apm.currentSpan\n            // istanbul ignore else\n            if (span) {\n              ecsObj.span = ecsObj.span || {}\n              ecsObj.span.id = span.id\n            }\n          }\n        }\n\n        // https://www.elastic.co/guide/en/ecs/current/ecs-http.html\n        if (err !== undefined) {\n          if (!convertErr) {\n            ecsObj.err = err\n          } else {\n            formatError(ecsObj, err)\n          }\n        }\n\n        // https://www.elastic.co/guide/en/ecs/current/ecs-http.html\n        if (req !== undefined) {\n          if (!convertReqRes) {\n            ecsObj.req = req\n          } else {\n            formatHttpRequest(ecsObj, req)\n          }\n        }\n        if (res !== undefined) {\n          if (!convertReqRes) {\n            ecsObj.res = res\n          } else {\n            formatHttpResponse(ecsObj, res)\n          }\n        }\n\n        return ecsObj\n      }\n    }\n  }\n\n  return ecsPinoOptions\n}\n\n// Return true if the given arg is a \"vanilla\" object. Roughly the intent is\n// whether this is basic mapping of string keys to values that will serialize\n// as a JSON object.\n//\n// Currently, it excludes Map. The uses above don't really expect a user to:\n//     service = new Map([[\"foo\", \"bar\"]])\n//     log.info({ service }, '...')\n//\n// There are many ways tackle this. See some attempts and benchmarks at:\n// https://gist.github.com/trentm/34131a92eede80fd2109f8febaa56f5a\nfunction isVanillaObject (o) {\n  return (typeof o === 'object' &&\n    (!o.constructor || o.constructor.name === 'Object'))\n}\n\nmodule.exports = createEcsPinoOptions\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'wait_for_completion_timeout', 'keep_alive', 'typed_keys', 'keep_on_completion', 'batched_reduce_size', 'request_cache', 'analyzer', 'analyze_wildcard', 'default_operator', 'df', 'explain', 'stored_fields', 'docvalue_fields', 'from', 'ignore_unavailable', 'ignore_throttled', 'allow_no_indices', 'expand_wildcards', 'lenient', 'preference', 'q', 'routing', 'search_type', 'size', 'sort', '_source', '_source_excludes', '_source_exclude', '_source_includes', '_source_include', 'terminate_after', 'stats', 'suggest_field', 'suggest_mode', 'suggest_size', 'suggest_text', 'timeout', 'track_scores', 'track_total_hits', 'allow_partial_search_results', 'version', 'seq_no_primary_term', 'max_concurrent_shard_requests']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', waitForCompletionTimeout: 'wait_for_completion_timeout', keepAlive: 'keep_alive', typedKeys: 'typed_keys', keepOnCompletion: 'keep_on_completion', batchedReduceSize: 'batched_reduce_size', requestCache: 'request_cache', analyzeWildcard: 'analyze_wildcard', defaultOperator: 'default_operator', storedFields: 'stored_fields', docvalueFields: 'docvalue_fields', ignoreUnavailable: 'ignore_unavailable', ignoreThrottled: 'ignore_throttled', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', searchType: 'search_type', _sourceExcludes: '_source_excludes', _sourceExclude: '_source_exclude', _sourceIncludes: '_source_includes', _sourceInclude: '_source_include', terminateAfter: 'terminate_after', suggestField: 'suggest_field', suggestMode: 'suggest_mode', suggestSize: 'suggest_size', suggestText: 'suggest_text', trackScores: 'track_scores', trackTotalHits: 'track_total_hits', allowPartialSearchResults: 'allow_partial_search_results', seqNoPrimaryTerm: 'seq_no_primary_term', maxConcurrentShardRequests: 'max_concurrent_shard_requests' }\n\nfunction AsyncSearchApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nAsyncSearchApi.prototype.delete = function asyncSearchDeleteApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_async_search' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nAsyncSearchApi.prototype.get = function asyncSearchGetApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_async_search' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nAsyncSearchApi.prototype.status = function asyncSearchStatusApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_async_search' + '/' + 'status' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nAsyncSearchApi.prototype.submit = function asyncSearchSubmitApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_async_search'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + '_async_search'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = AsyncSearchApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction AutoscalingApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nAutoscalingApi.prototype.deleteAutoscalingPolicy = function autoscalingDeleteAutoscalingPolicyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_autoscaling' + '/' + 'policy' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nAutoscalingApi.prototype.getAutoscalingCapacity = function autoscalingGetAutoscalingCapacityApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_autoscaling' + '/' + 'capacity'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nAutoscalingApi.prototype.getAutoscalingPolicy = function autoscalingGetAutoscalingPolicyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_autoscaling' + '/' + 'policy' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nAutoscalingApi.prototype.putAutoscalingPolicy = function autoscalingPutAutoscalingPolicyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_autoscaling' + '/' + 'policy' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(AutoscalingApi.prototype, {\n  delete_autoscaling_policy: { get () { return this.deleteAutoscalingPolicy } },\n  get_autoscaling_capacity: { get () { return this.getAutoscalingCapacity } },\n  get_autoscaling_policy: { get () { return this.getAutoscalingPolicy } },\n  put_autoscaling_policy: { get () { return this.putAutoscalingPolicy } }\n})\n\nmodule.exports = AutoscalingApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['wait_for_active_shards', 'refresh', 'routing', 'timeout', 'type', '_source', '_source_excludes', '_source_exclude', '_source_includes', '_source_include', 'pipeline', 'require_alias', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { waitForActiveShards: 'wait_for_active_shards', _sourceExcludes: '_source_excludes', _sourceExclude: '_source_exclude', _sourceIncludes: '_source_includes', _sourceInclude: '_source_include', requireAlias: 'require_alias', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction bulkApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_bulk'\n  } else if ((index) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_bulk'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + '_bulk'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    bulkBody: body,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = bulkApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['format', 'local', 'h', 'help', 's', 'v', 'expand_wildcards', 'pretty', 'human', 'error_trace', 'source', 'filter_path', 'bytes', 'master_timeout', 'fields', 'time', 'ts', 'health', 'pri', 'include_unloaded_segments', 'allow_no_match', 'allow_no_datafeeds', 'allow_no_jobs', 'from', 'size', 'full_id', 'include_bootstrap', 'active_only', 'detailed', 'index', 'ignore_unavailable', 'nodes', 'actions', 'parent_task_id']\nconst snakeCase = { expandWildcards: 'expand_wildcards', errorTrace: 'error_trace', filterPath: 'filter_path', masterTimeout: 'master_timeout', includeUnloadedSegments: 'include_unloaded_segments', allowNoMatch: 'allow_no_match', allowNoDatafeeds: 'allow_no_datafeeds', allowNoJobs: 'allow_no_jobs', fullId: 'full_id', includeBootstrap: 'include_bootstrap', activeOnly: 'active_only', ignoreUnavailable: 'ignore_unavailable', parentTaskId: 'parent_task_id' }\n\nfunction CatApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nCatApi.prototype.aliases = function catAliasesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'aliases' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'aliases'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.allocation = function catAllocationApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, nodeId, node_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'allocation' + '/' + encodeURIComponent(node_id || nodeId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'allocation'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.count = function catCountApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'count' + '/' + encodeURIComponent(index)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'count'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.fielddata = function catFielddataApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, fields, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((fields) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'fielddata' + '/' + encodeURIComponent(fields)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'fielddata'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.health = function catHealthApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cat' + '/' + 'health'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.help = function catHelpApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cat'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.indices = function catIndicesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'indices' + '/' + encodeURIComponent(index)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'indices'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.master = function catMasterApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cat' + '/' + 'master'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.mlDataFrameAnalytics = function catMlDataFrameAnalyticsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + encodeURIComponent(id)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'ml' + '/' + 'data_frame' + '/' + 'analytics'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.mlDatafeeds = function catMlDatafeedsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, datafeedId, datafeed_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((datafeed_id || datafeedId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'ml' + '/' + 'datafeeds' + '/' + encodeURIComponent(datafeed_id || datafeedId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'ml' + '/' + 'datafeeds'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.mlJobs = function catMlJobsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((job_id || jobId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'ml' + '/' + 'anomaly_detectors'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.mlTrainedModels = function catMlTrainedModelsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, modelId, model_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((model_id || modelId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'ml' + '/' + 'trained_models' + '/' + encodeURIComponent(model_id || modelId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'ml' + '/' + 'trained_models'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.nodeattrs = function catNodeattrsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cat' + '/' + 'nodeattrs'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.nodes = function catNodesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cat' + '/' + 'nodes'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.pendingTasks = function catPendingTasksApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cat' + '/' + 'pending_tasks'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.plugins = function catPluginsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cat' + '/' + 'plugins'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.recovery = function catRecoveryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'recovery' + '/' + encodeURIComponent(index)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'recovery'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.repositories = function catRepositoriesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cat' + '/' + 'repositories'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.segments = function catSegmentsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'segments' + '/' + encodeURIComponent(index)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'segments'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.shards = function catShardsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'shards' + '/' + encodeURIComponent(index)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'shards'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.snapshots = function catSnapshotsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, repository, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((repository) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'snapshots' + '/' + encodeURIComponent(repository)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'snapshots'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.tasks = function catTasksApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cat' + '/' + 'tasks'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.templates = function catTemplatesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'templates' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'templates'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.threadPool = function catThreadPoolApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, threadPoolPatterns, thread_pool_patterns, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((thread_pool_patterns || threadPoolPatterns) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'thread_pool' + '/' + encodeURIComponent(thread_pool_patterns || threadPoolPatterns)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'thread_pool'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCatApi.prototype.transforms = function catTransformsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, transformId, transform_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((transform_id || transformId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'transforms' + '/' + encodeURIComponent(transform_id || transformId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cat' + '/' + 'transforms'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(CatApi.prototype, {\n  ml_data_frame_analytics: { get () { return this.mlDataFrameAnalytics } },\n  ml_datafeeds: { get () { return this.mlDatafeeds } },\n  ml_jobs: { get () { return this.mlJobs } },\n  ml_trained_models: { get () { return this.mlTrainedModels } },\n  pending_tasks: { get () { return this.pendingTasks } },\n  thread_pool: { get () { return this.threadPool } }\n})\n\nmodule.exports = CatApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'wait_for_active_shards']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', waitForActiveShards: 'wait_for_active_shards' }\n\nfunction CcrApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nCcrApi.prototype.deleteAutoFollowPattern = function ccrDeleteAutoFollowPatternApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ccr' + '/' + 'auto_follow' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.follow = function ccrFollowApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + encodeURIComponent(index) + '/' + '_ccr' + '/' + 'follow'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.followInfo = function ccrFollowInfoApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + encodeURIComponent(index) + '/' + '_ccr' + '/' + 'info'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.followStats = function ccrFollowStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + encodeURIComponent(index) + '/' + '_ccr' + '/' + 'stats'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.forgetFollower = function ccrForgetFollowerApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_ccr' + '/' + 'forget_follower'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.getAutoFollowPattern = function ccrGetAutoFollowPatternApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ccr' + '/' + 'auto_follow' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ccr' + '/' + 'auto_follow'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.pauseAutoFollowPattern = function ccrPauseAutoFollowPatternApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ccr' + '/' + 'auto_follow' + '/' + encodeURIComponent(name) + '/' + 'pause'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.pauseFollow = function ccrPauseFollowApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_ccr' + '/' + 'pause_follow'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.putAutoFollowPattern = function ccrPutAutoFollowPatternApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ccr' + '/' + 'auto_follow' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.resumeAutoFollowPattern = function ccrResumeAutoFollowPatternApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ccr' + '/' + 'auto_follow' + '/' + encodeURIComponent(name) + '/' + 'resume'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.resumeFollow = function ccrResumeFollowApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_ccr' + '/' + 'resume_follow'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.stats = function ccrStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_ccr' + '/' + 'stats'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nCcrApi.prototype.unfollow = function ccrUnfollowApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_ccr' + '/' + 'unfollow'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(CcrApi.prototype, {\n  delete_auto_follow_pattern: { get () { return this.deleteAutoFollowPattern } },\n  follow_info: { get () { return this.followInfo } },\n  follow_stats: { get () { return this.followStats } },\n  forget_follower: { get () { return this.forgetFollower } },\n  get_auto_follow_pattern: { get () { return this.getAutoFollowPattern } },\n  pause_auto_follow_pattern: { get () { return this.pauseAutoFollowPattern } },\n  pause_follow: { get () { return this.pauseFollow } },\n  put_auto_follow_pattern: { get () { return this.putAutoFollowPattern } },\n  resume_auto_follow_pattern: { get () { return this.resumeAutoFollowPattern } },\n  resume_follow: { get () { return this.resumeFollow } }\n})\n\nmodule.exports = CcrApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction clearScrollApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, scrollId, scroll_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((scroll_id || scrollId) != null) {\n    if (method == null) method = 'DELETE'\n    path = '/' + '_search' + '/' + 'scroll' + '/' + encodeURIComponent(scroll_id || scrollId)\n  } else {\n    if (method == null) method = 'DELETE'\n    path = '/' + '_search' + '/' + 'scroll'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = clearScrollApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction closePointInTimeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_pit'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = closePointInTimeApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['include_yes_decisions', 'include_disk_info', 'pretty', 'human', 'error_trace', 'source', 'filter_path', 'timeout', 'master_timeout', 'wait_for_removal', 'local', 'flat_settings', 'include_defaults', 'expand_wildcards', 'level', 'wait_for_active_shards', 'wait_for_nodes', 'wait_for_events', 'wait_for_no_relocating_shards', 'wait_for_no_initializing_shards', 'wait_for_status', 'node_ids', 'node_names', 'create', 'dry_run', 'explain', 'retry_failed', 'metric', 'wait_for_metadata_version', 'wait_for_timeout', 'ignore_unavailable', 'allow_no_indices']\nconst snakeCase = { includeYesDecisions: 'include_yes_decisions', includeDiskInfo: 'include_disk_info', errorTrace: 'error_trace', filterPath: 'filter_path', masterTimeout: 'master_timeout', waitForRemoval: 'wait_for_removal', flatSettings: 'flat_settings', includeDefaults: 'include_defaults', expandWildcards: 'expand_wildcards', waitForActiveShards: 'wait_for_active_shards', waitForNodes: 'wait_for_nodes', waitForEvents: 'wait_for_events', waitForNoRelocatingShards: 'wait_for_no_relocating_shards', waitForNoInitializingShards: 'wait_for_no_initializing_shards', waitForStatus: 'wait_for_status', nodeIds: 'node_ids', nodeNames: 'node_names', dryRun: 'dry_run', retryFailed: 'retry_failed', waitForMetadataVersion: 'wait_for_metadata_version', waitForTimeout: 'wait_for_timeout', ignoreUnavailable: 'ignore_unavailable', allowNoIndices: 'allow_no_indices' }\n\nfunction ClusterApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nClusterApi.prototype.allocationExplain = function clusterAllocationExplainApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + '_cluster' + '/' + 'allocation' + '/' + 'explain'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.deleteComponentTemplate = function clusterDeleteComponentTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_component_template' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.deleteVotingConfigExclusions = function clusterDeleteVotingConfigExclusionsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_cluster' + '/' + 'voting_config_exclusions'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.existsComponentTemplate = function clusterExistsComponentTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'HEAD'\n  path = '/' + '_component_template' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.getComponentTemplate = function clusterGetComponentTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_component_template' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_component_template'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.getSettings = function clusterGetSettingsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cluster' + '/' + 'settings'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.health = function clusterHealthApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cluster' + '/' + 'health' + '/' + encodeURIComponent(index)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cluster' + '/' + 'health'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.pendingTasks = function clusterPendingTasksApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_cluster' + '/' + 'pending_tasks'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.postVotingConfigExclusions = function clusterPostVotingConfigExclusionsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_cluster' + '/' + 'voting_config_exclusions'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.putComponentTemplate = function clusterPutComponentTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_component_template' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.putSettings = function clusterPutSettingsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_cluster' + '/' + 'settings'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.remoteInfo = function clusterRemoteInfoApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_remote' + '/' + 'info'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.reroute = function clusterRerouteApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_cluster' + '/' + 'reroute'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.state = function clusterStateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required url components\n  if (params.index != null && (params.metric == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: metric')\n    return handleError(err, callback)\n  }\n\n  let { method, body, metric, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((metric) != null && (index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cluster' + '/' + 'state' + '/' + encodeURIComponent(metric) + '/' + encodeURIComponent(index)\n  } else if ((metric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cluster' + '/' + 'state' + '/' + encodeURIComponent(metric)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cluster' + '/' + 'state'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nClusterApi.prototype.stats = function clusterStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, nodeId, node_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cluster' + '/' + 'stats' + '/' + 'nodes' + '/' + encodeURIComponent(node_id || nodeId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_cluster' + '/' + 'stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(ClusterApi.prototype, {\n  allocation_explain: { get () { return this.allocationExplain } },\n  delete_component_template: { get () { return this.deleteComponentTemplate } },\n  delete_voting_config_exclusions: { get () { return this.deleteVotingConfigExclusions } },\n  exists_component_template: { get () { return this.existsComponentTemplate } },\n  get_component_template: { get () { return this.getComponentTemplate } },\n  get_settings: { get () { return this.getSettings } },\n  pending_tasks: { get () { return this.pendingTasks } },\n  post_voting_config_exclusions: { get () { return this.postVotingConfigExclusions } },\n  put_component_template: { get () { return this.putComponentTemplate } },\n  put_settings: { get () { return this.putSettings } },\n  remote_info: { get () { return this.remoteInfo } }\n})\n\nmodule.exports = ClusterApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['ignore_unavailable', 'ignore_throttled', 'allow_no_indices', 'expand_wildcards', 'min_score', 'preference', 'routing', 'q', 'analyzer', 'analyze_wildcard', 'default_operator', 'df', 'lenient', 'terminate_after', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { ignoreUnavailable: 'ignore_unavailable', ignoreThrottled: 'ignore_throttled', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', minScore: 'min_score', analyzeWildcard: 'analyze_wildcard', defaultOperator: 'default_operator', terminateAfter: 'terminate_after', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction countApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_count'\n  } else if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_count'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_count'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = countApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['wait_for_active_shards', 'refresh', 'routing', 'timeout', 'version', 'version_type', 'pipeline', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { waitForActiveShards: 'wait_for_active_shards', versionType: 'version_type', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction createApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (id) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id) + '/' + '_create'\n  } else {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + '_create' + '/' + encodeURIComponent(id)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = createApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['accept_data_loss', 'timeout', 'master_timeout', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { acceptDataLoss: 'accept_data_loss', masterTimeout: 'master_timeout', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction DanglingIndicesApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nDanglingIndicesApi.prototype.deleteDanglingIndex = function danglingIndicesDeleteDanglingIndexApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index_uuid == null && params.indexUuid == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index_uuid or indexUuid')\n    return handleError(err, callback)\n  }\n\n  let { method, body, indexUuid, index_uuid, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_dangling' + '/' + encodeURIComponent(index_uuid || indexUuid)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nDanglingIndicesApi.prototype.importDanglingIndex = function danglingIndicesImportDanglingIndexApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index_uuid == null && params.indexUuid == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index_uuid or indexUuid')\n    return handleError(err, callback)\n  }\n\n  let { method, body, indexUuid, index_uuid, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_dangling' + '/' + encodeURIComponent(index_uuid || indexUuid)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nDanglingIndicesApi.prototype.listDanglingIndices = function danglingIndicesListDanglingIndicesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_dangling'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(DanglingIndicesApi.prototype, {\n  delete_dangling_index: { get () { return this.deleteDanglingIndex } },\n  import_dangling_index: { get () { return this.importDanglingIndex } },\n  list_dangling_indices: { get () { return this.listDanglingIndices } }\n})\n\nmodule.exports = DanglingIndicesApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['wait_for_active_shards', 'refresh', 'routing', 'timeout', 'if_seq_no', 'if_primary_term', 'version', 'version_type', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { waitForActiveShards: 'wait_for_active_shards', ifSeqNo: 'if_seq_no', ifPrimaryTerm: 'if_primary_term', versionType: 'version_type', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction deleteApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (id) != null) {\n    if (method == null) method = 'DELETE'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id)\n  } else {\n    if (method == null) method = 'DELETE'\n    path = '/' + encodeURIComponent(index) + '/' + '_doc' + '/' + encodeURIComponent(id)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = deleteApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['analyzer', 'analyze_wildcard', 'default_operator', 'df', 'from', 'ignore_unavailable', 'allow_no_indices', 'conflicts', 'expand_wildcards', 'lenient', 'preference', 'q', 'routing', 'scroll', 'search_type', 'search_timeout', 'size', 'max_docs', 'sort', 'terminate_after', 'stats', 'version', 'request_cache', 'refresh', 'timeout', 'wait_for_active_shards', 'scroll_size', 'wait_for_completion', 'requests_per_second', 'slices', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { analyzeWildcard: 'analyze_wildcard', defaultOperator: 'default_operator', ignoreUnavailable: 'ignore_unavailable', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', searchType: 'search_type', searchTimeout: 'search_timeout', maxDocs: 'max_docs', terminateAfter: 'terminate_after', requestCache: 'request_cache', waitForActiveShards: 'wait_for_active_shards', scrollSize: 'scroll_size', waitForCompletion: 'wait_for_completion', requestsPerSecond: 'requests_per_second', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction deleteByQueryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_delete_by_query'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_delete_by_query'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = deleteByQueryApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['requests_per_second', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { requestsPerSecond: 'requests_per_second', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction deleteByQueryRethrottleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.task_id == null && params.taskId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: task_id or taskId')\n    return handleError(err, callback)\n  }\n  if (params.requests_per_second == null && params.requestsPerSecond == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: requests_per_second or requestsPerSecond')\n    return handleError(err, callback)\n  }\n\n  let { method, body, taskId, task_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_delete_by_query' + '/' + encodeURIComponent(task_id || taskId) + '/' + '_rethrottle'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = deleteByQueryRethrottleApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['timeout', 'master_timeout', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { masterTimeout: 'master_timeout', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction deleteScriptApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_scripts' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = deleteScriptApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'wait_for_completion']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', waitForCompletion: 'wait_for_completion' }\n\nfunction EnrichApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nEnrichApi.prototype.deletePolicy = function enrichDeletePolicyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_enrich' + '/' + 'policy' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nEnrichApi.prototype.executePolicy = function enrichExecutePolicyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_enrich' + '/' + 'policy' + '/' + encodeURIComponent(name) + '/' + '_execute'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nEnrichApi.prototype.getPolicy = function enrichGetPolicyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_enrich' + '/' + 'policy' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_enrich' + '/' + 'policy'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nEnrichApi.prototype.putPolicy = function enrichPutPolicyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_enrich' + '/' + 'policy' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nEnrichApi.prototype.stats = function enrichStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_enrich' + '/' + '_stats'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(EnrichApi.prototype, {\n  delete_policy: { get () { return this.deletePolicy } },\n  execute_policy: { get () { return this.executePolicy } },\n  get_policy: { get () { return this.getPolicy } },\n  put_policy: { get () { return this.putPolicy } }\n})\n\nmodule.exports = EnrichApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'wait_for_completion_timeout', 'keep_alive', 'keep_on_completion']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', waitForCompletionTimeout: 'wait_for_completion_timeout', keepAlive: 'keep_alive', keepOnCompletion: 'keep_on_completion' }\n\nfunction EqlApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nEqlApi.prototype.delete = function eqlDeleteApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_eql' + '/' + 'search' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nEqlApi.prototype.get = function eqlGetApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_eql' + '/' + 'search' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nEqlApi.prototype.getStatus = function eqlGetStatusApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_eql' + '/' + 'search' + '/' + 'status' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nEqlApi.prototype.search = function eqlSearchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_eql' + '/' + 'search'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(EqlApi.prototype, {\n  get_status: { get () { return this.getStatus } }\n})\n\nmodule.exports = EqlApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['stored_fields', 'preference', 'realtime', 'refresh', 'routing', '_source', '_source_excludes', '_source_exclude', '_source_includes', '_source_include', 'version', 'version_type', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { storedFields: 'stored_fields', _sourceExcludes: '_source_excludes', _sourceExclude: '_source_exclude', _sourceIncludes: '_source_includes', _sourceInclude: '_source_include', versionType: 'version_type', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction existsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (id) != null) {\n    if (method == null) method = 'HEAD'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id)\n  } else {\n    if (method == null) method = 'HEAD'\n    path = '/' + encodeURIComponent(index) + '/' + '_doc' + '/' + encodeURIComponent(id)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = existsApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['preference', 'realtime', 'refresh', 'routing', '_source', '_source_excludes', '_source_exclude', '_source_includes', '_source_include', 'version', 'version_type', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { _sourceExcludes: '_source_excludes', _sourceExclude: '_source_exclude', _sourceIncludes: '_source_includes', _sourceInclude: '_source_include', versionType: 'version_type', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction existsSourceApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.id != null && (params.type == null || params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: type, index')\n    return handleError(err, callback)\n  } else if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (id) != null) {\n    if (method == null) method = 'HEAD'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id) + '/' + '_source'\n  } else {\n    if (method == null) method = 'HEAD'\n    path = '/' + encodeURIComponent(index) + '/' + '_source' + '/' + encodeURIComponent(id)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = existsSourceApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['analyze_wildcard', 'analyzer', 'default_operator', 'df', 'stored_fields', 'lenient', 'preference', 'q', 'routing', '_source', '_source_excludes', '_source_exclude', '_source_includes', '_source_include', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { analyzeWildcard: 'analyze_wildcard', defaultOperator: 'default_operator', storedFields: 'stored_fields', _sourceExcludes: '_source_excludes', _sourceExclude: '_source_exclude', _sourceIncludes: '_source_includes', _sourceInclude: '_source_include', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction explainApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (id) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id) + '/' + '_explain'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_explain' + '/' + encodeURIComponent(id)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = explainApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['master_timeout', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { masterTimeout: 'master_timeout', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction FeaturesApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nFeaturesApi.prototype.getFeatures = function featuresGetFeaturesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_features'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nFeaturesApi.prototype.resetFeatures = function featuresResetFeaturesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_features' + '/' + '_reset'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(FeaturesApi.prototype, {\n  get_features: { get () { return this.getFeatures } },\n  reset_features: { get () { return this.resetFeatures } }\n})\n\nmodule.exports = FeaturesApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['fields', 'ignore_unavailable', 'allow_no_indices', 'expand_wildcards', 'include_unmapped', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { ignoreUnavailable: 'ignore_unavailable', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', includeUnmapped: 'include_unmapped', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction fieldCapsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_field_caps'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_field_caps'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = fieldCapsApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['wait_for_advance', 'wait_for_index', 'checkpoints', 'timeout', 'pretty', 'human', 'error_trace', 'source', 'filter_path', 'wait_for_checkpoints', 'wait_for_checkpoints_timeout', 'allow_partial_search_results']\nconst snakeCase = { waitForAdvance: 'wait_for_advance', waitForIndex: 'wait_for_index', errorTrace: 'error_trace', filterPath: 'filter_path', waitForCheckpoints: 'wait_for_checkpoints', waitForCheckpointsTimeout: 'wait_for_checkpoints_timeout', allowPartialSearchResults: 'allow_partial_search_results' }\n\nfunction FleetApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nFleetApi.prototype.globalCheckpoints = function fleetGlobalCheckpointsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + encodeURIComponent(index) + '/' + '_fleet' + '/' + 'global_checkpoints'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nFleetApi.prototype.msearch = function fleetMsearchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_fleet' + '/' + '_fleet_msearch'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_fleet' + '/' + '_fleet_msearch'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    bulkBody: body,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nFleetApi.prototype.search = function fleetSearchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_fleet' + '/' + '_fleet_search'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(FleetApi.prototype, {\n  global_checkpoints: { get () { return this.globalCheckpoints } }\n})\n\nmodule.exports = FleetApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['stored_fields', 'preference', 'realtime', 'refresh', 'routing', '_source', '_source_excludes', '_source_exclude', '_source_includes', '_source_include', 'version', 'version_type', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { storedFields: 'stored_fields', _sourceExcludes: '_source_excludes', _sourceExclude: '_source_exclude', _sourceIncludes: '_source_includes', _sourceInclude: '_source_include', versionType: 'version_type', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction getApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (id) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_doc' + '/' + encodeURIComponent(id)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = getApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['master_timeout', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { masterTimeout: 'master_timeout', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction getScriptApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_scripts' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = getScriptApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction getScriptContextApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_script_context'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = getScriptContextApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction getScriptLanguagesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_script_language'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = getScriptLanguagesApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['preference', 'realtime', 'refresh', 'routing', '_source', '_source_excludes', '_source_exclude', '_source_includes', '_source_include', 'version', 'version_type', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { _sourceExcludes: '_source_excludes', _sourceExclude: '_source_exclude', _sourceIncludes: '_source_includes', _sourceInclude: '_source_include', versionType: 'version_type', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction getSourceApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (id) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id) + '/' + '_source'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_source' + '/' + encodeURIComponent(id)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = getSourceApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['routing', 'timeout', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction GraphApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nGraphApi.prototype.explore = function graphExploreApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_graph' + '/' + 'explore'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_graph' + '/' + 'explore'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = GraphApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'only_managed', 'only_errors', 'dry_run']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', onlyManaged: 'only_managed', onlyErrors: 'only_errors', dryRun: 'dry_run' }\n\nfunction IlmApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nIlmApi.prototype.deleteLifecycle = function ilmDeleteLifecycleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.policy == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: policy')\n    return handleError(err, callback)\n  }\n\n  let { method, body, policy, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ilm' + '/' + 'policy' + '/' + encodeURIComponent(policy)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIlmApi.prototype.explainLifecycle = function ilmExplainLifecycleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + encodeURIComponent(index) + '/' + '_ilm' + '/' + 'explain'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIlmApi.prototype.getLifecycle = function ilmGetLifecycleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, policy, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((policy) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ilm' + '/' + 'policy' + '/' + encodeURIComponent(policy)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ilm' + '/' + 'policy'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIlmApi.prototype.getStatus = function ilmGetStatusApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_ilm' + '/' + 'status'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIlmApi.prototype.migrateToDataTiers = function ilmMigrateToDataTiersApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ilm' + '/' + 'migrate_to_data_tiers'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIlmApi.prototype.moveToStep = function ilmMoveToStepApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ilm' + '/' + 'move' + '/' + encodeURIComponent(index)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIlmApi.prototype.putLifecycle = function ilmPutLifecycleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.policy == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: policy')\n    return handleError(err, callback)\n  }\n\n  let { method, body, policy, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ilm' + '/' + 'policy' + '/' + encodeURIComponent(policy)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIlmApi.prototype.removePolicy = function ilmRemovePolicyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_ilm' + '/' + 'remove'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIlmApi.prototype.retry = function ilmRetryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_ilm' + '/' + 'retry'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIlmApi.prototype.start = function ilmStartApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ilm' + '/' + 'start'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIlmApi.prototype.stop = function ilmStopApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ilm' + '/' + 'stop'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(IlmApi.prototype, {\n  delete_lifecycle: { get () { return this.deleteLifecycle } },\n  explain_lifecycle: { get () { return this.explainLifecycle } },\n  get_lifecycle: { get () { return this.getLifecycle } },\n  get_status: { get () { return this.getStatus } },\n  migrate_to_data_tiers: { get () { return this.migrateToDataTiers } },\n  move_to_step: { get () { return this.moveToStep } },\n  put_lifecycle: { get () { return this.putLifecycle } },\n  remove_policy: { get () { return this.removePolicy } }\n})\n\nmodule.exports = IlmApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['wait_for_active_shards', 'op_type', 'refresh', 'routing', 'timeout', 'version', 'version_type', 'if_seq_no', 'if_primary_term', 'pipeline', 'require_alias', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { waitForActiveShards: 'wait_for_active_shards', opType: 'op_type', versionType: 'version_type', ifSeqNo: 'if_seq_no', ifPrimaryTerm: 'if_primary_term', requireAlias: 'require_alias', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction indexApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (id) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id)\n  } else if ((index) != null && (id) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + '_doc' + '/' + encodeURIComponent(id)\n  } else if ((index) != null && (type) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type)\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_doc'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = indexApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['timeout', 'master_timeout', 'ignore_unavailable', 'allow_no_indices', 'expand_wildcards', 'pretty', 'human', 'error_trace', 'source', 'filter_path', 'index', 'fielddata', 'fields', 'query', 'request', 'wait_for_active_shards', 'include_type_name', 'run_expensive_tasks', 'flush', 'local', 'flat_settings', 'include_defaults', 'force', 'wait_if_ongoing', 'max_num_segments', 'only_expunge_deletes', 'create', 'cause', 'write_index_only', 'preserve_existing', 'order', 'detailed', 'active_only', 'dry_run', 'verbose', 'status', 'copy_settings', 'completion_fields', 'fielddata_fields', 'groups', 'level', 'types', 'include_segment_file_sizes', 'include_unloaded_segments', 'forbid_closed_indices', 'wait_for_completion', 'only_ancient_segments', 'explain', 'q', 'analyzer', 'analyze_wildcard', 'default_operator', 'df', 'lenient', 'rewrite', 'all_shards']\nconst snakeCase = { masterTimeout: 'master_timeout', ignoreUnavailable: 'ignore_unavailable', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', errorTrace: 'error_trace', filterPath: 'filter_path', waitForActiveShards: 'wait_for_active_shards', includeTypeName: 'include_type_name', runExpensiveTasks: 'run_expensive_tasks', flatSettings: 'flat_settings', includeDefaults: 'include_defaults', waitIfOngoing: 'wait_if_ongoing', maxNumSegments: 'max_num_segments', onlyExpungeDeletes: 'only_expunge_deletes', writeIndexOnly: 'write_index_only', preserveExisting: 'preserve_existing', activeOnly: 'active_only', dryRun: 'dry_run', copySettings: 'copy_settings', completionFields: 'completion_fields', fielddataFields: 'fielddata_fields', includeSegmentFileSizes: 'include_segment_file_sizes', includeUnloadedSegments: 'include_unloaded_segments', forbidClosedIndices: 'forbid_closed_indices', waitForCompletion: 'wait_for_completion', onlyAncientSegments: 'only_ancient_segments', analyzeWildcard: 'analyze_wildcard', defaultOperator: 'default_operator', allShards: 'all_shards' }\n\nfunction IndicesApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nIndicesApi.prototype.addBlock = function indicesAddBlockApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.block == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: block')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.block != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, block, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + encodeURIComponent(index) + '/' + '_block' + '/' + encodeURIComponent(block)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.analyze = function indicesAnalyzeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_analyze'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_analyze'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.clearCache = function indicesClearCacheApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_cache' + '/' + 'clear'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + '_cache' + '/' + 'clear'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.clone = function indicesCloneApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.target == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: target')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.target != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, target, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + encodeURIComponent(index) + '/' + '_clone' + '/' + encodeURIComponent(target)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.close = function indicesCloseApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_close'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.create = function indicesCreateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + encodeURIComponent(index)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.createDataStream = function indicesCreateDataStreamApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_data_stream' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.dataStreamsStats = function indicesDataStreamsStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_data_stream' + '/' + encodeURIComponent(name) + '/' + '_stats'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_data_stream' + '/' + '_stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.delete = function indicesDeleteApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + encodeURIComponent(index)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.deleteAlias = function indicesDeleteAliasApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.name != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (name) != null) {\n    if (method == null) method = 'DELETE'\n    path = '/' + encodeURIComponent(index) + '/' + '_alias' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'DELETE'\n    path = '/' + encodeURIComponent(index) + '/' + '_aliases' + '/' + encodeURIComponent(name)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.deleteDataStream = function indicesDeleteDataStreamApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_data_stream' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.deleteIndexTemplate = function indicesDeleteIndexTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_index_template' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.deleteTemplate = function indicesDeleteTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_template' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.diskUsage = function indicesDiskUsageApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_disk_usage'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.exists = function indicesExistsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'HEAD'\n  path = '/' + encodeURIComponent(index)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.existsAlias = function indicesExistsAliasApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (name) != null) {\n    if (method == null) method = 'HEAD'\n    path = '/' + encodeURIComponent(index) + '/' + '_alias' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'HEAD'\n    path = '/' + '_alias' + '/' + encodeURIComponent(name)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.existsIndexTemplate = function indicesExistsIndexTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'HEAD'\n  path = '/' + '_index_template' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.existsTemplate = function indicesExistsTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'HEAD'\n  path = '/' + '_template' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.existsType = function indicesExistsTypeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.type == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: type')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'HEAD'\n  path = '/' + encodeURIComponent(index) + '/' + '_mapping' + '/' + encodeURIComponent(type)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.fieldUsageStats = function indicesFieldUsageStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + encodeURIComponent(index) + '/' + '_field_usage_stats'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.flush = function indicesFlushApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_flush'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_flush'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.flushSynced = function indicesFlushSyncedApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_flush' + '/' + 'synced'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.forcemerge = function indicesForcemergeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_forcemerge'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + '_forcemerge'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.freeze = function indicesFreezeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_freeze'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.get = function indicesGetApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + encodeURIComponent(index)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.getAlias = function indicesGetAliasApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_alias' + '/' + encodeURIComponent(name)\n  } else if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_alias' + '/' + encodeURIComponent(name)\n  } else if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_alias'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_alias'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.getDataStream = function indicesGetDataStreamApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_data_stream' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_data_stream'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.getFieldMapping = function indicesGetFieldMappingApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.fields == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: fields')\n    return handleError(err, callback)\n  }\n\n  let { method, body, fields, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (fields) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_mapping' + '/' + encodeURIComponent(type) + '/' + 'field' + '/' + encodeURIComponent(fields)\n  } else if ((index) != null && (fields) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_mapping' + '/' + 'field' + '/' + encodeURIComponent(fields)\n  } else if ((type) != null && (fields) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_mapping' + '/' + encodeURIComponent(type) + '/' + 'field' + '/' + encodeURIComponent(fields)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_mapping' + '/' + 'field' + '/' + encodeURIComponent(fields)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.getIndexTemplate = function indicesGetIndexTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_index_template' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_index_template'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.getMapping = function indicesGetMappingApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_mapping' + '/' + encodeURIComponent(type)\n  } else if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_mapping'\n  } else if ((type) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_mapping' + '/' + encodeURIComponent(type)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_mapping'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.getSettings = function indicesGetSettingsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_settings' + '/' + encodeURIComponent(name)\n  } else if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_settings'\n  } else if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_settings' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_settings'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.getTemplate = function indicesGetTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_template' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_template'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.getUpgrade = function indicesGetUpgradeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + encodeURIComponent(index) + '/' + '_upgrade'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.migrateToDataStream = function indicesMigrateToDataStreamApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_data_stream' + '/' + '_migrate' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.modifyDataStream = function indicesModifyDataStreamApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_data_stream' + '/' + '_modify'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.open = function indicesOpenApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_open'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.promoteDataStream = function indicesPromoteDataStreamApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_data_stream' + '/' + '_promote' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.putAlias = function indicesPutAliasApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.name != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (name) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + '_alias' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + '_aliases' + '/' + encodeURIComponent(name)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.putIndexTemplate = function indicesPutIndexTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_index_template' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.putMapping = function indicesPutMappingApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_mapping'\n  } else if ((index) != null && (type) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + '_mapping' + '/' + encodeURIComponent(type)\n  } else if ((index) != null && (type) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_mappings'\n  } else if ((index) != null && (type) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + '_mappings' + '/' + encodeURIComponent(type)\n  } else if ((index) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + '_mapping'\n  } else if ((type) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + '_mappings' + '/' + encodeURIComponent(type)\n  } else if ((index) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + '_mappings'\n  } else {\n    if (method == null) method = 'PUT'\n    path = '/' + '_mapping' + '/' + encodeURIComponent(type)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.putSettings = function indicesPutSettingsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + encodeURIComponent(index) + '/' + '_settings'\n  } else {\n    if (method == null) method = 'PUT'\n    path = '/' + '_settings'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.putTemplate = function indicesPutTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_template' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.recovery = function indicesRecoveryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_recovery'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_recovery'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.refresh = function indicesRefreshApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_refresh'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_refresh'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.reloadSearchAnalyzers = function indicesReloadSearchAnalyzersApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_reload_search_analyzers'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.resolveIndex = function indicesResolveIndexApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_resolve' + '/' + 'index' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.rollover = function indicesRolloverApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.alias == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: alias')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.new_index != null || params.newIndex != null) && (params.alias == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: alias')\n    return handleError(err, callback)\n  }\n\n  let { method, body, alias, newIndex, new_index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((alias) != null && (new_index || newIndex) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(alias) + '/' + '_rollover' + '/' + encodeURIComponent(new_index || newIndex)\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(alias) + '/' + '_rollover'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.segments = function indicesSegmentsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_segments'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_segments'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.shardStores = function indicesShardStoresApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_shard_stores'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_shard_stores'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.shrink = function indicesShrinkApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.target == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: target')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.target != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, target, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + encodeURIComponent(index) + '/' + '_shrink' + '/' + encodeURIComponent(target)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.simulateIndexTemplate = function indicesSimulateIndexTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_index_template' + '/' + '_simulate_index' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.simulateTemplate = function indicesSimulateTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + '_index_template' + '/' + '_simulate' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + '_index_template' + '/' + '_simulate'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.split = function indicesSplitApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.target == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: target')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.target != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, target, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + encodeURIComponent(index) + '/' + '_split' + '/' + encodeURIComponent(target)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.stats = function indicesStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, metric, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (metric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_stats' + '/' + encodeURIComponent(metric)\n  } else if ((metric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_stats' + '/' + encodeURIComponent(metric)\n  } else if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_stats'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.unfreeze = function indicesUnfreezeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_unfreeze'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.updateAliases = function indicesUpdateAliasesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_aliases'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.upgrade = function indicesUpgradeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_upgrade'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIndicesApi.prototype.validateQuery = function indicesValidateQueryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_validate' + '/' + 'query'\n  } else if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_validate' + '/' + 'query'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_validate' + '/' + 'query'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(IndicesApi.prototype, {\n  add_block: { get () { return this.addBlock } },\n  clear_cache: { get () { return this.clearCache } },\n  create_data_stream: { get () { return this.createDataStream } },\n  data_streams_stats: { get () { return this.dataStreamsStats } },\n  delete_alias: { get () { return this.deleteAlias } },\n  delete_data_stream: { get () { return this.deleteDataStream } },\n  delete_index_template: { get () { return this.deleteIndexTemplate } },\n  delete_template: { get () { return this.deleteTemplate } },\n  disk_usage: { get () { return this.diskUsage } },\n  exists_alias: { get () { return this.existsAlias } },\n  exists_index_template: { get () { return this.existsIndexTemplate } },\n  exists_template: { get () { return this.existsTemplate } },\n  exists_type: { get () { return this.existsType } },\n  field_usage_stats: { get () { return this.fieldUsageStats } },\n  flush_synced: { get () { return this.flushSynced } },\n  get_alias: { get () { return this.getAlias } },\n  get_data_stream: { get () { return this.getDataStream } },\n  get_field_mapping: { get () { return this.getFieldMapping } },\n  get_index_template: { get () { return this.getIndexTemplate } },\n  get_mapping: { get () { return this.getMapping } },\n  get_settings: { get () { return this.getSettings } },\n  get_template: { get () { return this.getTemplate } },\n  get_upgrade: { get () { return this.getUpgrade } },\n  migrate_to_data_stream: { get () { return this.migrateToDataStream } },\n  modify_data_stream: { get () { return this.modifyDataStream } },\n  promote_data_stream: { get () { return this.promoteDataStream } },\n  put_alias: { get () { return this.putAlias } },\n  put_index_template: { get () { return this.putIndexTemplate } },\n  put_mapping: { get () { return this.putMapping } },\n  put_settings: { get () { return this.putSettings } },\n  put_template: { get () { return this.putTemplate } },\n  reload_search_analyzers: { get () { return this.reloadSearchAnalyzers } },\n  resolve_index: { get () { return this.resolveIndex } },\n  shard_stores: { get () { return this.shardStores } },\n  simulate_index_template: { get () { return this.simulateIndexTemplate } },\n  simulate_template: { get () { return this.simulateTemplate } },\n  update_aliases: { get () { return this.updateAliases } },\n  validate_query: { get () { return this.validateQuery } }\n})\n\nmodule.exports = IndicesApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction infoApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = infoApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['master_timeout', 'timeout', 'pretty', 'human', 'error_trace', 'source', 'filter_path', 'summary', 'if_version', 'verbose']\nconst snakeCase = { masterTimeout: 'master_timeout', errorTrace: 'error_trace', filterPath: 'filter_path', ifVersion: 'if_version' }\n\nfunction IngestApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nIngestApi.prototype.deletePipeline = function ingestDeletePipelineApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ingest' + '/' + 'pipeline' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIngestApi.prototype.geoIpStats = function ingestGeoIpStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_ingest' + '/' + 'geoip' + '/' + 'stats'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIngestApi.prototype.getPipeline = function ingestGetPipelineApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ingest' + '/' + 'pipeline' + '/' + encodeURIComponent(id)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ingest' + '/' + 'pipeline'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIngestApi.prototype.processorGrok = function ingestProcessorGrokApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_ingest' + '/' + 'processor' + '/' + 'grok'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIngestApi.prototype.putPipeline = function ingestPutPipelineApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ingest' + '/' + 'pipeline' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nIngestApi.prototype.simulate = function ingestSimulateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ingest' + '/' + 'pipeline' + '/' + encodeURIComponent(id) + '/' + '_simulate'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ingest' + '/' + 'pipeline' + '/' + '_simulate'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(IngestApi.prototype, {\n  delete_pipeline: { get () { return this.deletePipeline } },\n  geo_ip_stats: { get () { return this.geoIpStats } },\n  get_pipeline: { get () { return this.getPipeline } },\n  processor_grok: { get () { return this.processorGrok } },\n  put_pipeline: { get () { return this.putPipeline } }\n})\n\nmodule.exports = IngestApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'local', 'accept_enterprise', 'acknowledge', 'type']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', acceptEnterprise: 'accept_enterprise' }\n\nfunction LicenseApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nLicenseApi.prototype.delete = function licenseDeleteApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_license'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nLicenseApi.prototype.get = function licenseGetApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_license'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nLicenseApi.prototype.getBasicStatus = function licenseGetBasicStatusApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_license' + '/' + 'basic_status'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nLicenseApi.prototype.getTrialStatus = function licenseGetTrialStatusApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_license' + '/' + 'trial_status'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nLicenseApi.prototype.post = function licensePostApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_license'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nLicenseApi.prototype.postStartBasic = function licensePostStartBasicApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_license' + '/' + 'start_basic'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nLicenseApi.prototype.postStartTrial = function licensePostStartTrialApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_license' + '/' + 'start_trial'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(LicenseApi.prototype, {\n  get_basic_status: { get () { return this.getBasicStatus } },\n  get_trial_status: { get () { return this.getTrialStatus } },\n  post_start_basic: { get () { return this.postStartBasic } },\n  post_start_trial: { get () { return this.postStartTrial } }\n})\n\nmodule.exports = LicenseApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction LogstashApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nLogstashApi.prototype.deletePipeline = function logstashDeletePipelineApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_logstash' + '/' + 'pipeline' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nLogstashApi.prototype.getPipeline = function logstashGetPipelineApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_logstash' + '/' + 'pipeline' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nLogstashApi.prototype.putPipeline = function logstashPutPipelineApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_logstash' + '/' + 'pipeline' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(LogstashApi.prototype, {\n  delete_pipeline: { get () { return this.deletePipeline } },\n  get_pipeline: { get () { return this.getPipeline } },\n  put_pipeline: { get () { return this.putPipeline } }\n})\n\nmodule.exports = LogstashApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['stored_fields', 'preference', 'realtime', 'refresh', 'routing', '_source', '_source_excludes', '_source_exclude', '_source_includes', '_source_include', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { storedFields: 'stored_fields', _sourceExcludes: '_source_excludes', _sourceExclude: '_source_exclude', _sourceIncludes: '_source_includes', _sourceInclude: '_source_include', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction mgetApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_mget'\n  } else if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_mget'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_mget'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = mgetApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction MigrationApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nMigrationApi.prototype.deprecations = function migrationDeprecationsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_migration' + '/' + 'deprecations'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_migration' + '/' + 'deprecations'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMigrationApi.prototype.getFeatureUpgradeStatus = function migrationGetFeatureUpgradeStatusApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_migration' + '/' + 'system_features'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMigrationApi.prototype.postFeatureUpgrade = function migrationPostFeatureUpgradeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_migration' + '/' + 'system_features'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(MigrationApi.prototype, {\n  get_feature_upgrade_status: { get () { return this.getFeatureUpgradeStatus } },\n  post_feature_upgrade: { get () { return this.postFeatureUpgrade } }\n})\n\nmodule.exports = MigrationApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['allow_no_match', 'allow_no_jobs', 'force', 'timeout', 'pretty', 'human', 'error_trace', 'source', 'filter_path', 'requests_per_second', 'allow_no_forecasts', 'wait_for_completion', 'lines_to_sample', 'line_merge_size_limit', 'charset', 'format', 'has_header_row', 'column_names', 'delimiter', 'quote', 'should_trim_fields', 'grok_pattern', 'timestamp_field', 'timestamp_format', 'explain', 'calc_interim', 'start', 'end', 'advance_time', 'skip_time', 'duration', 'expires_in', 'max_model_memory', 'expand', 'exclude_interim', 'from', 'size', 'anomaly_score', 'sort', 'desc', 'job_id', 'partition_field_value', 'exclude_generated', 'verbose', 'allow_no_datafeeds', 'influencer_score', 'top_n', 'bucket_span', 'overall_score', 'record_score', 'include', 'include_model_definition', 'decompress_definition', 'tags', 'reset_start', 'reset_end', 'ignore_unavailable', 'allow_no_indices', 'ignore_throttled', 'expand_wildcards', 'defer_definition_decompression', 'reassign', 'delete_intervening_results', 'enabled']\nconst snakeCase = { allowNoMatch: 'allow_no_match', allowNoJobs: 'allow_no_jobs', errorTrace: 'error_trace', filterPath: 'filter_path', requestsPerSecond: 'requests_per_second', allowNoForecasts: 'allow_no_forecasts', waitForCompletion: 'wait_for_completion', linesToSample: 'lines_to_sample', lineMergeSizeLimit: 'line_merge_size_limit', hasHeaderRow: 'has_header_row', columnNames: 'column_names', shouldTrimFields: 'should_trim_fields', grokPattern: 'grok_pattern', timestampField: 'timestamp_field', timestampFormat: 'timestamp_format', calcInterim: 'calc_interim', advanceTime: 'advance_time', skipTime: 'skip_time', expiresIn: 'expires_in', maxModelMemory: 'max_model_memory', excludeInterim: 'exclude_interim', anomalyScore: 'anomaly_score', jobId: 'job_id', partitionFieldValue: 'partition_field_value', excludeGenerated: 'exclude_generated', allowNoDatafeeds: 'allow_no_datafeeds', influencerScore: 'influencer_score', topN: 'top_n', bucketSpan: 'bucket_span', overallScore: 'overall_score', recordScore: 'record_score', includeModelDefinition: 'include_model_definition', decompressDefinition: 'decompress_definition', resetStart: 'reset_start', resetEnd: 'reset_end', ignoreUnavailable: 'ignore_unavailable', allowNoIndices: 'allow_no_indices', ignoreThrottled: 'ignore_throttled', expandWildcards: 'expand_wildcards', deferDefinitionDecompression: 'defer_definition_decompression', deleteInterveningResults: 'delete_intervening_results' }\n\nfunction MlApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nMlApi.prototype.closeJob = function mlCloseJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + '_close'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteCalendar = function mlDeleteCalendarApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.calendar_id == null && params.calendarId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: calendar_id or calendarId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, calendarId, calendar_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ml' + '/' + 'calendars' + '/' + encodeURIComponent(calendar_id || calendarId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteCalendarEvent = function mlDeleteCalendarEventApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.calendar_id == null && params.calendarId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: calendar_id or calendarId')\n    return handleError(err, callback)\n  }\n  if (params.event_id == null && params.eventId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: event_id or eventId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.event_id != null || params.eventId != null) && ((params.calendar_id == null && params.calendarId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: calendar_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, calendarId, calendar_id, eventId, event_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ml' + '/' + 'calendars' + '/' + encodeURIComponent(calendar_id || calendarId) + '/' + 'events' + '/' + encodeURIComponent(event_id || eventId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteCalendarJob = function mlDeleteCalendarJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.calendar_id == null && params.calendarId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: calendar_id or calendarId')\n    return handleError(err, callback)\n  }\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.job_id != null || params.jobId != null) && ((params.calendar_id == null && params.calendarId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: calendar_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, calendarId, calendar_id, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ml' + '/' + 'calendars' + '/' + encodeURIComponent(calendar_id || calendarId) + '/' + 'jobs' + '/' + encodeURIComponent(job_id || jobId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteDataFrameAnalytics = function mlDeleteDataFrameAnalyticsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteDatafeed = function mlDeleteDatafeedApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.datafeed_id == null && params.datafeedId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: datafeed_id or datafeedId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, datafeedId, datafeed_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ml' + '/' + 'datafeeds' + '/' + encodeURIComponent(datafeed_id || datafeedId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteExpiredData = function mlDeleteExpiredDataApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((job_id || jobId) != null) {\n    if (method == null) method = 'DELETE'\n    path = '/' + '_ml' + '/' + '_delete_expired_data' + '/' + encodeURIComponent(job_id || jobId)\n  } else {\n    if (method == null) method = 'DELETE'\n    path = '/' + '_ml' + '/' + '_delete_expired_data'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteFilter = function mlDeleteFilterApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.filter_id == null && params.filterId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: filter_id or filterId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, filterId, filter_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ml' + '/' + 'filters' + '/' + encodeURIComponent(filter_id || filterId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteForecast = function mlDeleteForecastApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.forecast_id != null || params.forecastId != null) && ((params.job_id == null && params.jobId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: job_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, forecastId, forecast_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((job_id || jobId) != null && (forecast_id || forecastId) != null) {\n    if (method == null) method = 'DELETE'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + '_forecast' + '/' + encodeURIComponent(forecast_id || forecastId)\n  } else {\n    if (method == null) method = 'DELETE'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + '_forecast'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteJob = function mlDeleteJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteModelSnapshot = function mlDeleteModelSnapshotApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n  if (params.snapshot_id == null && params.snapshotId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot_id or snapshotId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.snapshot_id != null || params.snapshotId != null) && ((params.job_id == null && params.jobId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: job_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, snapshotId, snapshot_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'model_snapshots' + '/' + encodeURIComponent(snapshot_id || snapshotId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteTrainedModel = function mlDeleteTrainedModelApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.model_id == null && params.modelId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: model_id or modelId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, modelId, model_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ml' + '/' + 'trained_models' + '/' + encodeURIComponent(model_id || modelId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.deleteTrainedModelAlias = function mlDeleteTrainedModelAliasApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.model_alias == null && params.modelAlias == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: model_alias or modelAlias')\n    return handleError(err, callback)\n  }\n  if (params.model_id == null && params.modelId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: model_id or modelId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.model_alias != null || params.modelAlias != null) && ((params.model_id == null && params.modelId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: model_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, modelAlias, model_alias, modelId, model_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_ml' + '/' + 'trained_models' + '/' + encodeURIComponent(model_id || modelId) + '/' + 'model_aliases' + '/' + encodeURIComponent(model_alias || modelAlias)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.estimateModelMemory = function mlEstimateModelMemoryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + '_estimate_model_memory'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.evaluateDataFrame = function mlEvaluateDataFrameApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'data_frame' + '/' + '_evaluate'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.explainDataFrameAnalytics = function mlExplainDataFrameAnalyticsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + encodeURIComponent(id) + '/' + '_explain'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + '_explain'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.findFileStructure = function mlFindFileStructureApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'find_file_structure'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    bulkBody: body,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.flushJob = function mlFlushJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + '_flush'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.forecast = function mlForecastApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + '_forecast'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getBuckets = function mlGetBucketsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.timestamp != null && ((params.job_id == null && params.jobId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: job_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, timestamp, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((job_id || jobId) != null && (timestamp) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'results' + '/' + 'buckets' + '/' + encodeURIComponent(timestamp)\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'results' + '/' + 'buckets'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getCalendarEvents = function mlGetCalendarEventsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.calendar_id == null && params.calendarId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: calendar_id or calendarId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, calendarId, calendar_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_ml' + '/' + 'calendars' + '/' + encodeURIComponent(calendar_id || calendarId) + '/' + 'events'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getCalendars = function mlGetCalendarsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, calendarId, calendar_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((calendar_id || calendarId) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'calendars' + '/' + encodeURIComponent(calendar_id || calendarId)\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'calendars'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getCategories = function mlGetCategoriesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.category_id != null || params.categoryId != null) && ((params.job_id == null && params.jobId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: job_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, categoryId, category_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((job_id || jobId) != null && (category_id || categoryId) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'results' + '/' + 'categories' + '/' + encodeURIComponent(category_id || categoryId)\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'results' + '/' + 'categories'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getDataFrameAnalytics = function mlGetDataFrameAnalyticsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + encodeURIComponent(id)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getDataFrameAnalyticsStats = function mlGetDataFrameAnalyticsStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + encodeURIComponent(id) + '/' + '_stats'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + '_stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getDatafeedStats = function mlGetDatafeedStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, datafeedId, datafeed_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((datafeed_id || datafeedId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'datafeeds' + '/' + encodeURIComponent(datafeed_id || datafeedId) + '/' + '_stats'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'datafeeds' + '/' + '_stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getDatafeeds = function mlGetDatafeedsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, datafeedId, datafeed_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((datafeed_id || datafeedId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'datafeeds' + '/' + encodeURIComponent(datafeed_id || datafeedId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'datafeeds'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getFilters = function mlGetFiltersApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, filterId, filter_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((filter_id || filterId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'filters' + '/' + encodeURIComponent(filter_id || filterId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'filters'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getInfluencers = function mlGetInfluencersApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'results' + '/' + 'influencers'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getJobStats = function mlGetJobStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((job_id || jobId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + '_stats'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + '_stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getJobs = function mlGetJobsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((job_id || jobId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getModelSnapshotUpgradeStats = function mlGetModelSnapshotUpgradeStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n  if (params.snapshot_id == null && params.snapshotId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot_id or snapshotId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.snapshot_id != null || params.snapshotId != null) && ((params.job_id == null && params.jobId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: job_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, snapshotId, snapshot_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'model_snapshots' + '/' + encodeURIComponent(snapshot_id || snapshotId) + '/' + '_upgrade' + '/' + '_stats'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getModelSnapshots = function mlGetModelSnapshotsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.snapshot_id != null || params.snapshotId != null) && ((params.job_id == null && params.jobId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: job_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, snapshotId, snapshot_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((job_id || jobId) != null && (snapshot_id || snapshotId) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'model_snapshots' + '/' + encodeURIComponent(snapshot_id || snapshotId)\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'model_snapshots'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getOverallBuckets = function mlGetOverallBucketsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'results' + '/' + 'overall_buckets'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getRecords = function mlGetRecordsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'results' + '/' + 'records'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getTrainedModels = function mlGetTrainedModelsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, modelId, model_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((model_id || modelId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'trained_models' + '/' + encodeURIComponent(model_id || modelId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'trained_models'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.getTrainedModelsStats = function mlGetTrainedModelsStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, modelId, model_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((model_id || modelId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'trained_models' + '/' + encodeURIComponent(model_id || modelId) + '/' + '_stats'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_ml' + '/' + 'trained_models' + '/' + '_stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.info = function mlInfoApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_ml' + '/' + 'info'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.openJob = function mlOpenJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + '_open'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.postCalendarEvents = function mlPostCalendarEventsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.calendar_id == null && params.calendarId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: calendar_id or calendarId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, calendarId, calendar_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'calendars' + '/' + encodeURIComponent(calendar_id || calendarId) + '/' + 'events'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.postData = function mlPostDataApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + '_data'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    bulkBody: body,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.previewDataFrameAnalytics = function mlPreviewDataFrameAnalyticsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + encodeURIComponent(id) + '/' + '_preview'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + '_preview'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.previewDatafeed = function mlPreviewDatafeedApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, datafeedId, datafeed_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((datafeed_id || datafeedId) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'datafeeds' + '/' + encodeURIComponent(datafeed_id || datafeedId) + '/' + '_preview'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_ml' + '/' + 'datafeeds' + '/' + '_preview'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.putCalendar = function mlPutCalendarApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.calendar_id == null && params.calendarId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: calendar_id or calendarId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, calendarId, calendar_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ml' + '/' + 'calendars' + '/' + encodeURIComponent(calendar_id || calendarId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.putCalendarJob = function mlPutCalendarJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.calendar_id == null && params.calendarId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: calendar_id or calendarId')\n    return handleError(err, callback)\n  }\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.job_id != null || params.jobId != null) && ((params.calendar_id == null && params.calendarId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: calendar_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, calendarId, calendar_id, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ml' + '/' + 'calendars' + '/' + encodeURIComponent(calendar_id || calendarId) + '/' + 'jobs' + '/' + encodeURIComponent(job_id || jobId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.putDataFrameAnalytics = function mlPutDataFrameAnalyticsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.putDatafeed = function mlPutDatafeedApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.datafeed_id == null && params.datafeedId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: datafeed_id or datafeedId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, datafeedId, datafeed_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ml' + '/' + 'datafeeds' + '/' + encodeURIComponent(datafeed_id || datafeedId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.putFilter = function mlPutFilterApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.filter_id == null && params.filterId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: filter_id or filterId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, filterId, filter_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ml' + '/' + 'filters' + '/' + encodeURIComponent(filter_id || filterId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.putJob = function mlPutJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.putTrainedModel = function mlPutTrainedModelApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.model_id == null && params.modelId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: model_id or modelId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, modelId, model_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ml' + '/' + 'trained_models' + '/' + encodeURIComponent(model_id || modelId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.putTrainedModelAlias = function mlPutTrainedModelAliasApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.model_alias == null && params.modelAlias == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: model_alias or modelAlias')\n    return handleError(err, callback)\n  }\n  if (params.model_id == null && params.modelId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: model_id or modelId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.model_alias != null || params.modelAlias != null) && ((params.model_id == null && params.modelId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: model_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, modelAlias, model_alias, modelId, model_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_ml' + '/' + 'trained_models' + '/' + encodeURIComponent(model_id || modelId) + '/' + 'model_aliases' + '/' + encodeURIComponent(model_alias || modelAlias)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.resetJob = function mlResetJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + '_reset'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.revertModelSnapshot = function mlRevertModelSnapshotApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n  if (params.snapshot_id == null && params.snapshotId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot_id or snapshotId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.snapshot_id != null || params.snapshotId != null) && ((params.job_id == null && params.jobId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: job_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, snapshotId, snapshot_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'model_snapshots' + '/' + encodeURIComponent(snapshot_id || snapshotId) + '/' + '_revert'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.setUpgradeMode = function mlSetUpgradeModeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'set_upgrade_mode'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.startDataFrameAnalytics = function mlStartDataFrameAnalyticsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + encodeURIComponent(id) + '/' + '_start'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.startDatafeed = function mlStartDatafeedApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.datafeed_id == null && params.datafeedId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: datafeed_id or datafeedId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, datafeedId, datafeed_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'datafeeds' + '/' + encodeURIComponent(datafeed_id || datafeedId) + '/' + '_start'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.stopDataFrameAnalytics = function mlStopDataFrameAnalyticsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + encodeURIComponent(id) + '/' + '_stop'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.stopDatafeed = function mlStopDatafeedApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.datafeed_id == null && params.datafeedId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: datafeed_id or datafeedId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, datafeedId, datafeed_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'datafeeds' + '/' + encodeURIComponent(datafeed_id || datafeedId) + '/' + '_stop'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.updateDataFrameAnalytics = function mlUpdateDataFrameAnalyticsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'data_frame' + '/' + 'analytics' + '/' + encodeURIComponent(id) + '/' + '_update'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.updateDatafeed = function mlUpdateDatafeedApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.datafeed_id == null && params.datafeedId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: datafeed_id or datafeedId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, datafeedId, datafeed_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'datafeeds' + '/' + encodeURIComponent(datafeed_id || datafeedId) + '/' + '_update'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.updateFilter = function mlUpdateFilterApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.filter_id == null && params.filterId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: filter_id or filterId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, filterId, filter_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'filters' + '/' + encodeURIComponent(filter_id || filterId) + '/' + '_update'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.updateJob = function mlUpdateJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + '_update'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.updateModelSnapshot = function mlUpdateModelSnapshotApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n  if (params.snapshot_id == null && params.snapshotId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot_id or snapshotId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.snapshot_id != null || params.snapshotId != null) && ((params.job_id == null && params.jobId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: job_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, snapshotId, snapshot_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'model_snapshots' + '/' + encodeURIComponent(snapshot_id || snapshotId) + '/' + '_update'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.upgradeJobSnapshot = function mlUpgradeJobSnapshotApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.job_id == null && params.jobId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: job_id or jobId')\n    return handleError(err, callback)\n  }\n  if (params.snapshot_id == null && params.snapshotId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot_id or snapshotId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.snapshot_id != null || params.snapshotId != null) && ((params.job_id == null && params.jobId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: job_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, jobId, job_id, snapshotId, snapshot_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + encodeURIComponent(job_id || jobId) + '/' + 'model_snapshots' + '/' + encodeURIComponent(snapshot_id || snapshotId) + '/' + '_upgrade'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.validate = function mlValidateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + '_validate'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nMlApi.prototype.validateDetector = function mlValidateDetectorApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_ml' + '/' + 'anomaly_detectors' + '/' + '_validate' + '/' + 'detector'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(MlApi.prototype, {\n  close_job: { get () { return this.closeJob } },\n  delete_calendar: { get () { return this.deleteCalendar } },\n  delete_calendar_event: { get () { return this.deleteCalendarEvent } },\n  delete_calendar_job: { get () { return this.deleteCalendarJob } },\n  delete_data_frame_analytics: { get () { return this.deleteDataFrameAnalytics } },\n  delete_datafeed: { get () { return this.deleteDatafeed } },\n  delete_expired_data: { get () { return this.deleteExpiredData } },\n  delete_filter: { get () { return this.deleteFilter } },\n  delete_forecast: { get () { return this.deleteForecast } },\n  delete_job: { get () { return this.deleteJob } },\n  delete_model_snapshot: { get () { return this.deleteModelSnapshot } },\n  delete_trained_model: { get () { return this.deleteTrainedModel } },\n  delete_trained_model_alias: { get () { return this.deleteTrainedModelAlias } },\n  estimate_model_memory: { get () { return this.estimateModelMemory } },\n  evaluate_data_frame: { get () { return this.evaluateDataFrame } },\n  explain_data_frame_analytics: { get () { return this.explainDataFrameAnalytics } },\n  find_file_structure: { get () { return this.findFileStructure } },\n  flush_job: { get () { return this.flushJob } },\n  get_buckets: { get () { return this.getBuckets } },\n  get_calendar_events: { get () { return this.getCalendarEvents } },\n  get_calendars: { get () { return this.getCalendars } },\n  get_categories: { get () { return this.getCategories } },\n  get_data_frame_analytics: { get () { return this.getDataFrameAnalytics } },\n  get_data_frame_analytics_stats: { get () { return this.getDataFrameAnalyticsStats } },\n  get_datafeed_stats: { get () { return this.getDatafeedStats } },\n  get_datafeeds: { get () { return this.getDatafeeds } },\n  get_filters: { get () { return this.getFilters } },\n  get_influencers: { get () { return this.getInfluencers } },\n  get_job_stats: { get () { return this.getJobStats } },\n  get_jobs: { get () { return this.getJobs } },\n  get_model_snapshot_upgrade_stats: { get () { return this.getModelSnapshotUpgradeStats } },\n  get_model_snapshots: { get () { return this.getModelSnapshots } },\n  get_overall_buckets: { get () { return this.getOverallBuckets } },\n  get_records: { get () { return this.getRecords } },\n  get_trained_models: { get () { return this.getTrainedModels } },\n  get_trained_models_stats: { get () { return this.getTrainedModelsStats } },\n  open_job: { get () { return this.openJob } },\n  post_calendar_events: { get () { return this.postCalendarEvents } },\n  post_data: { get () { return this.postData } },\n  preview_data_frame_analytics: { get () { return this.previewDataFrameAnalytics } },\n  preview_datafeed: { get () { return this.previewDatafeed } },\n  put_calendar: { get () { return this.putCalendar } },\n  put_calendar_job: { get () { return this.putCalendarJob } },\n  put_data_frame_analytics: { get () { return this.putDataFrameAnalytics } },\n  put_datafeed: { get () { return this.putDatafeed } },\n  put_filter: { get () { return this.putFilter } },\n  put_job: { get () { return this.putJob } },\n  put_trained_model: { get () { return this.putTrainedModel } },\n  put_trained_model_alias: { get () { return this.putTrainedModelAlias } },\n  reset_job: { get () { return this.resetJob } },\n  revert_model_snapshot: { get () { return this.revertModelSnapshot } },\n  set_upgrade_mode: { get () { return this.setUpgradeMode } },\n  start_data_frame_analytics: { get () { return this.startDataFrameAnalytics } },\n  start_datafeed: { get () { return this.startDatafeed } },\n  stop_data_frame_analytics: { get () { return this.stopDataFrameAnalytics } },\n  stop_datafeed: { get () { return this.stopDatafeed } },\n  update_data_frame_analytics: { get () { return this.updateDataFrameAnalytics } },\n  update_datafeed: { get () { return this.updateDatafeed } },\n  update_filter: { get () { return this.updateFilter } },\n  update_job: { get () { return this.updateJob } },\n  update_model_snapshot: { get () { return this.updateModelSnapshot } },\n  upgrade_job_snapshot: { get () { return this.upgradeJobSnapshot } },\n  validate_detector: { get () { return this.validateDetector } }\n})\n\nmodule.exports = MlApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['system_id', 'system_api_version', 'interval', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { systemId: 'system_id', systemApiVersion: 'system_api_version', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction MonitoringApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nMonitoringApi.prototype.bulk = function monitoringBulkApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((type) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + '_monitoring' + '/' + encodeURIComponent(type) + '/' + 'bulk'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + '_monitoring' + '/' + 'bulk'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    bulkBody: body,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = MonitoringApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['search_type', 'max_concurrent_searches', 'typed_keys', 'pre_filter_shard_size', 'max_concurrent_shard_requests', 'rest_total_hits_as_int', 'ccs_minimize_roundtrips', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { searchType: 'search_type', maxConcurrentSearches: 'max_concurrent_searches', typedKeys: 'typed_keys', preFilterShardSize: 'pre_filter_shard_size', maxConcurrentShardRequests: 'max_concurrent_shard_requests', restTotalHitsAsInt: 'rest_total_hits_as_int', ccsMinimizeRoundtrips: 'ccs_minimize_roundtrips', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction msearchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_msearch'\n  } else if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_msearch'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_msearch'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    bulkBody: body,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = msearchApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['search_type', 'typed_keys', 'max_concurrent_searches', 'rest_total_hits_as_int', 'ccs_minimize_roundtrips', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { searchType: 'search_type', typedKeys: 'typed_keys', maxConcurrentSearches: 'max_concurrent_searches', restTotalHitsAsInt: 'rest_total_hits_as_int', ccsMinimizeRoundtrips: 'ccs_minimize_roundtrips', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction msearchTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_msearch' + '/' + 'template'\n  } else if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_msearch' + '/' + 'template'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_msearch' + '/' + 'template'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    bulkBody: body,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = msearchTemplateApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['ids', 'term_statistics', 'field_statistics', 'fields', 'offsets', 'positions', 'payloads', 'preference', 'routing', 'realtime', 'version', 'version_type', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { termStatistics: 'term_statistics', fieldStatistics: 'field_statistics', versionType: 'version_type', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction mtermvectorsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_mtermvectors'\n  } else if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_mtermvectors'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_mtermvectors'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = mtermvectorsApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'interval', 'snapshots', 'threads', 'ignore_idle_threads', 'type', 'sort', 'timeout', 'flat_settings', 'completion_fields', 'fielddata_fields', 'fields', 'groups', 'level', 'types', 'include_segment_file_sizes', 'include_unloaded_segments']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', ignoreIdleThreads: 'ignore_idle_threads', flatSettings: 'flat_settings', completionFields: 'completion_fields', fielddataFields: 'fielddata_fields', includeSegmentFileSizes: 'include_segment_file_sizes', includeUnloadedSegments: 'include_unloaded_segments' }\n\nfunction NodesApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nNodesApi.prototype.clearRepositoriesMeteringArchive = function nodesClearRepositoriesMeteringArchiveApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.node_id == null && params.nodeId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId')\n    return handleError(err, callback)\n  }\n  if (params.max_archive_version == null && params.maxArchiveVersion == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: max_archive_version or maxArchiveVersion')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.max_archive_version != null || params.maxArchiveVersion != null) && ((params.node_id == null && params.nodeId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: node_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, nodeId, node_id, maxArchiveVersion, max_archive_version, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + '_repositories_metering' + '/' + encodeURIComponent(max_archive_version || maxArchiveVersion)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nNodesApi.prototype.getRepositoriesMeteringInfo = function nodesGetRepositoriesMeteringInfoApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.node_id == null && params.nodeId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, nodeId, node_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + '_repositories_metering'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nNodesApi.prototype.hotThreads = function nodesHotThreadsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, nodeId, node_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'hot_threads'\n  } else if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cluster' + '/' + 'nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'hotthreads'\n  } else if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'hotthreads'\n  } else if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_cluster' + '/' + 'nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'hot_threads'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + 'hot_threads'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nNodesApi.prototype.info = function nodesInfoApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, nodeId, node_id, metric, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((node_id || nodeId) != null && (metric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + encodeURIComponent(metric)\n  } else if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId)\n  } else if ((metric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(metric)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nNodesApi.prototype.reloadSecureSettings = function nodesReloadSecureSettingsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, nodeId, node_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((node_id || nodeId) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'reload_secure_settings'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + '_nodes' + '/' + 'reload_secure_settings'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nNodesApi.prototype.stats = function nodesStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, nodeId, node_id, metric, indexMetric, index_metric, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((node_id || nodeId) != null && (metric) != null && (index_metric || indexMetric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'stats' + '/' + encodeURIComponent(metric) + '/' + encodeURIComponent(index_metric || indexMetric)\n  } else if ((node_id || nodeId) != null && (metric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'stats' + '/' + encodeURIComponent(metric)\n  } else if ((metric) != null && (index_metric || indexMetric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + 'stats' + '/' + encodeURIComponent(metric) + '/' + encodeURIComponent(index_metric || indexMetric)\n  } else if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'stats'\n  } else if ((metric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + 'stats' + '/' + encodeURIComponent(metric)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + 'stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nNodesApi.prototype.usage = function nodesUsageApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, nodeId, node_id, metric, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((node_id || nodeId) != null && (metric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'usage' + '/' + encodeURIComponent(metric)\n  } else if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'usage'\n  } else if ((metric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + 'usage' + '/' + encodeURIComponent(metric)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + 'usage'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(NodesApi.prototype, {\n  clear_repositories_metering_archive: { get () { return this.clearRepositoriesMeteringArchive } },\n  get_repositories_metering_info: { get () { return this.getRepositoriesMeteringInfo } },\n  hot_threads: { get () { return this.hotThreads } },\n  reload_secure_settings: { get () { return this.reloadSecureSettings } }\n})\n\nmodule.exports = NodesApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['preference', 'routing', 'ignore_unavailable', 'expand_wildcards', 'keep_alive', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { ignoreUnavailable: 'ignore_unavailable', expandWildcards: 'expand_wildcards', keepAlive: 'keep_alive', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction openPointInTimeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.keep_alive == null && params.keepAlive == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: keep_alive or keepAlive')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_pit'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = openPointInTimeApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction pingApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'HEAD'\n  path = '/'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = pingApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['timeout', 'master_timeout', 'context', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { masterTimeout: 'master_timeout', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction putScriptApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.context != null && (params.id == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, context, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null && (context) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + '_scripts' + '/' + encodeURIComponent(id) + '/' + encodeURIComponent(context)\n  } else {\n    if (method == null) method = 'PUT'\n    path = '/' + '_scripts' + '/' + encodeURIComponent(id)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = putScriptApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['ignore_unavailable', 'allow_no_indices', 'expand_wildcards', 'search_type', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { ignoreUnavailable: 'ignore_unavailable', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', searchType: 'search_type', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction rankEvalApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_rank_eval'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_rank_eval'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = rankEvalApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['refresh', 'timeout', 'wait_for_active_shards', 'wait_for_completion', 'requests_per_second', 'scroll', 'slices', 'max_docs', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { waitForActiveShards: 'wait_for_active_shards', waitForCompletion: 'wait_for_completion', requestsPerSecond: 'requests_per_second', maxDocs: 'max_docs', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction reindexApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_reindex'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = reindexApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['requests_per_second', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { requestsPerSecond: 'requests_per_second', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction reindexRethrottleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.task_id == null && params.taskId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: task_id or taskId')\n    return handleError(err, callback)\n  }\n  if (params.requests_per_second == null && params.requestsPerSecond == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: requests_per_second or requestsPerSecond')\n    return handleError(err, callback)\n  }\n\n  let { method, body, taskId, task_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_reindex' + '/' + encodeURIComponent(task_id || taskId) + '/' + '_rethrottle'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = reindexRethrottleApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction renderSearchTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_render' + '/' + 'template' + '/' + encodeURIComponent(id)\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_render' + '/' + 'template'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = renderSearchTemplateApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'typed_keys', 'rest_total_hits_as_int', 'wait_for_completion', 'timeout']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', typedKeys: 'typed_keys', restTotalHitsAsInt: 'rest_total_hits_as_int', waitForCompletion: 'wait_for_completion' }\n\nfunction RollupApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nRollupApi.prototype.deleteJob = function rollupDeleteJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nRollupApi.prototype.getJobs = function rollupGetJobsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_rollup' + '/' + 'job'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nRollupApi.prototype.getRollupCaps = function rollupGetRollupCapsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_rollup' + '/' + 'data' + '/' + encodeURIComponent(id)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_rollup' + '/' + 'data'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nRollupApi.prototype.getRollupIndexCaps = function rollupGetRollupIndexCapsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + encodeURIComponent(index) + '/' + '_rollup' + '/' + 'data'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nRollupApi.prototype.putJob = function rollupPutJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nRollupApi.prototype.rollup = function rollupRollupApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.rollup_index == null && params.rollupIndex == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: rollup_index or rollupIndex')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.rollup_index != null || params.rollupIndex != null) && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, rollupIndex, rollup_index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_rollup' + '/' + encodeURIComponent(rollup_index || rollupIndex)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nRollupApi.prototype.rollupSearch = function rollupRollupSearchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_rollup_search'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_rollup_search'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nRollupApi.prototype.startJob = function rollupStartJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id) + '/' + '_start'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nRollupApi.prototype.stopJob = function rollupStopJobApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id) + '/' + '_stop'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(RollupApi.prototype, {\n  delete_job: { get () { return this.deleteJob } },\n  get_jobs: { get () { return this.getJobs } },\n  get_rollup_caps: { get () { return this.getRollupCaps } },\n  get_rollup_index_caps: { get () { return this.getRollupIndexCaps } },\n  put_job: { get () { return this.putJob } },\n  rollup_search: { get () { return this.rollupSearch } },\n  start_job: { get () { return this.startJob } },\n  stop_job: { get () { return this.stopJob } }\n})\n\nmodule.exports = RollupApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction scriptsPainlessExecuteApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + '_scripts' + '/' + 'painless' + '/' + '_execute'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = scriptsPainlessExecuteApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['scroll', 'scroll_id', 'rest_total_hits_as_int', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { scrollId: 'scroll_id', restTotalHitsAsInt: 'rest_total_hits_as_int', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction scrollApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, scrollId, scroll_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((scroll_id || scrollId) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_search' + '/' + 'scroll' + '/' + encodeURIComponent(scroll_id || scrollId)\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_search' + '/' + 'scroll'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = scrollApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['analyzer', 'analyze_wildcard', 'ccs_minimize_roundtrips', 'default_operator', 'df', 'explain', 'stored_fields', 'docvalue_fields', 'from', 'ignore_unavailable', 'ignore_throttled', 'allow_no_indices', 'expand_wildcards', 'lenient', 'preference', 'q', 'routing', 'scroll', 'search_type', 'size', 'sort', '_source', '_source_excludes', '_source_exclude', '_source_includes', '_source_include', 'terminate_after', 'stats', 'suggest_field', 'suggest_mode', 'suggest_size', 'suggest_text', 'timeout', 'track_scores', 'track_total_hits', 'allow_partial_search_results', 'typed_keys', 'version', 'seq_no_primary_term', 'request_cache', 'batched_reduce_size', 'max_concurrent_shard_requests', 'pre_filter_shard_size', 'rest_total_hits_as_int', 'min_compatible_shard_node', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { analyzeWildcard: 'analyze_wildcard', ccsMinimizeRoundtrips: 'ccs_minimize_roundtrips', defaultOperator: 'default_operator', storedFields: 'stored_fields', docvalueFields: 'docvalue_fields', ignoreUnavailable: 'ignore_unavailable', ignoreThrottled: 'ignore_throttled', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', searchType: 'search_type', _sourceExcludes: '_source_excludes', _sourceExclude: '_source_exclude', _sourceIncludes: '_source_includes', _sourceInclude: '_source_include', terminateAfter: 'terminate_after', suggestField: 'suggest_field', suggestMode: 'suggest_mode', suggestSize: 'suggest_size', suggestText: 'suggest_text', trackScores: 'track_scores', trackTotalHits: 'track_total_hits', allowPartialSearchResults: 'allow_partial_search_results', typedKeys: 'typed_keys', seqNoPrimaryTerm: 'seq_no_primary_term', requestCache: 'request_cache', batchedReduceSize: 'batched_reduce_size', maxConcurrentShardRequests: 'max_concurrent_shard_requests', preFilterShardSize: 'pre_filter_shard_size', restTotalHitsAsInt: 'rest_total_hits_as_int', minCompatibleShardNode: 'min_compatible_shard_node', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction searchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_search'\n  } else if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_search'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_search'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = searchApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['exact_bounds', 'extent', 'grid_precision', 'grid_type', 'size', 'track_total_hits', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { exactBounds: 'exact_bounds', gridPrecision: 'grid_precision', gridType: 'grid_type', trackTotalHits: 'track_total_hits', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction searchMvtApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.field == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: field')\n    return handleError(err, callback)\n  }\n  if (params.zoom == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: zoom')\n    return handleError(err, callback)\n  }\n  if (params.x == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: x')\n    return handleError(err, callback)\n  }\n  if (params.y == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: y')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.y != null && (params.x == null || params.zoom == null || params.field == null || params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: x, zoom, field, index')\n    return handleError(err, callback)\n  } else if (params.x != null && (params.zoom == null || params.field == null || params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: zoom, field, index')\n    return handleError(err, callback)\n  } else if (params.zoom != null && (params.field == null || params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: field, index')\n    return handleError(err, callback)\n  } else if (params.field != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, field, zoom, x, y, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_mvt' + '/' + encodeURIComponent(field) + '/' + encodeURIComponent(zoom) + '/' + encodeURIComponent(x) + '/' + encodeURIComponent(y)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = searchMvtApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['preference', 'routing', 'local', 'ignore_unavailable', 'allow_no_indices', 'expand_wildcards', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { ignoreUnavailable: 'ignore_unavailable', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction searchShardsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_search_shards'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_search_shards'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = searchShardsApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['ignore_unavailable', 'ignore_throttled', 'allow_no_indices', 'expand_wildcards', 'preference', 'routing', 'scroll', 'search_type', 'explain', 'profile', 'typed_keys', 'rest_total_hits_as_int', 'ccs_minimize_roundtrips', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { ignoreUnavailable: 'ignore_unavailable', ignoreThrottled: 'ignore_throttled', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', searchType: 'search_type', typedKeys: 'typed_keys', restTotalHitsAsInt: 'rest_total_hits_as_int', ccsMinimizeRoundtrips: 'ccs_minimize_roundtrips', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction searchTemplateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_search' + '/' + 'template'\n  } else if ((index) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_search' + '/' + 'template'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_search' + '/' + 'template'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = searchTemplateApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'ignore_unavailable', 'allow_no_indices', 'expand_wildcards', 'index', 'master_timeout', 'wait_for_completion', 'storage', 'level']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', ignoreUnavailable: 'ignore_unavailable', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', masterTimeout: 'master_timeout', waitForCompletion: 'wait_for_completion' }\n\nfunction SearchableSnapshotsApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nSearchableSnapshotsApi.prototype.cacheStats = function searchableSnapshotsCacheStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, nodeId, node_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_searchable_snapshots' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'cache' + '/' + 'stats'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_searchable_snapshots' + '/' + 'cache' + '/' + 'stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSearchableSnapshotsApi.prototype.clearCache = function searchableSnapshotsClearCacheApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_searchable_snapshots' + '/' + 'cache' + '/' + 'clear'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + '_searchable_snapshots' + '/' + 'cache' + '/' + 'clear'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSearchableSnapshotsApi.prototype.mount = function searchableSnapshotsMountApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n  if (params.snapshot == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.snapshot != null && (params.repository == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, snapshot, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + encodeURIComponent(snapshot) + '/' + '_mount'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSearchableSnapshotsApi.prototype.repositoryStats = function searchableSnapshotsRepositoryStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + '_stats'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSearchableSnapshotsApi.prototype.stats = function searchableSnapshotsStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + encodeURIComponent(index) + '/' + '_searchable_snapshots' + '/' + 'stats'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_searchable_snapshots' + '/' + 'stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(SearchableSnapshotsApi.prototype, {\n  cache_stats: { get () { return this.cacheStats } },\n  clear_cache: { get () { return this.clearCache } },\n  repository_stats: { get () { return this.repositoryStats } }\n})\n\nmodule.exports = SearchableSnapshotsApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'refresh', 'usernames', 'id', 'name', 'username', 'realm_name', 'owner']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', realmName: 'realm_name' }\n\nfunction SecurityApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nSecurityApi.prototype.authenticate = function securityAuthenticateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_security' + '/' + '_authenticate'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.changePassword = function securityChangePasswordApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, username, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((username) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + '_security' + '/' + 'user' + '/' + encodeURIComponent(username) + '/' + '_password'\n  } else {\n    if (method == null) method = 'PUT'\n    path = '/' + '_security' + '/' + 'user' + '/' + '_password'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.clearApiKeyCache = function securityClearApiKeyCacheApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.ids == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: ids')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ids, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'api_key' + '/' + encodeURIComponent(ids) + '/' + '_clear_cache'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.clearCachedPrivileges = function securityClearCachedPrivilegesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.application == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: application')\n    return handleError(err, callback)\n  }\n\n  let { method, body, application, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'privilege' + '/' + encodeURIComponent(application) + '/' + '_clear_cache'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.clearCachedRealms = function securityClearCachedRealmsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.realms == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: realms')\n    return handleError(err, callback)\n  }\n\n  let { method, body, realms, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'realm' + '/' + encodeURIComponent(realms) + '/' + '_clear_cache'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.clearCachedRoles = function securityClearCachedRolesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'role' + '/' + encodeURIComponent(name) + '/' + '_clear_cache'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.clearCachedServiceTokens = function securityClearCachedServiceTokensApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.namespace == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: namespace')\n    return handleError(err, callback)\n  }\n  if (params.service == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: service')\n    return handleError(err, callback)\n  }\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.name != null && (params.service == null || params.namespace == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: service, namespace')\n    return handleError(err, callback)\n  } else if (params.service != null && (params.namespace == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: namespace')\n    return handleError(err, callback)\n  }\n\n  let { method, body, namespace, service, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'service' + '/' + encodeURIComponent(namespace) + '/' + encodeURIComponent(service) + '/' + 'credential' + '/' + 'token' + '/' + encodeURIComponent(name) + '/' + '_clear_cache'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.createApiKey = function securityCreateApiKeyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_security' + '/' + 'api_key'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.createServiceToken = function securityCreateServiceTokenApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.namespace == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: namespace')\n    return handleError(err, callback)\n  }\n  if (params.service == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: service')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.name != null && (params.service == null || params.namespace == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: service, namespace')\n    return handleError(err, callback)\n  } else if (params.service != null && (params.namespace == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: namespace')\n    return handleError(err, callback)\n  }\n\n  let { method, body, namespace, service, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((namespace) != null && (service) != null && (name) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + '_security' + '/' + 'service' + '/' + encodeURIComponent(namespace) + '/' + encodeURIComponent(service) + '/' + 'credential' + '/' + 'token' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + '_security' + '/' + 'service' + '/' + encodeURIComponent(namespace) + '/' + encodeURIComponent(service) + '/' + 'credential' + '/' + 'token'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.deletePrivileges = function securityDeletePrivilegesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.application == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: application')\n    return handleError(err, callback)\n  }\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.name != null && (params.application == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: application')\n    return handleError(err, callback)\n  }\n\n  let { method, body, application, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_security' + '/' + 'privilege' + '/' + encodeURIComponent(application) + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.deleteRole = function securityDeleteRoleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_security' + '/' + 'role' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.deleteRoleMapping = function securityDeleteRoleMappingApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_security' + '/' + 'role_mapping' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.deleteServiceToken = function securityDeleteServiceTokenApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.namespace == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: namespace')\n    return handleError(err, callback)\n  }\n  if (params.service == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: service')\n    return handleError(err, callback)\n  }\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.name != null && (params.service == null || params.namespace == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: service, namespace')\n    return handleError(err, callback)\n  } else if (params.service != null && (params.namespace == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: namespace')\n    return handleError(err, callback)\n  }\n\n  let { method, body, namespace, service, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_security' + '/' + 'service' + '/' + encodeURIComponent(namespace) + '/' + encodeURIComponent(service) + '/' + 'credential' + '/' + 'token' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.deleteUser = function securityDeleteUserApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.username == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: username')\n    return handleError(err, callback)\n  }\n\n  let { method, body, username, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_security' + '/' + 'user' + '/' + encodeURIComponent(username)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.disableUser = function securityDisableUserApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.username == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: username')\n    return handleError(err, callback)\n  }\n\n  let { method, body, username, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_security' + '/' + 'user' + '/' + encodeURIComponent(username) + '/' + '_disable'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.enableUser = function securityEnableUserApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.username == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: username')\n    return handleError(err, callback)\n  }\n\n  let { method, body, username, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_security' + '/' + 'user' + '/' + encodeURIComponent(username) + '/' + '_enable'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.getApiKey = function securityGetApiKeyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_security' + '/' + 'api_key'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.getBuiltinPrivileges = function securityGetBuiltinPrivilegesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_security' + '/' + 'privilege' + '/' + '_builtin'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.getPrivileges = function securityGetPrivilegesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required url components\n  if (params.name != null && (params.application == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: application')\n    return handleError(err, callback)\n  }\n\n  let { method, body, application, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((application) != null && (name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'privilege' + '/' + encodeURIComponent(application) + '/' + encodeURIComponent(name)\n  } else if ((application) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'privilege' + '/' + encodeURIComponent(application)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'privilege'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.getRole = function securityGetRoleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'role' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'role'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.getRoleMapping = function securityGetRoleMappingApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((name) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'role_mapping' + '/' + encodeURIComponent(name)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'role_mapping'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.getServiceAccounts = function securityGetServiceAccountsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required url components\n  if (params.service != null && (params.namespace == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: namespace')\n    return handleError(err, callback)\n  }\n\n  let { method, body, namespace, service, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((namespace) != null && (service) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'service' + '/' + encodeURIComponent(namespace) + '/' + encodeURIComponent(service)\n  } else if ((namespace) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'service' + '/' + encodeURIComponent(namespace)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'service'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.getServiceCredentials = function securityGetServiceCredentialsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.namespace == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: namespace')\n    return handleError(err, callback)\n  }\n  if (params.service == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: service')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.service != null && (params.namespace == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: namespace')\n    return handleError(err, callback)\n  }\n\n  let { method, body, namespace, service, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_security' + '/' + 'service' + '/' + encodeURIComponent(namespace) + '/' + encodeURIComponent(service) + '/' + 'credential'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.getToken = function securityGetTokenApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'oauth2' + '/' + 'token'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.getUser = function securityGetUserApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, username, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((username) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'user' + '/' + encodeURIComponent(username)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_security' + '/' + 'user'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.getUserPrivileges = function securityGetUserPrivilegesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_security' + '/' + 'user' + '/' + '_privileges'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.grantApiKey = function securityGrantApiKeyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'api_key' + '/' + 'grant'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.hasPrivileges = function securityHasPrivilegesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, user, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((user) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_security' + '/' + 'user' + '/' + encodeURIComponent(user) + '/' + '_has_privileges'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_security' + '/' + 'user' + '/' + '_has_privileges'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.invalidateApiKey = function securityInvalidateApiKeyApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_security' + '/' + 'api_key'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.invalidateToken = function securityInvalidateTokenApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_security' + '/' + 'oauth2' + '/' + 'token'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.putPrivileges = function securityPutPrivilegesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_security' + '/' + 'privilege'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.putRole = function securityPutRoleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_security' + '/' + 'role' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.putRoleMapping = function securityPutRoleMappingApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.name == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: name')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_security' + '/' + 'role_mapping' + '/' + encodeURIComponent(name)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.putUser = function securityPutUserApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.username == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: username')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, username, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_security' + '/' + 'user' + '/' + encodeURIComponent(username)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.queryApiKeys = function securityQueryApiKeysApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + '_security' + '/' + '_query' + '/' + 'api_key'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.samlAuthenticate = function securitySamlAuthenticateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'saml' + '/' + 'authenticate'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.samlCompleteLogout = function securitySamlCompleteLogoutApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'saml' + '/' + 'complete_logout'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.samlInvalidate = function securitySamlInvalidateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'saml' + '/' + 'invalidate'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.samlLogout = function securitySamlLogoutApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'saml' + '/' + 'logout'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.samlPrepareAuthentication = function securitySamlPrepareAuthenticationApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_security' + '/' + 'saml' + '/' + 'prepare'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSecurityApi.prototype.samlServiceProviderMetadata = function securitySamlServiceProviderMetadataApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.realm_name == null && params.realmName == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: realm_name or realmName')\n    return handleError(err, callback)\n  }\n\n  let { method, body, realmName, realm_name, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_security' + '/' + 'saml' + '/' + 'metadata' + '/' + encodeURIComponent(realm_name || realmName)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(SecurityApi.prototype, {\n  change_password: { get () { return this.changePassword } },\n  clear_api_key_cache: { get () { return this.clearApiKeyCache } },\n  clear_cached_privileges: { get () { return this.clearCachedPrivileges } },\n  clear_cached_realms: { get () { return this.clearCachedRealms } },\n  clear_cached_roles: { get () { return this.clearCachedRoles } },\n  clear_cached_service_tokens: { get () { return this.clearCachedServiceTokens } },\n  create_api_key: { get () { return this.createApiKey } },\n  create_service_token: { get () { return this.createServiceToken } },\n  delete_privileges: { get () { return this.deletePrivileges } },\n  delete_role: { get () { return this.deleteRole } },\n  delete_role_mapping: { get () { return this.deleteRoleMapping } },\n  delete_service_token: { get () { return this.deleteServiceToken } },\n  delete_user: { get () { return this.deleteUser } },\n  disable_user: { get () { return this.disableUser } },\n  enable_user: { get () { return this.enableUser } },\n  get_api_key: { get () { return this.getApiKey } },\n  get_builtin_privileges: { get () { return this.getBuiltinPrivileges } },\n  get_privileges: { get () { return this.getPrivileges } },\n  get_role: { get () { return this.getRole } },\n  get_role_mapping: { get () { return this.getRoleMapping } },\n  get_service_accounts: { get () { return this.getServiceAccounts } },\n  get_service_credentials: { get () { return this.getServiceCredentials } },\n  get_token: { get () { return this.getToken } },\n  get_user: { get () { return this.getUser } },\n  get_user_privileges: { get () { return this.getUserPrivileges } },\n  grant_api_key: { get () { return this.grantApiKey } },\n  has_privileges: { get () { return this.hasPrivileges } },\n  invalidate_api_key: { get () { return this.invalidateApiKey } },\n  invalidate_token: { get () { return this.invalidateToken } },\n  put_privileges: { get () { return this.putPrivileges } },\n  put_role: { get () { return this.putRole } },\n  put_role_mapping: { get () { return this.putRoleMapping } },\n  put_user: { get () { return this.putUser } },\n  query_api_keys: { get () { return this.queryApiKeys } },\n  saml_authenticate: { get () { return this.samlAuthenticate } },\n  saml_complete_logout: { get () { return this.samlCompleteLogout } },\n  saml_invalidate: { get () { return this.samlInvalidate } },\n  saml_logout: { get () { return this.samlLogout } },\n  saml_prepare_authentication: { get () { return this.samlPrepareAuthentication } },\n  saml_service_provider_metadata: { get () { return this.samlServiceProviderMetadata } }\n})\n\nmodule.exports = SecurityApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction ShutdownApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nShutdownApi.prototype.deleteNode = function shutdownDeleteNodeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.node_id == null && params.nodeId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, nodeId, node_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nShutdownApi.prototype.getNode = function shutdownGetNodeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, nodeId, node_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_nodes' + '/' + 'shutdown'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nShutdownApi.prototype.putNode = function shutdownPutNodeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.node_id == null && params.nodeId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, nodeId, node_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(ShutdownApi.prototype, {\n  delete_node: { get () { return this.deleteNode } },\n  get_node: { get () { return this.getNode } },\n  put_node: { get () { return this.putNode } }\n})\n\nmodule.exports = ShutdownApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction SlmApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nSlmApi.prototype.deleteLifecycle = function slmDeleteLifecycleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.policy_id == null && params.policyId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: policy_id or policyId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, policyId, policy_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_slm' + '/' + 'policy' + '/' + encodeURIComponent(policy_id || policyId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSlmApi.prototype.executeLifecycle = function slmExecuteLifecycleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.policy_id == null && params.policyId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: policy_id or policyId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, policyId, policy_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_slm' + '/' + 'policy' + '/' + encodeURIComponent(policy_id || policyId) + '/' + '_execute'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSlmApi.prototype.executeRetention = function slmExecuteRetentionApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_slm' + '/' + '_execute_retention'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSlmApi.prototype.getLifecycle = function slmGetLifecycleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, policyId, policy_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((policy_id || policyId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_slm' + '/' + 'policy' + '/' + encodeURIComponent(policy_id || policyId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_slm' + '/' + 'policy'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSlmApi.prototype.getStats = function slmGetStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_slm' + '/' + 'stats'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSlmApi.prototype.getStatus = function slmGetStatusApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_slm' + '/' + 'status'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSlmApi.prototype.putLifecycle = function slmPutLifecycleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.policy_id == null && params.policyId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: policy_id or policyId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, policyId, policy_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_slm' + '/' + 'policy' + '/' + encodeURIComponent(policy_id || policyId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSlmApi.prototype.start = function slmStartApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_slm' + '/' + 'start'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSlmApi.prototype.stop = function slmStopApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_slm' + '/' + 'stop'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(SlmApi.prototype, {\n  delete_lifecycle: { get () { return this.deleteLifecycle } },\n  execute_lifecycle: { get () { return this.executeLifecycle } },\n  execute_retention: { get () { return this.executeRetention } },\n  get_lifecycle: { get () { return this.getLifecycle } },\n  get_stats: { get () { return this.getStats } },\n  get_status: { get () { return this.getStatus } },\n  put_lifecycle: { get () { return this.putLifecycle } }\n})\n\nmodule.exports = SlmApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['master_timeout', 'timeout', 'pretty', 'human', 'error_trace', 'source', 'filter_path', 'wait_for_completion', 'verify', 'ignore_unavailable', 'index_details', 'include_repository', 'verbose', 'local', 'blob_count', 'concurrency', 'read_node_count', 'early_read_node_count', 'seed', 'rare_action_probability', 'max_blob_size', 'max_total_data_size', 'detailed', 'rarely_abort_writes']\nconst snakeCase = { masterTimeout: 'master_timeout', errorTrace: 'error_trace', filterPath: 'filter_path', waitForCompletion: 'wait_for_completion', ignoreUnavailable: 'ignore_unavailable', indexDetails: 'index_details', includeRepository: 'include_repository', blobCount: 'blob_count', readNodeCount: 'read_node_count', earlyReadNodeCount: 'early_read_node_count', rareActionProbability: 'rare_action_probability', maxBlobSize: 'max_blob_size', maxTotalDataSize: 'max_total_data_size', rarelyAbortWrites: 'rarely_abort_writes' }\n\nfunction SnapshotApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nSnapshotApi.prototype.cleanupRepository = function snapshotCleanupRepositoryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + '_cleanup'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.clone = function snapshotCloneApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n  if (params.snapshot == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot')\n    return handleError(err, callback)\n  }\n  if (params.target_snapshot == null && params.targetSnapshot == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: target_snapshot or targetSnapshot')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.target_snapshot != null || params.targetSnapshot != null) && (params.snapshot == null || params.repository == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: snapshot, repository')\n    return handleError(err, callback)\n  } else if (params.snapshot != null && (params.repository == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, snapshot, targetSnapshot, target_snapshot, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + encodeURIComponent(snapshot) + '/' + '_clone' + '/' + encodeURIComponent(target_snapshot || targetSnapshot)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.create = function snapshotCreateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n  if (params.snapshot == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.snapshot != null && (params.repository == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, snapshot, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + encodeURIComponent(snapshot)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.createRepository = function snapshotCreateRepositoryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.delete = function snapshotDeleteApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n  if (params.snapshot == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.snapshot != null && (params.repository == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, snapshot, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + encodeURIComponent(snapshot)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.deleteRepository = function snapshotDeleteRepositoryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.get = function snapshotGetApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n  if (params.snapshot == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.snapshot != null && (params.repository == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, snapshot, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + encodeURIComponent(snapshot)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.getRepository = function snapshotGetRepositoryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, repository, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((repository) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_snapshot' + '/' + encodeURIComponent(repository)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_snapshot'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.repositoryAnalyze = function snapshotRepositoryAnalyzeApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + '_analyze'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.restore = function snapshotRestoreApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n  if (params.snapshot == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: snapshot')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.snapshot != null && (params.repository == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, snapshot, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + encodeURIComponent(snapshot) + '/' + '_restore'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.status = function snapshotStatusApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required url components\n  if (params.snapshot != null && (params.repository == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, snapshot, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((repository) != null && (snapshot) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + encodeURIComponent(snapshot) + '/' + '_status'\n  } else if ((repository) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + '_status'\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_snapshot' + '/' + '_status'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSnapshotApi.prototype.verifyRepository = function snapshotVerifyRepositoryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.repository == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: repository')\n    return handleError(err, callback)\n  }\n\n  let { method, body, repository, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_snapshot' + '/' + encodeURIComponent(repository) + '/' + '_verify'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(SnapshotApi.prototype, {\n  cleanup_repository: { get () { return this.cleanupRepository } },\n  create_repository: { get () { return this.createRepository } },\n  delete_repository: { get () { return this.deleteRepository } },\n  get_repository: { get () { return this.getRepository } },\n  repository_analyze: { get () { return this.repositoryAnalyze } },\n  verify_repository: { get () { return this.verifyRepository } }\n})\n\nmodule.exports = SnapshotApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'delimiter', 'format', 'keep_alive', 'wait_for_completion_timeout']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', keepAlive: 'keep_alive', waitForCompletionTimeout: 'wait_for_completion_timeout' }\n\nfunction SqlApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nSqlApi.prototype.clearCursor = function sqlClearCursorApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_sql' + '/' + 'close'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSqlApi.prototype.deleteAsync = function sqlDeleteAsyncApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_sql' + '/' + 'async' + '/' + 'delete' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSqlApi.prototype.getAsync = function sqlGetAsyncApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_sql' + '/' + 'async' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSqlApi.prototype.getAsyncStatus = function sqlGetAsyncStatusApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_sql' + '/' + 'async' + '/' + 'status' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSqlApi.prototype.query = function sqlQueryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + '_sql'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nSqlApi.prototype.translate = function sqlTranslateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + '_sql' + '/' + 'translate'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(SqlApi.prototype, {\n  clear_cursor: { get () { return this.clearCursor } },\n  delete_async: { get () { return this.deleteAsync } },\n  get_async: { get () { return this.getAsync } },\n  get_async_status: { get () { return this.getAsyncStatus } }\n})\n\nmodule.exports = SqlApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction SslApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nSslApi.prototype.certificates = function sslCertificatesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_ssl' + '/' + 'certificates'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = SslApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['nodes', 'actions', 'parent_task_id', 'wait_for_completion', 'pretty', 'human', 'error_trace', 'source', 'filter_path', 'timeout', 'detailed', 'group_by']\nconst snakeCase = { parentTaskId: 'parent_task_id', waitForCompletion: 'wait_for_completion', errorTrace: 'error_trace', filterPath: 'filter_path', groupBy: 'group_by' }\n\nfunction TasksApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nTasksApi.prototype.cancel = function tasksCancelApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, taskId, task_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((task_id || taskId) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + '_tasks' + '/' + encodeURIComponent(task_id || taskId) + '/' + '_cancel'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + '_tasks' + '/' + '_cancel'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nTasksApi.prototype.get = function tasksGetApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.task_id == null && params.taskId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: task_id or taskId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, taskId, task_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_tasks' + '/' + encodeURIComponent(task_id || taskId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nTasksApi.prototype.list = function tasksListApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_tasks'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = TasksApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction termsEnumApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + encodeURIComponent(index) + '/' + '_terms_enum'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = termsEnumApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['term_statistics', 'field_statistics', 'fields', 'offsets', 'positions', 'payloads', 'preference', 'routing', 'realtime', 'version', 'version_type', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { termStatistics: 'term_statistics', fieldStatistics: 'field_statistics', versionType: 'version_type', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction termvectorsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, id, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (id) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id) + '/' + '_termvectors'\n  } else if ((index) != null && (id) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_termvectors' + '/' + encodeURIComponent(id)\n  } else if ((index) != null && (type) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_termvectors'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_termvectors'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = termvectorsApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['lines_to_sample', 'line_merge_size_limit', 'timeout', 'charset', 'format', 'has_header_row', 'column_names', 'delimiter', 'quote', 'should_trim_fields', 'grok_pattern', 'timestamp_field', 'timestamp_format', 'explain', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { linesToSample: 'lines_to_sample', lineMergeSizeLimit: 'line_merge_size_limit', hasHeaderRow: 'has_header_row', columnNames: 'column_names', shouldTrimFields: 'should_trim_fields', grokPattern: 'grok_pattern', timestampField: 'timestamp_field', timestampFormat: 'timestamp_format', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction TextStructureApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nTextStructureApi.prototype.findStructure = function textStructureFindStructureApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_text_structure' + '/' + 'find_structure'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    bulkBody: body,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(TextStructureApi.prototype, {\n  find_structure: { get () { return this.findStructure } }\n})\n\nmodule.exports = TextStructureApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['force', 'timeout', 'pretty', 'human', 'error_trace', 'source', 'filter_path', 'from', 'size', 'allow_no_match', 'exclude_generated', 'defer_validation', 'wait_for_completion', 'wait_for_checkpoint', 'dry_run']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', allowNoMatch: 'allow_no_match', excludeGenerated: 'exclude_generated', deferValidation: 'defer_validation', waitForCompletion: 'wait_for_completion', waitForCheckpoint: 'wait_for_checkpoint', dryRun: 'dry_run' }\n\nfunction TransformApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nTransformApi.prototype.deleteTransform = function transformDeleteTransformApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.transform_id == null && params.transformId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: transform_id or transformId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, transformId, transform_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_transform' + '/' + encodeURIComponent(transform_id || transformId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nTransformApi.prototype.getTransform = function transformGetTransformApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, transformId, transform_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((transform_id || transformId) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_transform' + '/' + encodeURIComponent(transform_id || transformId)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_transform'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nTransformApi.prototype.getTransformStats = function transformGetTransformStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.transform_id == null && params.transformId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: transform_id or transformId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, transformId, transform_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_transform' + '/' + encodeURIComponent(transform_id || transformId) + '/' + '_stats'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nTransformApi.prototype.previewTransform = function transformPreviewTransformApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, transformId, transform_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((transform_id || transformId) != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_transform' + '/' + encodeURIComponent(transform_id || transformId) + '/' + '_preview'\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST'\n    path = '/' + '_transform' + '/' + '_preview'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nTransformApi.prototype.putTransform = function transformPutTransformApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.transform_id == null && params.transformId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: transform_id or transformId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, transformId, transform_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_transform' + '/' + encodeURIComponent(transform_id || transformId)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nTransformApi.prototype.startTransform = function transformStartTransformApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.transform_id == null && params.transformId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: transform_id or transformId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, transformId, transform_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_transform' + '/' + encodeURIComponent(transform_id || transformId) + '/' + '_start'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nTransformApi.prototype.stopTransform = function transformStopTransformApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.transform_id == null && params.transformId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: transform_id or transformId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, transformId, transform_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_transform' + '/' + encodeURIComponent(transform_id || transformId) + '/' + '_stop'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nTransformApi.prototype.updateTransform = function transformUpdateTransformApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.transform_id == null && params.transformId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: transform_id or transformId')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, transformId, transform_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_transform' + '/' + encodeURIComponent(transform_id || transformId) + '/' + '_update'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nTransformApi.prototype.upgradeTransforms = function transformUpgradeTransformsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_transform' + '/' + '_upgrade'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(TransformApi.prototype, {\n  delete_transform: { get () { return this.deleteTransform } },\n  get_transform: { get () { return this.getTransform } },\n  get_transform_stats: { get () { return this.getTransformStats } },\n  preview_transform: { get () { return this.previewTransform } },\n  put_transform: { get () { return this.putTransform } },\n  start_transform: { get () { return this.startTransform } },\n  stop_transform: { get () { return this.stopTransform } },\n  update_transform: { get () { return this.updateTransform } },\n  upgrade_transforms: { get () { return this.upgradeTransforms } }\n})\n\nmodule.exports = TransformApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['wait_for_active_shards', '_source', '_source_excludes', '_source_exclude', '_source_includes', '_source_include', 'lang', 'refresh', 'retry_on_conflict', 'routing', 'timeout', 'if_seq_no', 'if_primary_term', 'require_alias', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { waitForActiveShards: 'wait_for_active_shards', _sourceExcludes: '_source_excludes', _sourceExclude: '_source_exclude', _sourceIncludes: '_source_includes', _sourceInclude: '_source_include', retryOnConflict: 'retry_on_conflict', ifSeqNo: 'if_seq_no', ifPrimaryTerm: 'if_primary_term', requireAlias: 'require_alias', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction updateApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null && (id) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id) + '/' + '_update'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_update' + '/' + encodeURIComponent(id)\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = updateApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['analyzer', 'analyze_wildcard', 'default_operator', 'df', 'from', 'ignore_unavailable', 'allow_no_indices', 'conflicts', 'expand_wildcards', 'lenient', 'pipeline', 'preference', 'q', 'routing', 'scroll', 'search_type', 'search_timeout', 'size', 'max_docs', 'sort', 'terminate_after', 'stats', 'version', 'version_type', 'request_cache', 'refresh', 'timeout', 'wait_for_active_shards', 'scroll_size', 'wait_for_completion', 'requests_per_second', 'slices', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { analyzeWildcard: 'analyze_wildcard', defaultOperator: 'default_operator', ignoreUnavailable: 'ignore_unavailable', allowNoIndices: 'allow_no_indices', expandWildcards: 'expand_wildcards', searchType: 'search_type', searchTimeout: 'search_timeout', maxDocs: 'max_docs', terminateAfter: 'terminate_after', versionType: 'version_type', requestCache: 'request_cache', waitForActiveShards: 'wait_for_active_shards', scrollSize: 'scroll_size', waitForCompletion: 'wait_for_completion', requestsPerSecond: 'requests_per_second', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction updateByQueryApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if (params.type != null && (params.index == null)) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\n    return handleError(err, callback)\n  }\n\n  let { method, body, index, type, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((index) != null && (type) != null) {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_update_by_query'\n  } else {\n    if (method == null) method = 'POST'\n    path = '/' + encodeURIComponent(index) + '/' + '_update_by_query'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = updateByQueryApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['requests_per_second', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\nconst snakeCase = { requestsPerSecond: 'requests_per_second', errorTrace: 'error_trace', filterPath: 'filter_path' }\n\nfunction updateByQueryRethrottleApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.task_id == null && params.taskId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: task_id or taskId')\n    return handleError(err, callback)\n  }\n  if (params.requests_per_second == null && params.requestsPerSecond == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: requests_per_second or requestsPerSecond')\n    return handleError(err, callback)\n  }\n\n  let { method, body, taskId, task_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_update_by_query' + '/' + encodeURIComponent(task_id || taskId) + '/' + '_rethrottle'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = updateByQueryRethrottleApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'debug', 'active', 'version', 'if_seq_no', 'if_primary_term', 'metric', 'emit_stacktraces']\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', ifSeqNo: 'if_seq_no', ifPrimaryTerm: 'if_primary_term', emitStacktraces: 'emit_stacktraces' }\n\nfunction WatcherApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nWatcherApi.prototype.ackWatch = function watcherAckWatchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.watch_id == null && params.watchId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: watch_id or watchId')\n    return handleError(err, callback)\n  }\n\n  // check required url components\n  if ((params.action_id != null || params.actionId != null) && ((params.watch_id == null && params.watchId == null))) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: watch_id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, watchId, watch_id, actionId, action_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((watch_id || watchId) != null && (action_id || actionId) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_ack' + '/' + encodeURIComponent(action_id || actionId)\n  } else {\n    if (method == null) method = 'PUT'\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_ack'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nWatcherApi.prototype.activateWatch = function watcherActivateWatchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.watch_id == null && params.watchId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: watch_id or watchId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, watchId, watch_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_activate'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nWatcherApi.prototype.deactivateWatch = function watcherDeactivateWatchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.watch_id == null && params.watchId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: watch_id or watchId')\n    return handleError(err, callback)\n  }\n\n  let { method, body, watchId, watch_id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_deactivate'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nWatcherApi.prototype.deleteWatch = function watcherDeleteWatchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'DELETE'\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nWatcherApi.prototype.executeWatch = function watcherExecuteWatchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((id) != null) {\n    if (method == null) method = 'PUT'\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id) + '/' + '_execute'\n  } else {\n    if (method == null) method = 'PUT'\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + '_execute'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nWatcherApi.prototype.getWatch = function watcherGetWatchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nWatcherApi.prototype.putWatch = function watcherPutWatchApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  // check required parameters\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id')\n    return handleError(err, callback)\n  }\n\n  let { method, body, id, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'PUT'\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id)\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nWatcherApi.prototype.queryWatches = function watcherQueryWatchesApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = body == null ? 'GET' : 'POST'\n  path = '/' + '_watcher' + '/' + '_query' + '/' + 'watches'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nWatcherApi.prototype.start = function watcherStartApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_watcher' + '/' + '_start'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nWatcherApi.prototype.stats = function watcherStatsApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, metric, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if ((metric) != null) {\n    if (method == null) method = 'GET'\n    path = '/' + '_watcher' + '/' + 'stats' + '/' + encodeURIComponent(metric)\n  } else {\n    if (method == null) method = 'GET'\n    path = '/' + '_watcher' + '/' + 'stats'\n  }\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nWatcherApi.prototype.stop = function watcherStopApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'POST'\n  path = '/' + '_watcher' + '/' + '_stop'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nObject.defineProperties(WatcherApi.prototype, {\n  ack_watch: { get () { return this.ackWatch } },\n  activate_watch: { get () { return this.activateWatch } },\n  deactivate_watch: { get () { return this.deactivateWatch } },\n  delete_watch: { get () { return this.deleteWatch } },\n  execute_watch: { get () { return this.executeWatch } },\n  get_watch: { get () { return this.getWatch } },\n  put_watch: { get () { return this.putWatch } },\n  query_watches: { get () { return this.queryWatches } }\n})\n\nmodule.exports = WatcherApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n/* eslint no-unused-vars: 0 */\n\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\nconst acceptedQuerystring = ['categories', 'accept_enterprise', 'pretty', 'human', 'error_trace', 'source', 'filter_path', 'master_timeout']\nconst snakeCase = { acceptEnterprise: 'accept_enterprise', errorTrace: 'error_trace', filterPath: 'filter_path', masterTimeout: 'master_timeout' }\n\nfunction XpackApi (transport, ConfigurationError) {\n  this.transport = transport\n  this[kConfigurationError] = ConfigurationError\n}\n\nXpackApi.prototype.info = function xpackInfoApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_xpack'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nXpackApi.prototype.usage = function xpackUsageApi (params, options, callback) {\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\n\n  let { method, body, ...querystring } = params\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\n\n  let path = ''\n  if (method == null) method = 'GET'\n  path = '/' + '_xpack' + '/' + 'usage'\n\n  // build request object\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  }\n\n  return this.transport.request(request, options, callback)\n}\n\nmodule.exports = XpackApi\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nconst AsyncSearchApi = require('./api/async_search')\nconst AutoscalingApi = require('./api/autoscaling')\nconst bulkApi = require('./api/bulk')\nconst CatApi = require('./api/cat')\nconst CcrApi = require('./api/ccr')\nconst clearScrollApi = require('./api/clear_scroll')\nconst closePointInTimeApi = require('./api/close_point_in_time')\nconst ClusterApi = require('./api/cluster')\nconst countApi = require('./api/count')\nconst createApi = require('./api/create')\nconst DanglingIndicesApi = require('./api/dangling_indices')\nconst deleteApi = require('./api/delete')\nconst deleteByQueryApi = require('./api/delete_by_query')\nconst deleteByQueryRethrottleApi = require('./api/delete_by_query_rethrottle')\nconst deleteScriptApi = require('./api/delete_script')\nconst EnrichApi = require('./api/enrich')\nconst EqlApi = require('./api/eql')\nconst existsApi = require('./api/exists')\nconst existsSourceApi = require('./api/exists_source')\nconst explainApi = require('./api/explain')\nconst FeaturesApi = require('./api/features')\nconst fieldCapsApi = require('./api/field_caps')\nconst FleetApi = require('./api/fleet')\nconst getApi = require('./api/get')\nconst getScriptApi = require('./api/get_script')\nconst getScriptContextApi = require('./api/get_script_context')\nconst getScriptLanguagesApi = require('./api/get_script_languages')\nconst getSourceApi = require('./api/get_source')\nconst GraphApi = require('./api/graph')\nconst IlmApi = require('./api/ilm')\nconst indexApi = require('./api/index')\nconst IndicesApi = require('./api/indices')\nconst infoApi = require('./api/info')\nconst IngestApi = require('./api/ingest')\nconst LicenseApi = require('./api/license')\nconst LogstashApi = require('./api/logstash')\nconst mgetApi = require('./api/mget')\nconst MigrationApi = require('./api/migration')\nconst MlApi = require('./api/ml')\nconst MonitoringApi = require('./api/monitoring')\nconst msearchApi = require('./api/msearch')\nconst msearchTemplateApi = require('./api/msearch_template')\nconst mtermvectorsApi = require('./api/mtermvectors')\nconst NodesApi = require('./api/nodes')\nconst openPointInTimeApi = require('./api/open_point_in_time')\nconst pingApi = require('./api/ping')\nconst putScriptApi = require('./api/put_script')\nconst rankEvalApi = require('./api/rank_eval')\nconst reindexApi = require('./api/reindex')\nconst reindexRethrottleApi = require('./api/reindex_rethrottle')\nconst renderSearchTemplateApi = require('./api/render_search_template')\nconst RollupApi = require('./api/rollup')\nconst scriptsPainlessExecuteApi = require('./api/scripts_painless_execute')\nconst scrollApi = require('./api/scroll')\nconst searchApi = require('./api/search')\nconst searchMvtApi = require('./api/search_mvt')\nconst searchShardsApi = require('./api/search_shards')\nconst searchTemplateApi = require('./api/search_template')\nconst SearchableSnapshotsApi = require('./api/searchable_snapshots')\nconst SecurityApi = require('./api/security')\nconst ShutdownApi = require('./api/shutdown')\nconst SlmApi = require('./api/slm')\nconst SnapshotApi = require('./api/snapshot')\nconst SqlApi = require('./api/sql')\nconst SslApi = require('./api/ssl')\nconst TasksApi = require('./api/tasks')\nconst termsEnumApi = require('./api/terms_enum')\nconst termvectorsApi = require('./api/termvectors')\nconst TextStructureApi = require('./api/text_structure')\nconst TransformApi = require('./api/transform')\nconst updateApi = require('./api/update')\nconst updateByQueryApi = require('./api/update_by_query')\nconst updateByQueryRethrottleApi = require('./api/update_by_query_rethrottle')\nconst WatcherApi = require('./api/watcher')\nconst XpackApi = require('./api/xpack')\n\nconst { kConfigurationError } = require('./utils')\nconst kAsyncSearch = Symbol('AsyncSearch')\nconst kAutoscaling = Symbol('Autoscaling')\nconst kCat = Symbol('Cat')\nconst kCcr = Symbol('Ccr')\nconst kCluster = Symbol('Cluster')\nconst kDanglingIndices = Symbol('DanglingIndices')\nconst kEnrich = Symbol('Enrich')\nconst kEql = Symbol('Eql')\nconst kFeatures = Symbol('Features')\nconst kFleet = Symbol('Fleet')\nconst kGraph = Symbol('Graph')\nconst kIlm = Symbol('Ilm')\nconst kIndices = Symbol('Indices')\nconst kIngest = Symbol('Ingest')\nconst kLicense = Symbol('License')\nconst kLogstash = Symbol('Logstash')\nconst kMigration = Symbol('Migration')\nconst kMl = Symbol('Ml')\nconst kMonitoring = Symbol('Monitoring')\nconst kNodes = Symbol('Nodes')\nconst kRollup = Symbol('Rollup')\nconst kSearchableSnapshots = Symbol('SearchableSnapshots')\nconst kSecurity = Symbol('Security')\nconst kShutdown = Symbol('Shutdown')\nconst kSlm = Symbol('Slm')\nconst kSnapshot = Symbol('Snapshot')\nconst kSql = Symbol('Sql')\nconst kSsl = Symbol('Ssl')\nconst kTasks = Symbol('Tasks')\nconst kTextStructure = Symbol('TextStructure')\nconst kTransform = Symbol('Transform')\nconst kWatcher = Symbol('Watcher')\nconst kXpack = Symbol('Xpack')\n\nfunction ESAPI (opts) {\n  this[kConfigurationError] = opts.ConfigurationError\n  this[kAsyncSearch] = null\n  this[kAutoscaling] = null\n  this[kCat] = null\n  this[kCcr] = null\n  this[kCluster] = null\n  this[kDanglingIndices] = null\n  this[kEnrich] = null\n  this[kEql] = null\n  this[kFeatures] = null\n  this[kFleet] = null\n  this[kGraph] = null\n  this[kIlm] = null\n  this[kIndices] = null\n  this[kIngest] = null\n  this[kLicense] = null\n  this[kLogstash] = null\n  this[kMigration] = null\n  this[kMl] = null\n  this[kMonitoring] = null\n  this[kNodes] = null\n  this[kRollup] = null\n  this[kSearchableSnapshots] = null\n  this[kSecurity] = null\n  this[kShutdown] = null\n  this[kSlm] = null\n  this[kSnapshot] = null\n  this[kSql] = null\n  this[kSsl] = null\n  this[kTasks] = null\n  this[kTextStructure] = null\n  this[kTransform] = null\n  this[kWatcher] = null\n  this[kXpack] = null\n}\n\nESAPI.prototype.bulk = bulkApi\nESAPI.prototype.clearScroll = clearScrollApi\nESAPI.prototype.closePointInTime = closePointInTimeApi\nESAPI.prototype.count = countApi\nESAPI.prototype.create = createApi\nESAPI.prototype.delete = deleteApi\nESAPI.prototype.deleteByQuery = deleteByQueryApi\nESAPI.prototype.deleteByQueryRethrottle = deleteByQueryRethrottleApi\nESAPI.prototype.deleteScript = deleteScriptApi\nESAPI.prototype.exists = existsApi\nESAPI.prototype.existsSource = existsSourceApi\nESAPI.prototype.explain = explainApi\nESAPI.prototype.fieldCaps = fieldCapsApi\nESAPI.prototype.get = getApi\nESAPI.prototype.getScript = getScriptApi\nESAPI.prototype.getScriptContext = getScriptContextApi\nESAPI.prototype.getScriptLanguages = getScriptLanguagesApi\nESAPI.prototype.getSource = getSourceApi\nESAPI.prototype.index = indexApi\nESAPI.prototype.info = infoApi\nESAPI.prototype.mget = mgetApi\nESAPI.prototype.msearch = msearchApi\nESAPI.prototype.msearchTemplate = msearchTemplateApi\nESAPI.prototype.mtermvectors = mtermvectorsApi\nESAPI.prototype.openPointInTime = openPointInTimeApi\nESAPI.prototype.ping = pingApi\nESAPI.prototype.putScript = putScriptApi\nESAPI.prototype.rankEval = rankEvalApi\nESAPI.prototype.reindex = reindexApi\nESAPI.prototype.reindexRethrottle = reindexRethrottleApi\nESAPI.prototype.renderSearchTemplate = renderSearchTemplateApi\nESAPI.prototype.scriptsPainlessExecute = scriptsPainlessExecuteApi\nESAPI.prototype.scroll = scrollApi\nESAPI.prototype.search = searchApi\nESAPI.prototype.searchMvt = searchMvtApi\nESAPI.prototype.searchShards = searchShardsApi\nESAPI.prototype.searchTemplate = searchTemplateApi\nESAPI.prototype.termsEnum = termsEnumApi\nESAPI.prototype.termvectors = termvectorsApi\nESAPI.prototype.update = updateApi\nESAPI.prototype.updateByQuery = updateByQueryApi\nESAPI.prototype.updateByQueryRethrottle = updateByQueryRethrottleApi\n\nObject.defineProperties(ESAPI.prototype, {\n  asyncSearch: {\n    get () {\n      if (this[kAsyncSearch] === null) {\n        this[kAsyncSearch] = new AsyncSearchApi(this.transport, this[kConfigurationError])\n      }\n      return this[kAsyncSearch]\n    }\n  },\n  async_search: { get () { return this.asyncSearch } },\n  autoscaling: {\n    get () {\n      if (this[kAutoscaling] === null) {\n        this[kAutoscaling] = new AutoscalingApi(this.transport, this[kConfigurationError])\n      }\n      return this[kAutoscaling]\n    }\n  },\n  cat: {\n    get () {\n      if (this[kCat] === null) {\n        this[kCat] = new CatApi(this.transport, this[kConfigurationError])\n      }\n      return this[kCat]\n    }\n  },\n  ccr: {\n    get () {\n      if (this[kCcr] === null) {\n        this[kCcr] = new CcrApi(this.transport, this[kConfigurationError])\n      }\n      return this[kCcr]\n    }\n  },\n  clear_scroll: { get () { return this.clearScroll } },\n  close_point_in_time: { get () { return this.closePointInTime } },\n  cluster: {\n    get () {\n      if (this[kCluster] === null) {\n        this[kCluster] = new ClusterApi(this.transport, this[kConfigurationError])\n      }\n      return this[kCluster]\n    }\n  },\n  danglingIndices: {\n    get () {\n      if (this[kDanglingIndices] === null) {\n        this[kDanglingIndices] = new DanglingIndicesApi(this.transport, this[kConfigurationError])\n      }\n      return this[kDanglingIndices]\n    }\n  },\n  dangling_indices: { get () { return this.danglingIndices } },\n  delete_by_query: { get () { return this.deleteByQuery } },\n  delete_by_query_rethrottle: { get () { return this.deleteByQueryRethrottle } },\n  delete_script: { get () { return this.deleteScript } },\n  enrich: {\n    get () {\n      if (this[kEnrich] === null) {\n        this[kEnrich] = new EnrichApi(this.transport, this[kConfigurationError])\n      }\n      return this[kEnrich]\n    }\n  },\n  eql: {\n    get () {\n      if (this[kEql] === null) {\n        this[kEql] = new EqlApi(this.transport, this[kConfigurationError])\n      }\n      return this[kEql]\n    }\n  },\n  exists_source: { get () { return this.existsSource } },\n  features: {\n    get () {\n      if (this[kFeatures] === null) {\n        this[kFeatures] = new FeaturesApi(this.transport, this[kConfigurationError])\n      }\n      return this[kFeatures]\n    }\n  },\n  field_caps: { get () { return this.fieldCaps } },\n  fleet: {\n    get () {\n      if (this[kFleet] === null) {\n        this[kFleet] = new FleetApi(this.transport, this[kConfigurationError])\n      }\n      return this[kFleet]\n    }\n  },\n  get_script: { get () { return this.getScript } },\n  get_script_context: { get () { return this.getScriptContext } },\n  get_script_languages: { get () { return this.getScriptLanguages } },\n  get_source: { get () { return this.getSource } },\n  graph: {\n    get () {\n      if (this[kGraph] === null) {\n        this[kGraph] = new GraphApi(this.transport, this[kConfigurationError])\n      }\n      return this[kGraph]\n    }\n  },\n  ilm: {\n    get () {\n      if (this[kIlm] === null) {\n        this[kIlm] = new IlmApi(this.transport, this[kConfigurationError])\n      }\n      return this[kIlm]\n    }\n  },\n  indices: {\n    get () {\n      if (this[kIndices] === null) {\n        this[kIndices] = new IndicesApi(this.transport, this[kConfigurationError])\n      }\n      return this[kIndices]\n    }\n  },\n  ingest: {\n    get () {\n      if (this[kIngest] === null) {\n        this[kIngest] = new IngestApi(this.transport, this[kConfigurationError])\n      }\n      return this[kIngest]\n    }\n  },\n  license: {\n    get () {\n      if (this[kLicense] === null) {\n        this[kLicense] = new LicenseApi(this.transport, this[kConfigurationError])\n      }\n      return this[kLicense]\n    }\n  },\n  logstash: {\n    get () {\n      if (this[kLogstash] === null) {\n        this[kLogstash] = new LogstashApi(this.transport, this[kConfigurationError])\n      }\n      return this[kLogstash]\n    }\n  },\n  migration: {\n    get () {\n      if (this[kMigration] === null) {\n        this[kMigration] = new MigrationApi(this.transport, this[kConfigurationError])\n      }\n      return this[kMigration]\n    }\n  },\n  ml: {\n    get () {\n      if (this[kMl] === null) {\n        this[kMl] = new MlApi(this.transport, this[kConfigurationError])\n      }\n      return this[kMl]\n    }\n  },\n  monitoring: {\n    get () {\n      if (this[kMonitoring] === null) {\n        this[kMonitoring] = new MonitoringApi(this.transport, this[kConfigurationError])\n      }\n      return this[kMonitoring]\n    }\n  },\n  msearch_template: { get () { return this.msearchTemplate } },\n  nodes: {\n    get () {\n      if (this[kNodes] === null) {\n        this[kNodes] = new NodesApi(this.transport, this[kConfigurationError])\n      }\n      return this[kNodes]\n    }\n  },\n  open_point_in_time: { get () { return this.openPointInTime } },\n  put_script: { get () { return this.putScript } },\n  rank_eval: { get () { return this.rankEval } },\n  reindex_rethrottle: { get () { return this.reindexRethrottle } },\n  render_search_template: { get () { return this.renderSearchTemplate } },\n  rollup: {\n    get () {\n      if (this[kRollup] === null) {\n        this[kRollup] = new RollupApi(this.transport, this[kConfigurationError])\n      }\n      return this[kRollup]\n    }\n  },\n  scripts_painless_execute: { get () { return this.scriptsPainlessExecute } },\n  search_mvt: { get () { return this.searchMvt } },\n  search_shards: { get () { return this.searchShards } },\n  search_template: { get () { return this.searchTemplate } },\n  searchableSnapshots: {\n    get () {\n      if (this[kSearchableSnapshots] === null) {\n        this[kSearchableSnapshots] = new SearchableSnapshotsApi(this.transport, this[kConfigurationError])\n      }\n      return this[kSearchableSnapshots]\n    }\n  },\n  searchable_snapshots: { get () { return this.searchableSnapshots } },\n  security: {\n    get () {\n      if (this[kSecurity] === null) {\n        this[kSecurity] = new SecurityApi(this.transport, this[kConfigurationError])\n      }\n      return this[kSecurity]\n    }\n  },\n  shutdown: {\n    get () {\n      if (this[kShutdown] === null) {\n        this[kShutdown] = new ShutdownApi(this.transport, this[kConfigurationError])\n      }\n      return this[kShutdown]\n    }\n  },\n  slm: {\n    get () {\n      if (this[kSlm] === null) {\n        this[kSlm] = new SlmApi(this.transport, this[kConfigurationError])\n      }\n      return this[kSlm]\n    }\n  },\n  snapshot: {\n    get () {\n      if (this[kSnapshot] === null) {\n        this[kSnapshot] = new SnapshotApi(this.transport, this[kConfigurationError])\n      }\n      return this[kSnapshot]\n    }\n  },\n  sql: {\n    get () {\n      if (this[kSql] === null) {\n        this[kSql] = new SqlApi(this.transport, this[kConfigurationError])\n      }\n      return this[kSql]\n    }\n  },\n  ssl: {\n    get () {\n      if (this[kSsl] === null) {\n        this[kSsl] = new SslApi(this.transport, this[kConfigurationError])\n      }\n      return this[kSsl]\n    }\n  },\n  tasks: {\n    get () {\n      if (this[kTasks] === null) {\n        this[kTasks] = new TasksApi(this.transport, this[kConfigurationError])\n      }\n      return this[kTasks]\n    }\n  },\n  terms_enum: { get () { return this.termsEnum } },\n  textStructure: {\n    get () {\n      if (this[kTextStructure] === null) {\n        this[kTextStructure] = new TextStructureApi(this.transport, this[kConfigurationError])\n      }\n      return this[kTextStructure]\n    }\n  },\n  text_structure: { get () { return this.textStructure } },\n  transform: {\n    get () {\n      if (this[kTransform] === null) {\n        this[kTransform] = new TransformApi(this.transport, this[kConfigurationError])\n      }\n      return this[kTransform]\n    }\n  },\n  update_by_query: { get () { return this.updateByQuery } },\n  update_by_query_rethrottle: { get () { return this.updateByQueryRethrottle } },\n  watcher: {\n    get () {\n      if (this[kWatcher] === null) {\n        this[kWatcher] = new WatcherApi(this.transport, this[kConfigurationError])\n      }\n      return this[kWatcher]\n    }\n  },\n  xpack: {\n    get () {\n      if (this[kXpack] === null) {\n        this[kXpack] = new XpackApi(this.transport, this[kConfigurationError])\n      }\n      return this[kXpack]\n    }\n  }\n})\n\nmodule.exports = ESAPI\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nconst result = { body: null, statusCode: null, headers: null, warnings: null }\nconst kConfigurationError = Symbol('configuration error')\n\nfunction handleError (err, callback) {\n  if (callback) {\n    process.nextTick(callback, err, result)\n    return { then: noop, catch: noop, abort: noop }\n  }\n  return Promise.reject(err)\n}\n\nfunction snakeCaseKeys (acceptedQuerystring, snakeCase, querystring) {\n  const target = {}\n  const keys = Object.keys(querystring)\n  for (let i = 0, len = keys.length; i < len; i++) {\n    const key = keys[i]\n    target[snakeCase[key] || key] = querystring[key]\n  }\n  return target\n}\n\nfunction normalizeArguments (params, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n  if (typeof params === 'function' || params == null) {\n    callback = params\n    params = {}\n    options = {}\n  }\n  return [params, options, callback]\n}\n\nfunction noop () {}\n\nmodule.exports = { handleError, snakeCaseKeys, normalizeArguments, noop, kConfigurationError }\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nconst { EventEmitter } = require('events')\nconst { URL } = require('url')\nconst buffer = require('buffer')\nconst debug = require('debug')('elasticsearch')\nconst Transport = require('./lib/Transport')\nconst Connection = require('./lib/Connection')\nconst { ConnectionPool, CloudConnectionPool } = require('./lib/pool')\nconst Helpers = require('./lib/Helpers')\nconst Serializer = require('./lib/Serializer')\nconst errors = require('./lib/errors')\nconst { ConfigurationError } = errors\nconst { prepareHeaders } = Connection.internals\nlet clientVersion = require('./package.json').version\n/* istanbul ignore next */\nif (clientVersion.includes('-')) {\n  // clean prerelease\n  clientVersion = clientVersion.slice(0, clientVersion.indexOf('-')) + 'p'\n}\nconst nodeVersion = process.versions.node\n\nconst kInitialOptions = Symbol('elasticsearchjs-initial-options')\nconst kChild = Symbol('elasticsearchjs-child')\nconst kExtensions = Symbol('elasticsearchjs-extensions')\nconst kEventEmitter = Symbol('elasticsearchjs-event-emitter')\n\nconst ESAPI = require('./api')\n\nclass Client extends ESAPI {\n  constructor (opts = {}) {\n    super({ ConfigurationError })\n    if (opts.cloud && opts[kChild] === undefined) {\n      const { id, username, password } = opts.cloud\n      // the cloud id is `cluster-name:base64encodedurl`\n      // the url is a string divided by two '$', the first is the cloud url\n      // the second the elasticsearch instance, the third the kibana instance\n      const cloudUrls = Buffer.from(id.split(':')[1], 'base64').toString().split('$')\n\n      // TODO: remove username and password here in 8\n      if (username && password) {\n        opts.auth = Object.assign({}, opts.auth, { username, password })\n      }\n      opts.node = `https://${cloudUrls[1]}.${cloudUrls[0]}`\n\n      // Cloud has better performances with compression enabled\n      // see https://github.com/elastic/elasticsearch-py/pull/704.\n      // So unless the user specifies otherwise, we enable compression.\n      if (opts.compression == null) opts.compression = 'gzip'\n      if (opts.suggestCompression == null) opts.suggestCompression = true\n      if (opts.ssl == null ||\n         (opts.ssl && opts.ssl.secureProtocol == null)) {\n        opts.ssl = opts.ssl || {}\n        opts.ssl.secureProtocol = 'TLSv1_2_method'\n      }\n    }\n\n    if (!opts.node && !opts.nodes) {\n      throw new ConfigurationError('Missing node(s) option')\n    }\n\n    if (opts[kChild] === undefined) {\n      const checkAuth = getAuth(opts.node || opts.nodes)\n      if (checkAuth && checkAuth.username && checkAuth.password) {\n        opts.auth = Object.assign({}, opts.auth, { username: checkAuth.username, password: checkAuth.password })\n      }\n    }\n\n    const options = opts[kChild] !== undefined\n      ? opts[kChild].initialOptions\n      : Object.assign({}, {\n        Connection,\n        Transport,\n        Serializer,\n        ConnectionPool: opts.cloud ? CloudConnectionPool : ConnectionPool,\n        maxRetries: 3,\n        requestTimeout: 30000,\n        pingTimeout: 3000,\n        sniffInterval: false,\n        sniffOnStart: false,\n        sniffEndpoint: '_nodes/_all/http',\n        sniffOnConnectionFault: false,\n        resurrectStrategy: 'ping',\n        suggestCompression: false,\n        compression: false,\n        ssl: null,\n        caFingerprint: null,\n        agent: null,\n        headers: {},\n        nodeFilter: null,\n        nodeSelector: 'round-robin',\n        generateRequestId: null,\n        name: 'elasticsearch-js',\n        auth: null,\n        opaqueIdPrefix: null,\n        context: null,\n        proxy: null,\n        enableMetaHeader: true,\n        disablePrototypePoisoningProtection: false,\n        maxResponseSize: null,\n        maxCompressedResponseSize: null\n      }, opts)\n\n    if (options.maxResponseSize !== null && options.maxResponseSize > buffer.constants.MAX_STRING_LENGTH) {\n      throw new ConfigurationError(`The maxResponseSize cannot be bigger than ${buffer.constants.MAX_STRING_LENGTH}`)\n    }\n\n    if (options.maxCompressedResponseSize !== null && options.maxCompressedResponseSize > buffer.constants.MAX_LENGTH) {\n      throw new ConfigurationError(`The maxCompressedResponseSize cannot be bigger than ${buffer.constants.MAX_LENGTH}`)\n    }\n\n    if (options.caFingerprint !== null && isHttpConnection(opts.node || opts.nodes)) {\n      throw new ConfigurationError('You can\\'t configure the caFingerprint with a http connection')\n    }\n\n    if (process.env.ELASTIC_CLIENT_APIVERSIONING === 'true') {\n      options.headers = Object.assign({ accept: 'application/vnd.elasticsearch+json; compatible-with=7' }, options.headers)\n    }\n\n    this[kInitialOptions] = options\n    this[kExtensions] = []\n    this.name = options.name\n\n    if (options.enableMetaHeader) {\n      options.headers['x-elastic-client-meta'] = `es=${clientVersion},js=${nodeVersion},t=${clientVersion},hc=${nodeVersion}`\n    }\n\n    if (opts[kChild] !== undefined) {\n      this.serializer = options[kChild].serializer\n      this.connectionPool = options[kChild].connectionPool\n      this[kEventEmitter] = options[kChild].eventEmitter\n    } else {\n      this[kEventEmitter] = new EventEmitter()\n      this.serializer = new options.Serializer({\n        disablePrototypePoisoningProtection: options.disablePrototypePoisoningProtection\n      })\n      this.connectionPool = new options.ConnectionPool({\n        pingTimeout: options.pingTimeout,\n        resurrectStrategy: options.resurrectStrategy,\n        ssl: options.ssl,\n        agent: options.agent,\n        proxy: options.proxy,\n        Connection: options.Connection,\n        auth: options.auth,\n        emit: this[kEventEmitter].emit.bind(this[kEventEmitter]),\n        caFingerprint: options.caFingerprint,\n        sniffEnabled: options.sniffInterval !== false ||\n                      options.sniffOnStart !== false ||\n                      options.sniffOnConnectionFault !== false\n      })\n      // Add the connections before initialize the Transport\n      this.connectionPool.addConnection(options.node || options.nodes)\n    }\n\n    this.transport = new options.Transport({\n      emit: this[kEventEmitter].emit.bind(this[kEventEmitter]),\n      connectionPool: this.connectionPool,\n      serializer: this.serializer,\n      maxRetries: options.maxRetries,\n      requestTimeout: options.requestTimeout,\n      sniffInterval: options.sniffInterval,\n      sniffOnStart: options.sniffOnStart,\n      sniffOnConnectionFault: options.sniffOnConnectionFault,\n      sniffEndpoint: options.sniffEndpoint,\n      suggestCompression: options.suggestCompression,\n      compression: options.compression,\n      headers: options.headers,\n      nodeFilter: options.nodeFilter,\n      nodeSelector: options.nodeSelector,\n      generateRequestId: options.generateRequestId,\n      name: options.name,\n      opaqueIdPrefix: options.opaqueIdPrefix,\n      context: options.context,\n      maxResponseSize: options.maxResponseSize,\n      maxCompressedResponseSize: options.maxCompressedResponseSize\n    })\n\n    this.helpers = new Helpers({\n      client: this,\n      maxRetries: options.maxRetries,\n      metaHeader: options.enableMetaHeader\n        ? `es=${clientVersion},js=${nodeVersion},t=${clientVersion},hc=${nodeVersion}`\n        : null\n    })\n  }\n\n  get emit () {\n    return this[kEventEmitter].emit.bind(this[kEventEmitter])\n  }\n\n  get on () {\n    return this[kEventEmitter].on.bind(this[kEventEmitter])\n  }\n\n  get once () {\n    return this[kEventEmitter].once.bind(this[kEventEmitter])\n  }\n\n  get off () {\n    return this[kEventEmitter].off.bind(this[kEventEmitter])\n  }\n\n  extend (name, opts, fn) {\n    if (typeof opts === 'function') {\n      fn = opts\n      opts = {}\n    }\n\n    let [namespace, method] = name.split('.')\n    if (method == null) {\n      method = namespace\n      namespace = null\n    }\n\n    if (namespace != null) {\n      if (this[namespace] != null && this[namespace][method] != null && opts.force !== true) {\n        throw new Error(`The method \"${method}\" already exists on namespace \"${namespace}\"`)\n      }\n\n      if (this[namespace] == null) this[namespace] = {}\n      this[namespace][method] = fn({\n        makeRequest: this.transport.request.bind(this.transport),\n        result: { body: null, statusCode: null, headers: null, warnings: null },\n        ConfigurationError\n      })\n    } else {\n      if (this[method] != null && opts.force !== true) {\n        throw new Error(`The method \"${method}\" already exists`)\n      }\n\n      this[method] = fn({\n        makeRequest: this.transport.request.bind(this.transport),\n        result: { body: null, statusCode: null, headers: null, warnings: null },\n        ConfigurationError\n      })\n    }\n\n    this[kExtensions].push({ name, opts, fn })\n  }\n\n  child (opts) {\n    // Merge the new options with the initial ones\n    const options = Object.assign({}, this[kInitialOptions], opts)\n    // Pass to the child client the parent instances that cannot be overriden\n    options[kChild] = {\n      connectionPool: this.connectionPool,\n      serializer: this.serializer,\n      eventEmitter: this[kEventEmitter],\n      initialOptions: options\n    }\n\n    /* istanbul ignore else */\n    if (options.auth !== undefined) {\n      options.headers = prepareHeaders(options.headers, options.auth)\n    }\n\n    const client = new Client(options)\n    // sync product check\n    const tSymbol = Object.getOwnPropertySymbols(this.transport)\n      .filter(symbol => symbol.description === 'product check')[0]\n    client.transport[tSymbol] = this.transport[tSymbol]\n    // Add parent extensions\n    if (this[kExtensions].length > 0) {\n      this[kExtensions].forEach(({ name, opts, fn }) => {\n        client.extend(name, opts, fn)\n      })\n    }\n    return client\n  }\n\n  close (callback) {\n    if (callback == null) {\n      return new Promise((resolve, reject) => {\n        this.close(resolve)\n      })\n    }\n    debug('Closing the client')\n    this.connectionPool.empty(callback)\n  }\n}\n\nfunction getAuth (node) {\n  if (Array.isArray(node)) {\n    for (const url of node) {\n      const auth = getUsernameAndPassword(url)\n      if (auth.username !== '' && auth.password !== '') {\n        return auth\n      }\n    }\n\n    return null\n  }\n\n  const auth = getUsernameAndPassword(node)\n  if (auth.username !== '' && auth.password !== '') {\n    return auth\n  }\n\n  return null\n\n  function getUsernameAndPassword (node) {\n    /* istanbul ignore else */\n    if (typeof node === 'string') {\n      const { username, password } = new URL(node)\n      return {\n        username: decodeURIComponent(username),\n        password: decodeURIComponent(password)\n      }\n    } else if (node.url instanceof URL) {\n      return {\n        username: decodeURIComponent(node.url.username),\n        password: decodeURIComponent(node.url.password)\n      }\n    }\n  }\n}\n\nfunction isHttpConnection (node) {\n  if (Array.isArray(node)) {\n    return node.some((n) => (typeof n === 'string' ? new URL(n).protocol : n.url.protocol) === 'http:')\n  } else {\n    return (typeof node === 'string' ? new URL(node).protocol : node.url.protocol) === 'http:'\n  }\n}\n\nconst events = {\n  RESPONSE: 'response',\n  REQUEST: 'request',\n  SNIFF: 'sniff',\n  RESURRECT: 'resurrect',\n  SERIALIZATION: 'serialization',\n  DESERIALIZATION: 'deserialization'\n}\n\nmodule.exports = {\n  Client,\n  Transport,\n  ConnectionPool,\n  Connection,\n  Serializer,\n  events,\n  errors\n}\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nconst assert = require('assert')\nconst { inspect } = require('util')\nconst hpagent = require('hpagent')\nconst http = require('http')\nconst https = require('https')\nconst debug = require('debug')('elasticsearch')\nconst { pipeline } = require('stream')\nconst INVALID_PATH_REGEX = /[^\\u0021-\\u00ff]/\nconst {\n  ConnectionError,\n  RequestAbortedError,\n  TimeoutError,\n  ConfigurationError\n} = require('./errors')\n\nclass Connection {\n  constructor (opts) {\n    this.url = opts.url\n    this.ssl = opts.ssl || null\n    this.id = opts.id || stripAuth(opts.url.href)\n    this.headers = prepareHeaders(opts.headers, opts.auth)\n    this.deadCount = 0\n    this.resurrectTimeout = 0\n    this.caFingerprint = opts.caFingerprint\n\n    this._openRequests = 0\n    this._status = opts.status || Connection.statuses.ALIVE\n    this.roles = Object.assign({}, defaultRoles, opts.roles)\n\n    if (!['http:', 'https:'].includes(this.url.protocol)) {\n      throw new ConfigurationError(`Invalid protocol: '${this.url.protocol}'`)\n    }\n\n    if (typeof opts.agent === 'function') {\n      this.agent = opts.agent(opts)\n    } else if (opts.agent === false) {\n      this.agent = undefined\n    } else {\n      const agentOptions = Object.assign({}, {\n        keepAlive: true,\n        keepAliveMsecs: 1000,\n        maxSockets: 256,\n        maxFreeSockets: 256,\n        scheduling: 'lifo'\n      }, opts.agent)\n      if (opts.proxy) {\n        agentOptions.proxy = opts.proxy\n        this.agent = this.url.protocol === 'http:'\n          ? new hpagent.HttpProxyAgent(agentOptions)\n          : new hpagent.HttpsProxyAgent(Object.assign({}, agentOptions, this.ssl))\n      } else {\n        this.agent = this.url.protocol === 'http:'\n          ? new http.Agent(agentOptions)\n          : new https.Agent(Object.assign({}, agentOptions, this.ssl))\n      }\n    }\n\n    this.makeRequest = this.url.protocol === 'http:'\n      ? http.request\n      : https.request\n  }\n\n  request (params, callback) {\n    this._openRequests++\n    let cleanedListeners = false\n\n    const requestParams = this.buildRequestObject(params)\n    // https://github.com/nodejs/node/commit/b961d9fd83\n    if (INVALID_PATH_REGEX.test(requestParams.path) === true) {\n      callback(new TypeError(`ERR_UNESCAPED_CHARACTERS: ${requestParams.path}`), null)\n      /* istanbul ignore next */\n      return { abort: () => {} }\n    }\n\n    debug('Starting a new request', params)\n    const request = this.makeRequest(requestParams)\n\n    const onResponse = response => {\n      cleanListeners()\n      this._openRequests--\n      callback(null, response)\n    }\n\n    const onTimeout = () => {\n      cleanListeners()\n      this._openRequests--\n      request.once('error', () => {}) // we need to catch the request aborted error\n      request.abort()\n      callback(new TimeoutError('Request timed out', params), null)\n    }\n\n    const onError = err => {\n      cleanListeners()\n      this._openRequests--\n      let message = err.message\n      if (err.code === 'ECONNRESET') {\n        /* istanbul ignore next */\n        const socket = request.socket || {}\n        /* istanbul ignore next */\n        message += ` - Local: ${socket.localAddress || 'unknown'}:${socket.localPort || 'unknown'}, Remote: ${socket.remoteAddress || 'unknown'}:${socket.remotePort || 'unknown'}`\n      }\n      callback(new ConnectionError(message), null)\n    }\n\n    const onAbort = () => {\n      cleanListeners()\n      request.once('error', () => {}) // we need to catch the request aborted error\n      debug('Request aborted', params)\n      this._openRequests--\n      callback(new RequestAbortedError(), null)\n    }\n\n    const onSocket = socket => {\n      /* istanbul ignore else */\n      if (!socket.isSessionReused()) {\n        socket.once('secureConnect', () => {\n          const issuerCertificate = getIssuerCertificate(socket)\n          /* istanbul ignore next */\n          if (issuerCertificate == null) {\n            onError(new Error('Invalid or malformed certificate'))\n            request.once('error', () => {}) // we need to catch the request aborted error\n            return request.abort()\n          }\n\n          // Check if fingerprint matches\n          /* istanbul ignore else */\n          if (this.caFingerprint !== issuerCertificate.fingerprint256) {\n            onError(new Error('Server certificate CA fingerprint does not match the value configured in caFingerprint'))\n            request.once('error', () => {}) // we need to catch the request aborted error\n            return request.abort()\n          }\n        })\n      }\n    }\n\n    request.on('response', onResponse)\n    request.on('timeout', onTimeout)\n    request.on('error', onError)\n    request.on('abort', onAbort)\n    if (this.caFingerprint != null) {\n      request.on('socket', onSocket)\n    }\n\n    // Disables the Nagle algorithm\n    request.setNoDelay(true)\n\n    // starts the request\n    if (isStream(params.body) === true) {\n      pipeline(params.body, request, err => {\n        /* istanbul ignore if  */\n        if (err != null && cleanedListeners === false) {\n          cleanListeners()\n          this._openRequests--\n          callback(err, null)\n        }\n      })\n    } else {\n      request.end(params.body)\n    }\n\n    return request\n\n    function cleanListeners () {\n      request.removeListener('response', onResponse)\n      request.removeListener('timeout', onTimeout)\n      request.removeListener('error', onError)\n      request.removeListener('abort', onAbort)\n      request.removeListener('socket', onSocket)\n      cleanedListeners = true\n    }\n  }\n\n  // TODO: write a better closing logic\n  close (callback = () => {}) {\n    debug('Closing connection', this.id)\n    if (this._openRequests > 0) {\n      setTimeout(() => this.close(callback), 1000)\n    } else {\n      if (this.agent !== undefined) {\n        this.agent.destroy()\n      }\n      callback()\n    }\n  }\n\n  setRole (role, enabled) {\n    if (validRoles.indexOf(role) === -1) {\n      throw new ConfigurationError(`Unsupported role: '${role}'`)\n    }\n    if (typeof enabled !== 'boolean') {\n      throw new ConfigurationError('enabled should be a boolean')\n    }\n\n    this.roles[role] = enabled\n    return this\n  }\n\n  get status () {\n    return this._status\n  }\n\n  set status (status) {\n    assert(\n      ~validStatuses.indexOf(status),\n      `Unsupported status: '${status}'`\n    )\n    this._status = status\n  }\n\n  buildRequestObject (params) {\n    const url = this.url\n    const request = {\n      protocol: url.protocol,\n      hostname: url.hostname[0] === '['\n        ? url.hostname.slice(1, -1)\n        : url.hostname,\n      hash: url.hash,\n      search: url.search,\n      pathname: url.pathname,\n      path: '',\n      href: url.href,\n      origin: url.origin,\n      // https://github.com/elastic/elasticsearch-js/issues/843\n      port: url.port !== '' ? url.port : undefined,\n      headers: this.headers,\n      agent: this.agent\n    }\n\n    const paramsKeys = Object.keys(params)\n    for (let i = 0, len = paramsKeys.length; i < len; i++) {\n      const key = paramsKeys[i]\n      if (key === 'path') {\n        request.pathname = resolve(request.pathname, params[key])\n      } else if (key === 'querystring' && !!params[key] === true) {\n        if (request.search === '') {\n          request.search = '?' + params[key]\n        } else {\n          request.search += '&' + params[key]\n        }\n      } else if (key === 'headers') {\n        request.headers = Object.assign({}, request.headers, params.headers)\n      } else {\n        request[key] = params[key]\n      }\n    }\n\n    request.path = request.pathname + request.search\n\n    return request\n  }\n\n  // Handles console.log and utils.inspect invocations.\n  // We want to hide `auth`, `agent` and `ssl` since they made\n  // the logs very hard to read. The user can still\n  // access them with `instance.agent` and `instance.ssl`.\n  [inspect.custom] (depth, options) {\n    const {\n      authorization,\n      ...headers\n    } = this.headers\n\n    return {\n      url: stripAuth(this.url.toString()),\n      id: this.id,\n      headers,\n      deadCount: this.deadCount,\n      resurrectTimeout: this.resurrectTimeout,\n      _openRequests: this._openRequests,\n      status: this.status,\n      roles: this.roles\n    }\n  }\n\n  toJSON () {\n    const {\n      authorization,\n      ...headers\n    } = this.headers\n\n    return {\n      url: stripAuth(this.url.toString()),\n      id: this.id,\n      headers,\n      deadCount: this.deadCount,\n      resurrectTimeout: this.resurrectTimeout,\n      _openRequests: this._openRequests,\n      status: this.status,\n      roles: this.roles\n    }\n  }\n}\n\nConnection.statuses = {\n  ALIVE: 'alive',\n  DEAD: 'dead'\n}\n\nConnection.roles = {\n  MASTER: 'master',\n  DATA: 'data',\n  INGEST: 'ingest',\n  ML: 'ml'\n}\n\nconst defaultRoles = {\n  [Connection.roles.MASTER]: true,\n  [Connection.roles.DATA]: true,\n  [Connection.roles.INGEST]: true,\n  [Connection.roles.ML]: false\n}\n\nconst validStatuses = Object.keys(Connection.statuses)\n  .map(k => Connection.statuses[k])\nconst validRoles = Object.keys(Connection.roles)\n  .map(k => Connection.roles[k])\n\nfunction stripAuth (url) {\n  if (url.indexOf('@') === -1) return url\n  return url.slice(0, url.indexOf('//') + 2) + url.slice(url.indexOf('@') + 1)\n}\n\nfunction isStream (obj) {\n  return obj != null && typeof obj.pipe === 'function'\n}\n\nfunction resolve (host, path) {\n  const hostEndWithSlash = host[host.length - 1] === '/'\n  const pathStartsWithSlash = path[0] === '/'\n\n  if (hostEndWithSlash === true && pathStartsWithSlash === true) {\n    return host + path.slice(1)\n  } else if (hostEndWithSlash !== pathStartsWithSlash) {\n    return host + path\n  } else {\n    return host + '/' + path\n  }\n}\n\nfunction prepareHeaders (headers = {}, auth) {\n  if (auth != null && headers.authorization == null) {\n    /* istanbul ignore else */\n    if (auth.apiKey) {\n      if (typeof auth.apiKey === 'object') {\n        headers.authorization = 'ApiKey ' + Buffer.from(`${auth.apiKey.id}:${auth.apiKey.api_key}`).toString('base64')\n      } else {\n        headers.authorization = `ApiKey ${auth.apiKey}`\n      }\n    } else if (auth.bearer) {\n      headers.authorization = `Bearer ${auth.bearer}`\n    } else if (auth.username && auth.password) {\n      headers.authorization = 'Basic ' + Buffer.from(`${auth.username}:${auth.password}`).toString('base64')\n    }\n  }\n  return headers\n}\n\nfunction getIssuerCertificate (socket) {\n  let certificate = socket.getPeerCertificate(true)\n  while (certificate && Object.keys(certificate).length > 0) {\n    // invalid certificate\n    if (certificate.issuerCertificate == null) {\n      return null\n    }\n\n    // We have reached the root certificate.\n    // In case of self-signed certificates, `issuerCertificate` may be a circular reference.\n    if (certificate.fingerprint256 === certificate.issuerCertificate.fingerprint256) {\n      break\n    }\n\n    // continue the loop\n    certificate = certificate.issuerCertificate\n  }\n  return certificate\n}\n\nmodule.exports = Connection\nmodule.exports.internals = { prepareHeaders, getIssuerCertificate }\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\n/* eslint camelcase: 0 */\n\nconst { Readable } = require('stream')\nconst { promisify } = require('util')\nconst { ResponseError, ConfigurationError } = require('./errors')\n\nconst pImmediate = promisify(setImmediate)\nconst sleep = promisify(setTimeout)\nconst kClient = Symbol('elasticsearch-client')\nconst kMetaHeader = Symbol('meta header')\n/* istanbul ignore next */\nconst noop = () => {}\n\nclass Helpers {\n  constructor (opts) {\n    this[kClient] = opts.client\n    this[kMetaHeader] = opts.metaHeader\n    this.maxRetries = opts.maxRetries\n  }\n\n  /**\n   * Runs a search operation. The only difference between client.search and this utility,\n   * is that we are only returning the hits to the user and not the full ES response.\n   * This helper automatically adds `filter_path=hits.hits._source` to the querystring,\n   * as it will only need the documents source.\n   * @param {object} params - The Elasticsearch's search parameters.\n   * @param {object} options - The client optional configuration for this request.\n   * @return {array} The documents that matched the request.\n   */\n  async search (params, options) {\n    appendFilterPath('hits.hits._source', params, true)\n    const { body } = await this[kClient].search(params, options)\n    if (body.hits && body.hits.hits) {\n      return body.hits.hits.map(d => d._source)\n    }\n    return []\n  }\n\n  /**\n   * Runs a scroll search operation. This function returns an async iterator, allowing\n   * the user to use a for await loop to get all the results of a given search.\n   * ```js\n   * for await (const result of client.helpers.scrollSearch({ params })) {\n   *   console.log(result)\n   * }\n   * ```\n   * Each result represents the entire body of a single scroll search request,\n   * if you just need to scroll the results, use scrollDocuments.\n   * This function handles automatically retries on 429 status code.\n   * @param {object} params - The Elasticsearch's search parameters.\n   * @param {object} options - The client optional configuration for this request.\n   * @return {iterator} the async iterator\n   */\n  async * scrollSearch (params, options = {}) {\n    if (this[kMetaHeader] !== null) {\n      options.headers = options.headers || {}\n      options.headers['x-elastic-client-meta'] = this[kMetaHeader] + ',h=s'\n    }\n    // TODO: study scroll search slices\n    const wait = options.wait || 5000\n    const maxRetries = options.maxRetries || this.maxRetries\n    if (Array.isArray(options.ignore)) {\n      options.ignore.push(429)\n    } else {\n      options.ignore = [429]\n    }\n    params.scroll = params.scroll || '1m'\n    appendFilterPath('_scroll_id', params, false)\n    const { method, body, index, ...querystring } = params\n\n    let response = null\n    for (let i = 0; i <= maxRetries; i++) {\n      response = await this[kClient].search(params, options)\n      if (response.statusCode !== 429) break\n      await sleep(wait)\n    }\n    if (response.statusCode === 429) {\n      throw new ResponseError(response)\n    }\n\n    let scroll_id = response.body._scroll_id\n    let stop = false\n    const clear = async () => {\n      stop = true\n      await this[kClient].clearScroll(\n        { body: { scroll_id } },\n        { ignore: [400], ...options }\n      )\n    }\n\n    while (response.body.hits && response.body.hits.hits.length > 0) {\n      // scroll id is always present in the response, but it might\n      // change over time based on the number of shards\n      scroll_id = response.body._scroll_id\n      response.clear = clear\n      addDocumentsGetter(response)\n\n      yield response\n\n      if (stop === true) {\n        break\n      }\n\n      for (let i = 0; i <= maxRetries; i++) {\n        response = await this[kClient].scroll({\n          scroll: querystring.scroll,\n          rest_total_hits_as_int: querystring.rest_total_hits_as_int || querystring.restTotalHitsAsInt,\n          body: { scroll_id }\n        }, options)\n        if (response.statusCode !== 429) break\n        await sleep(wait)\n      }\n      if (response.statusCode === 429) {\n        throw new ResponseError(response)\n      }\n    }\n\n    if (stop === false) {\n      await clear()\n    }\n  }\n\n  /**\n   * Runs a scroll search operation. This function returns an async iterator, allowing\n   * the user to use a for await loop to get all the documents of a given search.\n   * ```js\n   * for await (const document of client.helpers.scrollSearch({ params })) {\n   *   console.log(document)\n   * }\n   * ```\n   * Each document is what you will find by running a scrollSearch and iterating on the hits array.\n   * This helper automatically adds `filter_path=hits.hits._source` to the querystring,\n   * as it will only need the documents source.\n   * @param {object} params - The Elasticsearch's search parameters.\n   * @param {object} options - The client optional configuration for this request.\n   * @return {iterator} the async iterator\n   */\n  async * scrollDocuments (params, options) {\n    appendFilterPath('hits.hits._source', params, true)\n    for await (const { documents } of this.scrollSearch(params, options)) {\n      for (const document of documents) {\n        yield document\n      }\n    }\n  }\n\n  /**\n   * Creates a msearch helper instance. Once you configure it, you can use the provided\n   * `search` method to add new searches in the queue.\n   * @param {object} options - The configuration of the msearch operations.\n   * @param {object} reqOptions - The client optional configuration for this request.\n   * @return {object} The possible operations to run.\n   */\n  msearch (options = {}, reqOptions = {}) {\n    const client = this[kClient]\n    const {\n      operations = 5,\n      concurrency = 5,\n      flushInterval = 500,\n      retries = this.maxRetries,\n      wait = 5000,\n      ...msearchOptions\n    } = options\n\n    let stopReading = false\n    let stopError = null\n    let timeoutRef = null\n    const operationsStream = new Readable({\n      objectMode: true,\n      read (size) {}\n    })\n\n    const p = iterate()\n    const helper = {\n      then (onFulfilled, onRejected) {\n        return p.then(onFulfilled, onRejected)\n      },\n      catch (onRejected) {\n        return p.catch(onRejected)\n      },\n      stop (error = null) {\n        if (stopReading === true) return\n        stopReading = true\n        stopError = error\n        operationsStream.push(null)\n      },\n      // TODO: support abort a single search?\n      // NOTE: the validation checks are synchronous and the callback/promise will\n      //       be resolved in the same tick. We might want to fix this in the future.\n      search (header, body, callback) {\n        if (stopReading === true) {\n          const error = stopError === null\n            ? new ConfigurationError('The msearch processor has been stopped')\n            : stopError\n          return callback ? callback(error, {}) : Promise.reject(error)\n        }\n\n        if (!(typeof header === 'object' && header !== null && !Array.isArray(header))) {\n          const error = new ConfigurationError('The header should be an object')\n          return callback ? callback(error, {}) : Promise.reject(error)\n        }\n\n        if (!(typeof body === 'object' && body !== null && !Array.isArray(body))) {\n          const error = new ConfigurationError('The body should be an object')\n          return callback ? callback(error, {}) : Promise.reject(error)\n        }\n\n        let promise = null\n        if (callback === undefined) {\n          let onFulfilled = null\n          let onRejected = null\n          promise = new Promise((resolve, reject) => {\n            onFulfilled = resolve\n            onRejected = reject\n          })\n          callback = function callback (err, result) {\n            err ? onRejected(err) : onFulfilled(result)\n          }\n        }\n\n        operationsStream.push([header, body, callback])\n\n        if (promise !== null) {\n          return promise\n        }\n      }\n    }\n\n    return helper\n\n    async function iterate () {\n      const { semaphore, finish } = buildSemaphore()\n      const msearchBody = []\n      const callbacks = []\n      let loadedOperations = 0\n      timeoutRef = setTimeout(onFlushTimeout, flushInterval)\n\n      for await (const operation of operationsStream) {\n        timeoutRef.refresh()\n        loadedOperations += 1\n        msearchBody.push(operation[0], operation[1])\n        callbacks.push(operation[2])\n        if (loadedOperations >= operations) {\n          const send = await semaphore()\n          send(msearchBody.slice(), callbacks.slice())\n          msearchBody.length = 0\n          callbacks.length = 0\n          loadedOperations = 0\n        }\n      }\n\n      clearTimeout(timeoutRef)\n      // In some cases the previos http call does not have finished,\n      // or we didn't reach the flush bytes threshold, so we force one last operation.\n      if (loadedOperations > 0) {\n        const send = await semaphore()\n        send(msearchBody, callbacks)\n      }\n\n      await finish()\n\n      if (stopError !== null) {\n        throw stopError\n      }\n\n      async function onFlushTimeout () {\n        if (loadedOperations === 0) return\n        const msearchBodyCopy = msearchBody.slice()\n        const callbacksCopy = callbacks.slice()\n        msearchBody.length = 0\n        callbacks.length = 0\n        loadedOperations = 0\n        try {\n          const send = await semaphore()\n          send(msearchBodyCopy, callbacksCopy)\n        } catch (err) {\n          /* istanbul ignore next */\n          helper.stop(err)\n        }\n      }\n    }\n\n    // This function builds a semaphore using the concurrency\n    // options of the msearch helper. It is used inside the iterator\n    // to guarantee that no more than the number of operations\n    // allowed to run at the same time are executed.\n    // It returns a semaphore function which resolves in the next tick\n    // if we didn't reach the maximim concurrency yet, otherwise it returns\n    // a promise that resolves as soon as one of the running request has finshed.\n    // The semaphore function resolves a send function, which will be used\n    // to send the actual msearch request.\n    // It also returns a finish function, which returns a promise that is resolved\n    // when there are no longer request running.\n    function buildSemaphore () {\n      let resolveSemaphore = null\n      let resolveFinish = null\n      let running = 0\n\n      return { semaphore, finish }\n\n      function finish () {\n        return new Promise((resolve, reject) => {\n          if (running === 0) {\n            resolve()\n          } else {\n            resolveFinish = resolve\n          }\n        })\n      }\n\n      function semaphore () {\n        if (running < concurrency) {\n          running += 1\n          return pImmediate(send)\n        } else {\n          return new Promise((resolve, reject) => {\n            resolveSemaphore = resolve\n          })\n        }\n      }\n\n      function send (msearchBody, callbacks) {\n        /* istanbul ignore if */\n        if (running > concurrency) {\n          throw new Error('Max concurrency reached')\n        }\n        msearchOperation(msearchBody, callbacks, () => {\n          running -= 1\n          if (resolveSemaphore) {\n            running += 1\n            resolveSemaphore(send)\n            resolveSemaphore = null\n          } else if (resolveFinish && running === 0) {\n            resolveFinish()\n          }\n        })\n      }\n    }\n\n    function msearchOperation (msearchBody, callbacks, done) {\n      let retryCount = retries\n\n      // Instead of going full on async-await, which would make the code easier to read,\n      // we have decided to use callback style instead.\n      // This because every time we use async await, V8 will create multiple promises\n      // behind the scenes, making the code slightly slower.\n      tryMsearch(msearchBody, callbacks, retrySearch)\n      function retrySearch (msearchBody, callbacks) {\n        if (msearchBody.length > 0 && retryCount > 0) {\n          retryCount -= 1\n          setTimeout(tryMsearch, wait, msearchBody, callbacks, retrySearch)\n          return\n        }\n\n        done()\n      }\n\n      // This function never returns an error, if the msearch operation fails,\n      // the error is dispatched to all search executors.\n      function tryMsearch (msearchBody, callbacks, done) {\n        client.msearch(Object.assign({}, msearchOptions, { body: msearchBody }), reqOptions, (err, results) => {\n          const retryBody = []\n          const retryCallbacks = []\n          if (err) {\n            addDocumentsGetter(results)\n            for (const callback of callbacks) {\n              callback(err, results)\n            }\n            return done(retryBody, retryCallbacks)\n          }\n          const { responses } = results.body\n          for (let i = 0, len = responses.length; i < len; i++) {\n            const response = responses[i]\n            if (response.status === 429 && retryCount > 0) {\n              retryBody.push(msearchBody[i * 2])\n              retryBody.push(msearchBody[(i * 2) + 1])\n              retryCallbacks.push(callbacks[i])\n              continue\n            }\n            const result = { ...results, body: response }\n            addDocumentsGetter(result)\n            if (response.status >= 400) {\n              callbacks[i](new ResponseError(result), result)\n            } else {\n              callbacks[i](null, result)\n            }\n          }\n          done(retryBody, retryCallbacks)\n        })\n      }\n    }\n  }\n\n  /**\n   * Creates a bulk helper instance. Once you configure it, you can pick which operation\n   * to execute with the given dataset, index, create, update, and delete.\n   * @param {object} options - The configuration of the bulk operation.\n   * @param {object} reqOptions - The client optional configuration for this request.\n   * @return {object} The possible operations to run with the datasource.\n   */\n  bulk (options, reqOptions = {}) {\n    const client = this[kClient]\n    const { serializer } = client\n    if (this[kMetaHeader] !== null) {\n      reqOptions.headers = reqOptions.headers || {}\n      reqOptions.headers['x-elastic-client-meta'] = this[kMetaHeader] + ',h=bp'\n    }\n    const {\n      datasource,\n      onDocument,\n      flushBytes = 5000000,\n      flushInterval = 30000,\n      concurrency = 5,\n      retries = this.maxRetries,\n      wait = 5000,\n      onDrop = noop,\n      refreshOnCompletion = false,\n      ...bulkOptions\n    } = options\n\n    if (datasource === undefined) {\n      return Promise.reject(new ConfigurationError('bulk helper: the datasource is required'))\n    }\n    if (!(Array.isArray(datasource) || Buffer.isBuffer(datasource) || typeof datasource.pipe === 'function' || datasource[Symbol.asyncIterator])) {\n      return Promise.reject(new ConfigurationError('bulk helper: the datasource must be an array or a buffer or a readable stream or an async generator'))\n    }\n    if (onDocument === undefined) {\n      return Promise.reject(new ConfigurationError('bulk helper: the onDocument callback is required'))\n    }\n\n    let shouldAbort = false\n    let timeoutRef = null\n    const stats = {\n      total: 0,\n      failed: 0,\n      retry: 0,\n      successful: 0,\n      noop: 0,\n      time: 0,\n      bytes: 0,\n      aborted: false\n    }\n\n    const p = iterate()\n    const helper = {\n      get stats () {\n        return stats\n      },\n      then (onFulfilled, onRejected) {\n        return p.then(onFulfilled, onRejected)\n      },\n      catch (onRejected) {\n        return p.catch(onRejected)\n      },\n      abort () {\n        clearTimeout(timeoutRef)\n        shouldAbort = true\n        stats.aborted = true\n        return this\n      }\n    }\n\n    return helper\n\n    /**\n     * Function that iterates over the given datasource and start a bulk operation as soon\n     * as it reaches the configured bulk size. It's designed to use the Node.js asynchronous\n     * model at this maximum capacity, as it will collect the next body to send while there is\n     * a running http call. In this way, the CPU time will be used carefully.\n     * The objects will be serialized right away, to approximate the byte length of the body.\n     * It creates an array of strings instead of a ndjson string because the bulkOperation\n     * will navigate the body for matching failed operations with the original document.\n     */\n    async function iterate () {\n      const { semaphore, finish } = buildSemaphore()\n      const startTime = Date.now()\n      const bulkBody = []\n      let actionBody = ''\n      let payloadBody = ''\n      let chunkBytes = 0\n      timeoutRef = setTimeout(onFlushTimeout, flushInterval)\n\n      for await (const chunk of datasource) {\n        if (shouldAbort === true) break\n        timeoutRef.refresh()\n        const action = onDocument(chunk)\n        const operation = Array.isArray(action)\n          ? Object.keys(action[0])[0]\n          : Object.keys(action)[0]\n        if (operation === 'index' || operation === 'create') {\n          actionBody = serializer.serialize(action)\n          payloadBody = typeof chunk === 'string' ? chunk : serializer.serialize(chunk)\n          chunkBytes += Buffer.byteLength(actionBody) + Buffer.byteLength(payloadBody)\n          bulkBody.push(actionBody, payloadBody)\n        } else if (operation === 'update') {\n          actionBody = serializer.serialize(action[0])\n          payloadBody = typeof chunk === 'string'\n            ? `{\"doc\":${chunk}}`\n            : serializer.serialize({ doc: chunk, ...action[1] })\n          chunkBytes += Buffer.byteLength(actionBody) + Buffer.byteLength(payloadBody)\n          bulkBody.push(actionBody, payloadBody)\n        } else if (operation === 'delete') {\n          actionBody = serializer.serialize(action)\n          chunkBytes += Buffer.byteLength(actionBody)\n          bulkBody.push(actionBody)\n        } else {\n          clearTimeout(timeoutRef)\n          throw new ConfigurationError(`Bulk helper invalid action: '${operation}'`)\n        }\n\n        if (chunkBytes >= flushBytes) {\n          stats.bytes += chunkBytes\n          const send = await semaphore()\n          send(bulkBody.slice())\n          bulkBody.length = 0\n          chunkBytes = 0\n        }\n      }\n\n      clearTimeout(timeoutRef)\n      // In some cases the previos http call does not have finished,\n      // or we didn't reach the flush bytes threshold, so we force one last operation.\n      if (shouldAbort === false && chunkBytes > 0) {\n        const send = await semaphore()\n        stats.bytes += chunkBytes\n        send(bulkBody)\n      }\n\n      await finish()\n\n      if (refreshOnCompletion) {\n        await client.indices.refresh({\n          index: typeof refreshOnCompletion === 'string'\n            ? refreshOnCompletion\n            : '_all'\n        }, reqOptions)\n      }\n\n      stats.time = Date.now() - startTime\n      stats.total = stats.successful + stats.failed\n\n      return stats\n\n      async function onFlushTimeout () {\n        if (chunkBytes === 0) return\n        stats.bytes += chunkBytes\n        const bulkBodyCopy = bulkBody.slice()\n        bulkBody.length = 0\n        chunkBytes = 0\n        try {\n          const send = await semaphore()\n          send(bulkBodyCopy)\n        } catch (err) {\n          /* istanbul ignore next */\n          helper.abort()\n        }\n      }\n    }\n\n    // This function builds a semaphore using the concurrency\n    // options of the bulk helper. It is used inside the iterator\n    // to guarantee that no more than the number of operations\n    // allowed to run at the same time are executed.\n    // It returns a semaphore function which resolves in the next tick\n    // if we didn't reach the maximim concurrency yet, otherwise it returns\n    // a promise that resolves as soon as one of the running request has finshed.\n    // The semaphore function resolves a send function, which will be used\n    // to send the actual bulk request.\n    // It also returns a finish function, which returns a promise that is resolved\n    // when there are no longer request running. It rejects an error if one\n    // of the request has failed for some reason.\n    function buildSemaphore () {\n      let resolveSemaphore = null\n      let resolveFinish = null\n      let rejectFinish = null\n      let error = null\n      let running = 0\n\n      return { semaphore, finish }\n\n      function finish () {\n        return new Promise((resolve, reject) => {\n          if (running === 0) {\n            if (error) {\n              reject(error)\n            } else {\n              resolve()\n            }\n          } else {\n            resolveFinish = resolve\n            rejectFinish = reject\n          }\n        })\n      }\n\n      function semaphore () {\n        if (running < concurrency) {\n          running += 1\n          return pImmediate(send)\n        } else {\n          return new Promise((resolve, reject) => {\n            resolveSemaphore = resolve\n          })\n        }\n      }\n\n      function send (bulkBody) {\n        /* istanbul ignore if */\n        if (running > concurrency) {\n          throw new Error('Max concurrency reached')\n        }\n        bulkOperation(bulkBody, err => {\n          running -= 1\n          if (err) {\n            shouldAbort = true\n            error = err\n          }\n          if (resolveSemaphore) {\n            running += 1\n            resolveSemaphore(send)\n            resolveSemaphore = null\n          } else if (resolveFinish && running === 0) {\n            if (error) {\n              rejectFinish(error)\n            } else {\n              resolveFinish()\n            }\n          }\n        })\n      }\n    }\n\n    function bulkOperation (bulkBody, callback) {\n      let retryCount = retries\n      let isRetrying = false\n\n      // Instead of going full on async-await, which would make the code easier to read,\n      // we have decided to use callback style instead.\n      // This because every time we use async await, V8 will create multiple promises\n      // behind the scenes, making the code slightly slower.\n      tryBulk(bulkBody, retryDocuments)\n      function retryDocuments (err, bulkBody) {\n        if (err) return callback(err)\n        if (shouldAbort === true) return callback()\n\n        if (bulkBody.length > 0) {\n          if (retryCount > 0) {\n            isRetrying = true\n            retryCount -= 1\n            stats.retry += bulkBody.length\n            setTimeout(tryBulk, wait, bulkBody, retryDocuments)\n            return\n          }\n          for (let i = 0, len = bulkBody.length; i < len; i = i + 2) {\n            const operation = Object.keys(serializer.deserialize(bulkBody[i]))[0]\n            onDrop({\n              status: 429,\n              error: null,\n              operation: serializer.deserialize(bulkBody[i]),\n              document: operation !== 'delete'\n                ? serializer.deserialize(bulkBody[i + 1])\n                /* istanbul ignore next */\n                : null,\n              retried: isRetrying\n            })\n            stats.failed += 1\n          }\n        }\n        callback()\n      }\n\n      function tryBulk (bulkBody, callback) {\n        if (shouldAbort === true) return callback(null, [])\n        client.bulk(Object.assign({}, bulkOptions, { body: bulkBody }), reqOptions, (err, { body }) => {\n          if (err) return callback(err, null)\n          if (body.errors === false) {\n            stats.successful += body.items.length\n            for (const item of body.items) {\n              if (item.update && item.update.result === 'noop') {\n                stats.noop++\n              }\n            }\n            return callback(null, [])\n          }\n          const retry = []\n          const { items } = body\n          for (let i = 0, len = items.length; i < len; i++) {\n            const action = items[i]\n            const operation = Object.keys(action)[0]\n            const { status } = action[operation]\n            const indexSlice = operation !== 'delete' ? i * 2 : i\n\n            if (status >= 400) {\n              // 429 is the only staus code where we might want to retry\n              // a document, because it was not an error in the document itself,\n              // but the ES node were handling too many operations.\n              if (status === 429) {\n                retry.push(bulkBody[indexSlice])\n                /* istanbul ignore next */\n                if (operation !== 'delete') {\n                  retry.push(bulkBody[indexSlice + 1])\n                }\n              } else {\n                onDrop({\n                  status: status,\n                  error: action[operation].error,\n                  operation: serializer.deserialize(bulkBody[indexSlice]),\n                  document: operation !== 'delete'\n                    ? serializer.deserialize(bulkBody[indexSlice + 1])\n                    : null,\n                  retried: isRetrying\n                })\n                stats.failed += 1\n              }\n            } else {\n              stats.successful += 1\n            }\n          }\n          callback(null, retry)\n        })\n      }\n    }\n  }\n}\n\n// Using a getter will improve the overall performances of the code,\n// as we will reed the documents only if needed.\nfunction addDocumentsGetter (result) {\n  Object.defineProperty(result, 'documents', {\n    get () {\n      if (this.body.hits && this.body.hits.hits) {\n        return this.body.hits.hits.map(d => d._source)\n      }\n      return []\n    }\n  })\n}\n\nfunction appendFilterPath (filter, params, force) {\n  if (params.filter_path !== undefined) {\n    params.filter_path += ',' + filter\n  } else if (params.filterPath !== undefined) {\n    params.filterPath += ',' + filter\n  } else if (force === true) {\n    params.filter_path = filter\n  }\n}\n\nmodule.exports = Helpers\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nconst { stringify } = require('querystring')\nconst debug = require('debug')('elasticsearch')\nconst sjson = require('secure-json-parse')\nconst { SerializationError, DeserializationError } = require('./errors')\nconst kJsonOptions = Symbol('secure json parse options')\n\nclass Serializer {\n  constructor (opts = {}) {\n    const disable = opts.disablePrototypePoisoningProtection\n    this[kJsonOptions] = {\n      protoAction: disable === true || disable === 'proto' ? 'ignore' : 'error',\n      constructorAction: disable === true || disable === 'constructor' ? 'ignore' : 'error'\n    }\n  }\n\n  serialize (object) {\n    debug('Serializing', object)\n    let json\n    try {\n      json = JSON.stringify(object)\n    } catch (err) {\n      throw new SerializationError(err.message, object)\n    }\n    return json\n  }\n\n  deserialize (json) {\n    debug('Deserializing', json)\n    let object\n    try {\n      object = sjson.parse(json, this[kJsonOptions])\n    } catch (err) {\n      throw new DeserializationError(err.message, json)\n    }\n    return object\n  }\n\n  ndserialize (array) {\n    debug('ndserialize', array)\n    if (Array.isArray(array) === false) {\n      throw new SerializationError('The argument provided is not an array')\n    }\n    let ndjson = ''\n    for (let i = 0, len = array.length; i < len; i++) {\n      if (typeof array[i] === 'string') {\n        ndjson += array[i] + '\\n'\n      } else {\n        ndjson += this.serialize(array[i]) + '\\n'\n      }\n    }\n    return ndjson\n  }\n\n  qserialize (object) {\n    debug('qserialize', object)\n    if (object == null) return ''\n    if (typeof object === 'string') return object\n    // arrays should be serialized as comma separated list\n    const keys = Object.keys(object)\n    for (let i = 0, len = keys.length; i < len; i++) {\n      const key = keys[i]\n      // elasticsearch will complain for keys without a value\n      if (object[key] === undefined) {\n        delete object[key]\n      } else if (Array.isArray(object[key]) === true) {\n        object[key] = object[key].join(',')\n      }\n    }\n    return stringify(object)\n  }\n}\n\nmodule.exports = Serializer\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nconst debug = require('debug')('elasticsearch')\nconst os = require('os')\nconst { gzip, unzip, createGzip } = require('zlib')\nconst buffer = require('buffer')\nconst ms = require('ms')\nconst { EventEmitter } = require('events')\nconst {\n  ConnectionError,\n  RequestAbortedError,\n  NoLivingConnectionsError,\n  ResponseError,\n  ConfigurationError,\n  ProductNotSupportedError\n} = require('./errors')\n\nconst noop = () => {}\n\nconst clientVersion = require('../package.json').version\nconst userAgent = `elasticsearch-js/${clientVersion} (${os.platform()} ${os.release()}-${os.arch()}; Node.js ${process.version})`\nconst MAX_BUFFER_LENGTH = buffer.constants.MAX_LENGTH\nconst MAX_STRING_LENGTH = buffer.constants.MAX_STRING_LENGTH\nconst kProductCheck = Symbol('product check')\nconst kApiVersioning = Symbol('api versioning')\nconst kEventEmitter = Symbol('event emitter')\nconst kMaxResponseSize = Symbol('max response size')\nconst kMaxCompressedResponseSize = Symbol('max compressed response size')\n\nclass Transport {\n  constructor (opts) {\n    if (typeof opts.compression === 'string' && opts.compression !== 'gzip') {\n      throw new ConfigurationError(`Invalid compression: '${opts.compression}'`)\n    }\n\n    this.emit = opts.emit\n    this.connectionPool = opts.connectionPool\n    this.serializer = opts.serializer\n    this.maxRetries = opts.maxRetries\n    this.requestTimeout = toMs(opts.requestTimeout)\n    this.suggestCompression = opts.suggestCompression === true\n    this.compression = opts.compression || false\n    this.context = opts.context || null\n    this.headers = Object.assign({},\n      { 'user-agent': userAgent },\n      opts.suggestCompression === true ? { 'accept-encoding': 'gzip,deflate' } : null,\n      lowerCaseHeaders(opts.headers)\n    )\n    this.sniffInterval = opts.sniffInterval\n    this.sniffOnConnectionFault = opts.sniffOnConnectionFault\n    this.sniffEndpoint = opts.sniffEndpoint\n    this.generateRequestId = opts.generateRequestId || generateRequestId()\n    this.name = opts.name\n    this.opaqueIdPrefix = opts.opaqueIdPrefix\n    this[kProductCheck] = 0 // 0 = to be checked, 1 = checking, 2 = checked-ok, 3 checked-notok, 4 checked-nodefault\n    this[kApiVersioning] = process.env.ELASTIC_CLIENT_APIVERSIONING === 'true'\n    this[kEventEmitter] = new EventEmitter()\n    this[kMaxResponseSize] = opts.maxResponseSize || MAX_STRING_LENGTH\n    this[kMaxCompressedResponseSize] = opts.maxCompressedResponseSize || MAX_BUFFER_LENGTH\n\n    this.nodeFilter = opts.nodeFilter || defaultNodeFilter\n    if (typeof opts.nodeSelector === 'function') {\n      this.nodeSelector = opts.nodeSelector\n    } else if (opts.nodeSelector === 'round-robin') {\n      this.nodeSelector = roundRobinSelector()\n    } else if (opts.nodeSelector === 'random') {\n      this.nodeSelector = randomSelector\n    } else {\n      this.nodeSelector = roundRobinSelector()\n    }\n\n    this._sniffEnabled = typeof this.sniffInterval === 'number'\n    this._nextSniff = this._sniffEnabled ? (Date.now() + this.sniffInterval) : 0\n    this._isSniffing = false\n\n    if (opts.sniffOnStart === true) {\n      // timer needed otherwise it will clash\n      // with the product check testing\n      setTimeout(() => {\n        this.sniff({ reason: Transport.sniffReasons.SNIFF_ON_START })\n      }, 10)\n    }\n  }\n\n  request (params, options, callback) {\n    options = options || {}\n    if (typeof options === 'function') {\n      callback = options\n      options = {}\n    }\n    let p = null\n\n    // promises support\n    if (callback === undefined) {\n      let onFulfilled = null\n      let onRejected = null\n      p = new Promise((resolve, reject) => {\n        onFulfilled = resolve\n        onRejected = reject\n      })\n      callback = function callback (err, result) {\n        err ? onRejected(err) : onFulfilled(result)\n      }\n    }\n\n    const meta = {\n      context: null,\n      request: {\n        params: null,\n        options: null,\n        id: options.id || this.generateRequestId(params, options)\n      },\n      name: this.name,\n      connection: null,\n      attempts: 0,\n      aborted: false\n    }\n\n    if (this.context != null && options.context != null) {\n      meta.context = Object.assign({}, this.context, options.context)\n    } else if (this.context != null) {\n      meta.context = this.context\n    } else if (options.context != null) {\n      meta.context = options.context\n    }\n\n    const result = {\n      body: null,\n      statusCode: null,\n      headers: null,\n      meta\n    }\n\n    Object.defineProperty(result, 'warnings', {\n      get () {\n        return this.headers && this.headers.warning\n          ? this.headers.warning.split(/(?!\\B\"[^\"]*),(?![^\"]*\"\\B)/)\n          : null\n      }\n    })\n\n    // We should not retry if we are sending a stream body, because we should store in memory\n    // a copy of the stream to be able to send it again, but since we don't know in advance\n    // the size of the stream, we risk to take too much memory.\n    // Furthermore, copying everytime the stream is very a expensive operation.\n    const maxRetries = isStream(params.body) || isStream(params.bulkBody)\n      ? 0\n      : (typeof options.maxRetries === 'number' ? options.maxRetries : this.maxRetries)\n    const compression = options.compression !== undefined ? options.compression : this.compression\n    const maxResponseSize = options.maxResponseSize || this[kMaxResponseSize]\n    const maxCompressedResponseSize = options.maxCompressedResponseSize || this[kMaxCompressedResponseSize]\n    let request = { abort: noop }\n    const transportReturn = {\n      then (onFulfilled, onRejected) {\n        if (p != null) {\n          return p.then(onFulfilled, onRejected)\n        }\n      },\n      catch (onRejected) {\n        if (p != null) {\n          return p.catch(onRejected)\n        }\n      },\n      abort () {\n        meta.aborted = true\n        request.abort()\n        debug('Aborting request', params)\n        return this\n      },\n      finally (onFinally) {\n        if (p != null) {\n          return p.finally(onFinally)\n        }\n      }\n    }\n\n    const makeRequest = () => {\n      if (meta.aborted === true) {\n        this.emit('request', new RequestAbortedError(), result)\n        return process.nextTick(callback, new RequestAbortedError(), result)\n      }\n      meta.connection = this.getConnection({ requestId: meta.request.id })\n      if (meta.connection == null) {\n        return process.nextTick(callback, new NoLivingConnectionsError(), result)\n      }\n      this.emit('request', null, result)\n      // perform the actual http request\n      request = meta.connection.request(params, onResponse)\n    }\n\n    const onConnectionError = (err) => {\n      if (err.name !== 'RequestAbortedError') {\n        // if there is an error in the connection\n        // let's mark the connection as dead\n        this.connectionPool.markDead(meta.connection)\n\n        if (this.sniffOnConnectionFault === true) {\n          this.sniff({\n            reason: Transport.sniffReasons.SNIFF_ON_CONNECTION_FAULT,\n            requestId: meta.request.id\n          })\n        }\n\n        // retry logic\n        if (meta.attempts < maxRetries) {\n          meta.attempts++\n          debug(`Retrying request, there are still ${maxRetries - meta.attempts} attempts`, params)\n          makeRequest()\n          return\n        }\n      }\n\n      err.meta = result\n      this.emit('response', err, result)\n      return callback(err, result)\n    }\n\n    const onResponse = (err, response) => {\n      if (err !== null) {\n        return onConnectionError(err)\n      }\n\n      result.statusCode = response.statusCode\n      result.headers = response.headers\n\n      if (options.asStream === true) {\n        result.body = response\n        this.emit('response', null, result)\n        callback(null, result)\n        return\n      }\n\n      const contentEncoding = (result.headers['content-encoding'] || '').toLowerCase()\n      const isCompressed = contentEncoding.indexOf('gzip') > -1 || contentEncoding.indexOf('deflate') > -1\n      const isVectorTile = (result.headers['content-type'] || '').indexOf('application/vnd.mapbox-vector-tile') > -1\n\n      /* istanbul ignore else */\n      if (result.headers['content-length'] !== undefined) {\n        const contentLength = Number(result.headers['content-length'])\n        if (isCompressed && contentLength > maxCompressedResponseSize) {\n          response.destroy()\n          return onConnectionError(\n            new RequestAbortedError(`The content length (${contentLength}) is bigger than the maximum allowed buffer (${maxCompressedResponseSize})`, result)\n          )\n        } else if (contentLength > maxResponseSize) {\n          response.destroy()\n          return onConnectionError(\n            new RequestAbortedError(`The content length (${contentLength}) is bigger than the maximum allowed string (${maxResponseSize})`, result)\n          )\n        }\n      }\n      // if the response is compressed, we must handle it\n      // as buffer for allowing decompression later\n      // while if it's a vector tile, we should return it as buffer\n      let payload = isCompressed || isVectorTile ? [] : ''\n      const onData = isCompressed || isVectorTile\n        ? chunk => { payload.push(chunk) }\n        : chunk => { payload += chunk }\n      const onEnd = err => {\n        response.removeListener('data', onData)\n        response.removeListener('end', onEnd)\n        response.removeListener('error', onEnd)\n        response.removeListener('aborted', onAbort)\n\n        if (err) {\n          return onConnectionError(new ConnectionError(err.message))\n        }\n\n        if (isCompressed) {\n          unzip(Buffer.concat(payload), onBody)\n        } else {\n          onBody(null, isVectorTile ? Buffer.concat(payload) : payload)\n        }\n      }\n\n      const onAbort = () => {\n        response.destroy()\n        onEnd(new Error('Response aborted while reading the body'))\n      }\n\n      if (!isCompressed && !isVectorTile) {\n        response.setEncoding('utf8')\n      }\n\n      this.emit('deserialization', null, result)\n      response.on('data', onData)\n      response.on('error', onEnd)\n      response.on('end', onEnd)\n      response.on('aborted', onAbort)\n    }\n\n    const onBody = (err, payload) => {\n      if (err) {\n        this.emit('response', err, result)\n        return callback(err, result)\n      }\n\n      const isVectorTile = (result.headers['content-type'] || '').indexOf('application/vnd.mapbox-vector-tile') > -1\n      if (Buffer.isBuffer(payload) && !isVectorTile) {\n        payload = payload.toString()\n      }\n      const isHead = params.method === 'HEAD'\n      // we should attempt the payload deserialization only if:\n      //    - a `content-type` is defined and is equal to `application/json`\n      //    - the request is not a HEAD request\n      //    - the payload is not an empty string\n      if (result.headers['content-type'] !== undefined &&\n          (result.headers['content-type'].indexOf('application/json') > -1 ||\n          result.headers['content-type'].indexOf('application/vnd.elasticsearch+json') > -1) &&\n          isHead === false &&\n          payload !== ''\n      ) {\n        try {\n          result.body = this.serializer.deserialize(payload)\n        } catch (err) {\n          this.emit('response', err, result)\n          return callback(err, result)\n        }\n      } else {\n        // cast to boolean if the request method was HEAD and there was no error\n        result.body = isHead === true && result.statusCode < 400 ? true : payload\n      }\n\n      // we should ignore the statusCode if the user has configured the `ignore` field with\n      // the statusCode we just got or if the request method is HEAD and the statusCode is 404\n      const ignoreStatusCode = (Array.isArray(options.ignore) && options.ignore.indexOf(result.statusCode) > -1) ||\n        (isHead === true && result.statusCode === 404)\n\n      if (ignoreStatusCode === false &&\n         (result.statusCode === 502 || result.statusCode === 503 || result.statusCode === 504)) {\n        // if the statusCode is 502/3/4 we should run our retry strategy\n        // and mark the connection as dead\n        this.connectionPool.markDead(meta.connection)\n        // retry logic (we shoukd not retry on \"429 - Too Many Requests\")\n        if (meta.attempts < maxRetries && result.statusCode !== 429) {\n          meta.attempts++\n          debug(`Retrying request, there are still ${maxRetries - meta.attempts} attempts`, params)\n          makeRequest()\n          return\n        }\n      } else {\n        // everything has worked as expected, let's mark\n        // the connection as alive (or confirm it)\n        this.connectionPool.markAlive(meta.connection)\n      }\n\n      if (ignoreStatusCode === false && result.statusCode >= 400) {\n        const error = new ResponseError(result)\n        this.emit('response', error, result)\n        callback(error, result)\n      } else {\n        // cast to boolean if the request method was HEAD\n        if (isHead === true && result.statusCode === 404) {\n          result.body = false\n        }\n        this.emit('response', null, result)\n        callback(null, result)\n      }\n    }\n\n    const prepareRequest = () => {\n      this.emit('serialization', null, result)\n      const headers = Object.assign({}, this.headers, lowerCaseHeaders(options.headers))\n\n      if (options.opaqueId !== undefined) {\n        headers['x-opaque-id'] = this.opaqueIdPrefix !== null\n          ? this.opaqueIdPrefix + options.opaqueId\n          : options.opaqueId\n      }\n\n      // handle json body\n      if (params.body != null) {\n        if (shouldSerialize(params.body) === true) {\n          try {\n            params.body = this.serializer.serialize(params.body)\n          } catch (err) {\n            this.emit('request', err, result)\n            process.nextTick(callback, err, result)\n            return transportReturn\n          }\n        }\n\n        if (params.body !== '') {\n          headers['content-type'] = headers['content-type'] || (this[kApiVersioning] ? 'application/vnd.elasticsearch+json; compatible-with=7' : 'application/json')\n        }\n\n      // handle ndjson body\n      } else if (params.bulkBody != null) {\n        if (shouldSerialize(params.bulkBody) === true) {\n          try {\n            params.body = this.serializer.ndserialize(params.bulkBody)\n          } catch (err) {\n            this.emit('request', err, result)\n            process.nextTick(callback, err, result)\n            return transportReturn\n          }\n        } else {\n          params.body = params.bulkBody\n        }\n        if (params.body !== '') {\n          headers['content-type'] = headers['content-type'] || (this[kApiVersioning] ? 'application/vnd.elasticsearch+x-ndjson; compatible-with=7' : 'application/x-ndjson')\n        }\n      }\n\n      params.headers = headers\n      // serializes the querystring\n      if (options.querystring == null) {\n        params.querystring = this.serializer.qserialize(params.querystring)\n      } else {\n        params.querystring = this.serializer.qserialize(\n          Object.assign({}, params.querystring, options.querystring)\n        )\n      }\n\n      // handles request timeout\n      params.timeout = toMs(options.requestTimeout || this.requestTimeout)\n      if (options.asStream === true) params.asStream = true\n\n      // handle compression\n      if (params.body !== '' && params.body != null) {\n        if (isStream(params.body) === true) {\n          if (compression === 'gzip') {\n            params.headers['content-encoding'] = compression\n            params.body = params.body.pipe(createGzip())\n          }\n          makeRequest()\n        } else if (compression === 'gzip') {\n          gzip(params.body, (err, buffer) => {\n            /* istanbul ignore next */\n            if (err) {\n              this.emit('request', err, result)\n              return callback(err, result)\n            }\n            params.headers['content-encoding'] = compression\n            params.headers['content-length'] = '' + Buffer.byteLength(buffer)\n            params.body = buffer\n            makeRequest()\n          })\n        } else {\n          params.headers['content-length'] = '' + Buffer.byteLength(params.body)\n          makeRequest()\n        }\n      } else {\n        makeRequest()\n      }\n    }\n\n    meta.request.params = params\n    meta.request.options = options\n    // still need to check the product or waiting for the check to finish\n    if (this[kProductCheck] === 0 || this[kProductCheck] === 1) {\n      // let pass info requests\n      if (params.method === 'GET' && params.path === '/') {\n        prepareRequest()\n      } else {\n        // wait for product check to finish\n        this[kEventEmitter].once('product-check', (error, status) => {\n          if (status === false) {\n            const err = error || new ProductNotSupportedError(result)\n            if (this[kProductCheck] === 4) {\n              err.message = 'The client noticed that the server is not a supported distribution of Elasticsearch'\n            }\n            this.emit('request', err, result)\n            process.nextTick(callback, err, result)\n          } else {\n            prepareRequest()\n          }\n        })\n        // the very first request triggers the product check\n        if (this[kProductCheck] === 0) {\n          this.productCheck()\n        }\n      }\n    // the product check is finished and it's not Elasticsearch\n    } else if (this[kProductCheck] === 3 || this[kProductCheck] === 4) {\n      const err = new ProductNotSupportedError(result)\n      if (this[kProductCheck] === 4) {\n        err.message = 'The client noticed that the server is not a supported distribution of Elasticsearch'\n      }\n      this.emit('request', err, result)\n      process.nextTick(callback, err, result)\n    // the product check finished and it's Elasticsearch\n    } else {\n      prepareRequest()\n    }\n\n    return transportReturn\n  }\n\n  getConnection (opts) {\n    const now = Date.now()\n    if (this._sniffEnabled === true && now > this._nextSniff) {\n      this.sniff({ reason: Transport.sniffReasons.SNIFF_INTERVAL, requestId: opts.requestId })\n    }\n    return this.connectionPool.getConnection({\n      filter: this.nodeFilter,\n      selector: this.nodeSelector,\n      requestId: opts.requestId,\n      name: this.name,\n      now\n    })\n  }\n\n  sniff (opts, callback = noop) {\n    if (this._isSniffing === true) return\n    this._isSniffing = true\n    debug('Started sniffing request')\n\n    if (typeof opts === 'function') {\n      callback = opts\n      opts = { reason: Transport.sniffReasons.DEFAULT }\n    }\n\n    const { reason } = opts\n\n    const request = {\n      method: 'GET',\n      path: this.sniffEndpoint\n    }\n\n    this.request(request, { id: opts.requestId }, (err, result) => {\n      this._isSniffing = false\n      if (this._sniffEnabled === true) {\n        this._nextSniff = Date.now() + this.sniffInterval\n      }\n\n      if (err != null) {\n        debug('Sniffing errored', err)\n        result.meta.sniff = { hosts: [], reason }\n        this.emit('sniff', err, result)\n        return callback(err)\n      }\n\n      debug('Sniffing ended successfully', result.body)\n      const protocol = result.meta.connection.url.protocol || /* istanbul ignore next */ 'http:'\n      const hosts = this.connectionPool.nodesToHost(result.body.nodes, protocol)\n      this.connectionPool.update(hosts)\n\n      result.meta.sniff = { hosts, reason }\n      this.emit('sniff', null, result)\n      callback(null, hosts)\n    })\n  }\n\n  productCheck () {\n    debug('Start product check')\n    this[kProductCheck] = 1\n    this.request({\n      method: 'GET',\n      path: '/'\n    }, (err, result) => {\n      this[kProductCheck] = 3\n      if (err) {\n        debug('Product check failed', err)\n        if (err.statusCode === 401 || err.statusCode === 403) {\n          this[kProductCheck] = 2\n          process.emitWarning(\n            'The client is unable to verify that the server is Elasticsearch due to security privileges on the server side. Some functionality may not be compatible if the server is running an unsupported product.',\n            'ProductNotSupportedSecurityError'\n          )\n          this[kEventEmitter].emit('product-check', null, true)\n        } else {\n          this[kProductCheck] = 0\n          this[kEventEmitter].emit('product-check', err, false)\n        }\n      } else {\n        debug('Checking elasticsearch version', result.body, result.headers)\n        if (result.body.version == null || typeof result.body.version.number !== 'string') {\n          debug('Can\\'t access Elasticsearch version')\n          return this[kEventEmitter].emit('product-check', null, false)\n        }\n        const tagline = result.body.tagline\n        const version = result.body.version.number.split('.')\n        const major = Number(version[0])\n        const minor = Number(version[1])\n        if (major < 6) {\n          return this[kEventEmitter].emit('product-check', null, false)\n        } else if (major >= 6 && major < 7) {\n          if (tagline !== 'You Know, for Search') {\n            debug('Bad tagline')\n            return this[kEventEmitter].emit('product-check', null, false)\n          }\n        } else if (major === 7 && minor < 14) {\n          if (tagline !== 'You Know, for Search') {\n            debug('Bad tagline')\n            return this[kEventEmitter].emit('product-check', null, false)\n          }\n\n          if (result.body.version.build_flavor !== 'default') {\n            debug('Bad build_flavor')\n            this[kProductCheck] = 4\n            return this[kEventEmitter].emit('product-check', null, false)\n          }\n        } else {\n          if (result.headers['x-elastic-product'] !== 'Elasticsearch') {\n            debug('x-elastic-product not recognized')\n            return this[kEventEmitter].emit('product-check', null, false)\n          }\n        }\n        debug('Valid Elasticsearch distribution')\n        this[kProductCheck] = 2\n        this[kEventEmitter].emit('product-check', null, true)\n      }\n    })\n  }\n}\n\nTransport.sniffReasons = {\n  SNIFF_ON_START: 'sniff-on-start',\n  SNIFF_INTERVAL: 'sniff-interval',\n  SNIFF_ON_CONNECTION_FAULT: 'sniff-on-connection-fault',\n  // TODO: find a better name\n  DEFAULT: 'default'\n}\n\nfunction toMs (time) {\n  if (typeof time === 'string') {\n    return ms(time)\n  }\n  return time\n}\n\nfunction shouldSerialize (obj) {\n  return typeof obj !== 'string' &&\n         typeof obj.pipe !== 'function' &&\n         Buffer.isBuffer(obj) === false\n}\n\nfunction isStream (obj) {\n  return obj != null && typeof obj.pipe === 'function'\n}\n\nfunction defaultNodeFilter (node) {\n  // avoid master only nodes\n  if (node.roles.master === true &&\n      node.roles.data === false &&\n      node.roles.ingest === false) {\n    return false\n  }\n  return true\n}\n\nfunction roundRobinSelector () {\n  let current = -1\n  return function _roundRobinSelector (connections) {\n    if (++current >= connections.length) {\n      current = 0\n    }\n    return connections[current]\n  }\n}\n\nfunction randomSelector (connections) {\n  const index = Math.floor(Math.random() * connections.length)\n  return connections[index]\n}\n\nfunction generateRequestId () {\n  const maxInt = 2147483647\n  let nextReqId = 0\n  return function genReqId (params, options) {\n    return (nextReqId = (nextReqId + 1) & maxInt)\n  }\n}\n\nfunction lowerCaseHeaders (oldHeaders) {\n  if (oldHeaders == null) return oldHeaders\n  const newHeaders = {}\n  for (const header in oldHeaders) {\n    newHeaders[header.toLowerCase()] = oldHeaders[header]\n  }\n  return newHeaders\n}\n\nmodule.exports = Transport\nmodule.exports.internals = {\n  defaultNodeFilter,\n  roundRobinSelector,\n  randomSelector,\n  generateRequestId,\n  lowerCaseHeaders\n}\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nclass ElasticsearchClientError extends Error {\n  constructor (message) {\n    super(message)\n    this.name = 'ElasticsearchClientError'\n  }\n}\n\nclass TimeoutError extends ElasticsearchClientError {\n  constructor (message, meta) {\n    super(message)\n    Error.captureStackTrace(this, TimeoutError)\n    this.name = 'TimeoutError'\n    this.message = message || 'Timeout Error'\n    this.meta = meta\n  }\n}\n\nclass ConnectionError extends ElasticsearchClientError {\n  constructor (message, meta) {\n    super(message)\n    Error.captureStackTrace(this, ConnectionError)\n    this.name = 'ConnectionError'\n    this.message = message || 'Connection Error'\n    this.meta = meta\n  }\n}\n\nclass NoLivingConnectionsError extends ElasticsearchClientError {\n  constructor (message, meta) {\n    super(message)\n    Error.captureStackTrace(this, NoLivingConnectionsError)\n    this.name = 'NoLivingConnectionsError'\n    this.message = message || 'Given the configuration, the ConnectionPool was not able to find a usable Connection for this request.'\n    this.meta = meta\n  }\n}\n\nclass SerializationError extends ElasticsearchClientError {\n  constructor (message, data) {\n    super(message, data)\n    Error.captureStackTrace(this, SerializationError)\n    this.name = 'SerializationError'\n    this.message = message || 'Serialization Error'\n    this.data = data\n  }\n}\n\nclass DeserializationError extends ElasticsearchClientError {\n  constructor (message, data) {\n    super(message, data)\n    Error.captureStackTrace(this, DeserializationError)\n    this.name = 'DeserializationError'\n    this.message = message || 'Deserialization Error'\n    this.data = data\n  }\n}\n\nclass ConfigurationError extends ElasticsearchClientError {\n  constructor (message) {\n    super(message)\n    Error.captureStackTrace(this, ConfigurationError)\n    this.name = 'ConfigurationError'\n    this.message = message || 'Configuration Error'\n  }\n}\n\nclass ResponseError extends ElasticsearchClientError {\n  constructor (meta) {\n    super('Response Error')\n    Error.captureStackTrace(this, ResponseError)\n    this.name = 'ResponseError'\n    if (meta.body && meta.body.error && meta.body.error.type) {\n      if (Array.isArray(meta.body.error.root_cause)) {\n        this.message = meta.body.error.type + ': '\n        this.message += meta.body.error.root_cause.map(entry => `[${entry.type}] Reason: ${entry.reason}`).join('; ')\n      } else {\n        this.message = meta.body.error.type\n      }\n    } else if (typeof meta.body === 'object' && meta.body != null) {\n      this.message = JSON.stringify(meta.body)\n    } else {\n      this.message = meta.body || 'Response Error'\n    }\n    this.meta = meta\n  }\n\n  get body () {\n    return this.meta.body\n  }\n\n  get statusCode () {\n    if (this.meta.body && typeof this.meta.body.status === 'number') {\n      return this.meta.body.status\n    }\n    return this.meta.statusCode\n  }\n\n  get headers () {\n    return this.meta.headers\n  }\n\n  toString () {\n    return JSON.stringify(this.meta.body)\n  }\n}\n\nclass RequestAbortedError extends ElasticsearchClientError {\n  constructor (message, meta) {\n    super(message)\n    Error.captureStackTrace(this, RequestAbortedError)\n    this.name = 'RequestAbortedError'\n    this.message = message || 'Request aborted'\n    this.meta = meta\n  }\n}\n\nclass ProductNotSupportedError extends ElasticsearchClientError {\n  constructor (meta) {\n    super('Product Not Supported Error')\n    Error.captureStackTrace(this, ProductNotSupportedError)\n    this.name = 'ProductNotSupportedError'\n    this.message = 'The client noticed that the server is not Elasticsearch and we do not support this unknown product.'\n    this.meta = meta\n  }\n}\n\nmodule.exports = {\n  ElasticsearchClientError,\n  TimeoutError,\n  ConnectionError,\n  NoLivingConnectionsError,\n  SerializationError,\n  DeserializationError,\n  ConfigurationError,\n  ResponseError,\n  RequestAbortedError,\n  ProductNotSupportedError\n}\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nconst { URL } = require('url')\nconst debug = require('debug')('elasticsearch')\nconst Connection = require('../Connection')\nconst noop = () => {}\n\nclass BaseConnectionPool {\n  constructor (opts) {\n    // list of nodes and weights\n    this.connections = []\n    // how many nodes we have in our scheduler\n    this.size = this.connections.length\n    this.Connection = opts.Connection\n    this.emit = opts.emit || noop\n    this.auth = opts.auth || null\n    this._ssl = opts.ssl\n    this._agent = opts.agent\n    this._proxy = opts.proxy || null\n    this._caFingerprint = opts.caFingerprint || null\n  }\n\n  getConnection () {\n    throw new Error('getConnection must be implemented')\n  }\n\n  markAlive () {\n    return this\n  }\n\n  markDead () {\n    return this\n  }\n\n  /**\n   * Creates a new connection instance.\n   */\n  createConnection (opts) {\n    if (typeof opts === 'string') {\n      opts = this.urlToHost(opts)\n    }\n\n    if (this.auth !== null) {\n      opts.auth = this.auth\n    } else if (opts.url.username !== '' && opts.url.password !== '') {\n      opts.auth = {\n        username: decodeURIComponent(opts.url.username),\n        password: decodeURIComponent(opts.url.password)\n      }\n    }\n\n    if (opts.ssl == null) opts.ssl = this._ssl\n    /* istanbul ignore else */\n    if (opts.agent == null) opts.agent = this._agent\n    /* istanbul ignore else */\n    if (opts.proxy == null) opts.proxy = this._proxy\n    /* istanbul ignore else */\n    if (opts.caFingerprint == null) opts.caFingerprint = this._caFingerprint\n\n    const connection = new this.Connection(opts)\n\n    for (const conn of this.connections) {\n      if (conn.id === connection.id) {\n        throw new Error(`Connection with id '${connection.id}' is already present`)\n      }\n    }\n\n    return connection\n  }\n\n  /**\n   * Adds a new connection to the pool.\n   *\n   * @param {object|string} host\n   * @returns {ConnectionPool}\n   */\n  addConnection (opts) {\n    if (Array.isArray(opts)) {\n      return opts.forEach(o => this.addConnection(o))\n    }\n\n    if (typeof opts === 'string') {\n      opts = this.urlToHost(opts)\n    }\n\n    const connectionById = this.connections.find(c => c.id === opts.id)\n    const connectionByUrl = this.connections.find(c => c.id === opts.url.href)\n\n    if (connectionById || connectionByUrl) {\n      throw new Error(`Connection with id '${opts.id || opts.url.href}' is already present`)\n    }\n\n    this.update([...this.connections, opts])\n    return this.connections[this.size - 1]\n  }\n\n  /**\n   * Removes a new connection to the pool.\n   *\n   * @param {object} connection\n   * @returns {ConnectionPool}\n   */\n  removeConnection (connection) {\n    debug('Removing connection', connection)\n    return this.update(this.connections.filter(c => c.id !== connection.id))\n  }\n\n  /**\n   * Empties the connection pool.\n   *\n   * @returns {ConnectionPool}\n   */\n  empty (callback) {\n    debug('Emptying the connection pool')\n    let openConnections = this.size\n    this.connections.forEach(connection => {\n      connection.close(() => {\n        if (--openConnections === 0) {\n          this.connections = []\n          this.size = this.connections.length\n          callback()\n        }\n      })\n    })\n  }\n\n  /**\n   * Update the ConnectionPool with new connections.\n   *\n   * @param {array} array of connections\n   * @returns {ConnectionPool}\n   */\n  update (nodes) {\n    debug('Updating the connection pool')\n    const newConnections = []\n    const oldConnections = []\n\n    for (const node of nodes) {\n      // if we already have a given connection in the pool\n      // we mark it as alive and we do not close the connection\n      // to avoid socket issues\n      const connectionById = this.connections.find(c => c.id === node.id)\n      const connectionByUrl = this.connections.find(c => c.id === node.url.href)\n      if (connectionById) {\n        debug(`The connection with id '${node.id}' is already present`)\n        this.markAlive(connectionById)\n        newConnections.push(connectionById)\n      // in case the user has passed a single url (or an array of urls),\n      // the connection id will be the full href; to avoid closing valid connections\n      // because are not present in the pool, we check also the node url,\n      // and if is already present we update its id with the ES provided one.\n      } else if (connectionByUrl) {\n        connectionByUrl.id = node.id\n        this.markAlive(connectionByUrl)\n        newConnections.push(connectionByUrl)\n      } else {\n        newConnections.push(this.createConnection(node))\n      }\n    }\n\n    const ids = nodes.map(c => c.id)\n    // remove all the dead connections and old connections\n    for (const connection of this.connections) {\n      if (ids.indexOf(connection.id) === -1) {\n        oldConnections.push(connection)\n      }\n    }\n\n    // close old connections\n    oldConnections.forEach(connection => connection.close())\n\n    this.connections = newConnections\n    this.size = this.connections.length\n\n    return this\n  }\n\n  /**\n   * Transforms the nodes objects to a host object.\n   *\n   * @param {object} nodes\n   * @returns {array} hosts\n   */\n  nodesToHost (nodes, protocol) {\n    const ids = Object.keys(nodes)\n    const hosts = []\n\n    for (let i = 0, len = ids.length; i < len; i++) {\n      const node = nodes[ids[i]]\n      // If there is no protocol in\n      // the `publish_address` new URL will throw\n      // the publish_address can have two forms:\n      //   - ip:port\n      //   - hostname/ip:port\n      // if we encounter the second case, we should\n      // use the hostname instead of the ip\n      let address = node.http.publish_address\n      const parts = address.split('/')\n      // the url is in the form of hostname/ip:port\n      if (parts.length > 1) {\n        const hostname = parts[0]\n        const port = parts[1].match(/((?::))(?:[0-9]+)$/g)[0].slice(1)\n        address = `${hostname}:${port}`\n      }\n\n      address = address.slice(0, 4) === 'http'\n        /* istanbul ignore next */\n        ? address\n        : `${protocol}//${address}`\n      const roles = node.roles.reduce((acc, role) => {\n        acc[role] = true\n        return acc\n      }, {})\n\n      hosts.push({\n        url: new URL(address),\n        id: ids[i],\n        roles: Object.assign({\n          [Connection.roles.MASTER]: false,\n          [Connection.roles.DATA]: false,\n          [Connection.roles.INGEST]: false,\n          [Connection.roles.ML]: false\n        }, roles)\n      })\n    }\n\n    return hosts\n  }\n\n  /**\n   * Transforms an url string to a host object\n   *\n   * @param {string} url\n   * @returns {object} host\n   */\n  urlToHost (url) {\n    return {\n      url: new URL(url)\n    }\n  }\n}\n\nmodule.exports = BaseConnectionPool\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nconst BaseConnectionPool = require('./BaseConnectionPool')\n\nclass CloudConnectionPool extends BaseConnectionPool {\n  constructor (opts) {\n    super(opts)\n    this.cloudConnection = null\n  }\n\n  /**\n   * Returns the only cloud connection.\n   *\n   * @returns {object} connection\n   */\n  getConnection () {\n    return this.cloudConnection\n  }\n\n  /**\n   * Empties the connection pool.\n   *\n   * @returns {ConnectionPool}\n   */\n  empty (callback) {\n    super.empty(() => {\n      this.cloudConnection = null\n      callback()\n    })\n  }\n\n  /**\n   * Update the ConnectionPool with new connections.\n   *\n   * @param {array} array of connections\n   * @returns {ConnectionPool}\n   */\n  update (connections) {\n    super.update(connections)\n    this.cloudConnection = this.connections[0]\n    return this\n  }\n}\n\nmodule.exports = CloudConnectionPool\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nconst BaseConnectionPool = require('./BaseConnectionPool')\nconst assert = require('assert')\nconst debug = require('debug')('elasticsearch')\nconst Connection = require('../Connection')\nconst noop = () => {}\n\nclass ConnectionPool extends BaseConnectionPool {\n  constructor (opts) {\n    super(opts)\n\n    this.dead = []\n    // the resurrect timeout is 60s\n    this.resurrectTimeout = 1000 * 60\n    // number of consecutive failures after which\n    // the timeout doesn't increase\n    this.resurrectTimeoutCutoff = 5\n    this.pingTimeout = opts.pingTimeout\n    this._sniffEnabled = opts.sniffEnabled || false\n\n    const resurrectStrategy = opts.resurrectStrategy || 'ping'\n    this.resurrectStrategy = ConnectionPool.resurrectStrategies[resurrectStrategy]\n    assert(\n      this.resurrectStrategy != null,\n      `Invalid resurrection strategy: '${resurrectStrategy}'`\n    )\n  }\n\n  /**\n   * Marks a connection as 'alive'.\n   * If needed removes the connection from the dead list\n   * and then resets the `deadCount`.\n   *\n   * @param {object} connection\n   */\n  markAlive (connection) {\n    const { id } = connection\n    debug(`Marking as 'alive' connection '${id}'`)\n    const index = this.dead.indexOf(id)\n    if (index > -1) this.dead.splice(index, 1)\n    connection.status = Connection.statuses.ALIVE\n    connection.deadCount = 0\n    connection.resurrectTimeout = 0\n    return this\n  }\n\n  /**\n   * Marks a connection as 'dead'.\n   * If needed adds the connection to the dead list\n   * and then increments the `deadCount`.\n   *\n   * @param {object} connection\n   */\n  markDead (connection) {\n    const { id } = connection\n    debug(`Marking as 'dead' connection '${id}'`)\n    if (this.dead.indexOf(id) === -1) {\n      // It might happen that `markDead` is called jsut after\n      // a pool update, and in such case we will add to the dead\n      // list a node that no longer exist. The following check verify\n      // that the connection is still part of the pool before\n      // marking it as dead.\n      for (let i = 0; i < this.size; i++) {\n        if (this.connections[i].id === id) {\n          this.dead.push(id)\n          break\n        }\n      }\n    }\n    connection.status = Connection.statuses.DEAD\n    connection.deadCount++\n    // resurrectTimeout formula:\n    // `resurrectTimeout * 2 ** min(deadCount - 1, resurrectTimeoutCutoff)`\n    connection.resurrectTimeout = Date.now() + this.resurrectTimeout * Math.pow(\n      2, Math.min(connection.deadCount - 1, this.resurrectTimeoutCutoff)\n    )\n\n    // sort the dead list in ascending order\n    // based on the resurrectTimeout\n    this.dead.sort((a, b) => {\n      const conn1 = this.connections.find(c => c.id === a)\n      const conn2 = this.connections.find(c => c.id === b)\n      return conn1.resurrectTimeout - conn2.resurrectTimeout\n    })\n\n    return this\n  }\n\n  /**\n   * If enabled, tries to resurrect a connection with the given\n   * resurrect strategy ('ping', 'optimistic', 'none').\n   *\n   * @param {object} { now, requestId }\n   * @param {function} callback (isAlive, connection)\n   */\n  resurrect (opts, callback = noop) {\n    if (this.resurrectStrategy === 0 || this.dead.length === 0) {\n      debug('Nothing to resurrect')\n      callback(null, null)\n      return\n    }\n\n    // the dead list is sorted in ascending order based on the timeout\n    // so the first element will always be the one with the smaller timeout\n    const connection = this.connections.find(c => c.id === this.dead[0])\n    if ((opts.now || Date.now()) < connection.resurrectTimeout) {\n      debug('Nothing to resurrect')\n      callback(null, null)\n      return\n    }\n\n    const { id } = connection\n\n    // ping strategy\n    if (this.resurrectStrategy === 1) {\n      connection.request({\n        method: 'HEAD',\n        path: '/',\n        timeout: this.pingTimeout\n      }, (err, response) => {\n        let isAlive = true\n        const statusCode = response !== null ? response.statusCode : 0\n        if (err != null ||\n           (statusCode === 502 || statusCode === 503 || statusCode === 504)) {\n          debug(`Resurrect: connection '${id}' is still dead`)\n          this.markDead(connection)\n          isAlive = false\n        } else {\n          debug(`Resurrect: connection '${id}' is now alive`)\n          this.markAlive(connection)\n        }\n        this.emit('resurrect', null, {\n          strategy: 'ping',\n          name: opts.name,\n          request: { id: opts.requestId },\n          isAlive,\n          connection\n        })\n        callback(isAlive, connection)\n      })\n    // optimistic strategy\n    } else {\n      debug(`Resurrect: optimistic resurrection for connection '${id}'`)\n      this.dead.splice(this.dead.indexOf(id), 1)\n      connection.status = Connection.statuses.ALIVE\n      this.emit('resurrect', null, {\n        strategy: 'optimistic',\n        name: opts.name,\n        request: { id: opts.requestId },\n        isAlive: true,\n        connection\n      })\n      callback(true, connection) // eslint-disable-line\n    }\n  }\n\n  /**\n   * Returns an alive connection if present,\n   * otherwise returns a dead connection.\n   * By default it filters the `master` only nodes.\n   * It uses the selector to choose which\n   * connection return.\n   *\n   * @param {object} options (filter and selector)\n   * @returns {object|null} connection\n   */\n  getConnection (opts = {}) {\n    const filter = opts.filter || (() => true)\n    const selector = opts.selector || (c => c[0])\n\n    this.resurrect({\n      now: opts.now,\n      requestId: opts.requestId,\n      name: opts.name\n    })\n\n    const noAliveConnections = this.size === this.dead.length\n\n    // TODO: can we cache this?\n    const connections = []\n    for (let i = 0; i < this.size; i++) {\n      const connection = this.connections[i]\n      if (noAliveConnections || connection.status === Connection.statuses.ALIVE) {\n        if (filter(connection) === true) {\n          connections.push(connection)\n        }\n      }\n    }\n\n    if (connections.length === 0) return null\n\n    return selector(connections)\n  }\n\n  /**\n   * Empties the connection pool.\n   *\n   * @returns {ConnectionPool}\n   */\n  empty (callback) {\n    super.empty(() => {\n      this.dead = []\n      callback()\n    })\n  }\n\n  /**\n   * Update the ConnectionPool with new connections.\n   *\n   * @param {array} array of connections\n   * @returns {ConnectionPool}\n   */\n  update (connections) {\n    super.update(connections)\n    this.dead = []\n    return this\n  }\n}\n\nConnectionPool.resurrectStrategies = {\n  none: 0,\n  ping: 1,\n  optimistic: 2\n}\n\nmodule.exports = ConnectionPool\n","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n'use strict'\n\nconst BaseConnectionPool = require('./BaseConnectionPool')\nconst ConnectionPool = require('./ConnectionPool')\nconst CloudConnectionPool = require('./CloudConnectionPool')\n\nmodule.exports = {\n  BaseConnectionPool,\n  ConnectionPool,\n  CloudConnectionPool\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","'use strict';\n\nvar compileSchema = require('./compile')\n  , resolve = require('./compile/resolve')\n  , Cache = require('./cache')\n  , SchemaObject = require('./compile/schema_obj')\n  , stableStringify = require('fast-json-stable-stringify')\n  , formats = require('./compile/formats')\n  , rules = require('./compile/rules')\n  , $dataMetaSchema = require('./data')\n  , util = require('./compile/util');\n\nmodule.exports = Ajv;\n\nAjv.prototype.validate = validate;\nAjv.prototype.compile = compile;\nAjv.prototype.addSchema = addSchema;\nAjv.prototype.addMetaSchema = addMetaSchema;\nAjv.prototype.validateSchema = validateSchema;\nAjv.prototype.getSchema = getSchema;\nAjv.prototype.removeSchema = removeSchema;\nAjv.prototype.addFormat = addFormat;\nAjv.prototype.errorsText = errorsText;\n\nAjv.prototype._addSchema = _addSchema;\nAjv.prototype._compile = _compile;\n\nAjv.prototype.compileAsync = require('./compile/async');\nvar customKeyword = require('./keyword');\nAjv.prototype.addKeyword = customKeyword.add;\nAjv.prototype.getKeyword = customKeyword.get;\nAjv.prototype.removeKeyword = customKeyword.remove;\nAjv.prototype.validateKeyword = customKeyword.validate;\n\nvar errorClasses = require('./compile/error_classes');\nAjv.ValidationError = errorClasses.Validation;\nAjv.MissingRefError = errorClasses.MissingRef;\nAjv.$dataMetaSchema = $dataMetaSchema;\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';\n\nvar META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes', 'strictDefaults' ];\nvar META_SUPPORT_DATA = ['/properties'];\n\n/**\n * Creates validator instance.\n * Usage: `Ajv(opts)`\n * @param {Object} opts optional options\n * @return {Object} ajv instance\n */\nfunction Ajv(opts) {\n  if (!(this instanceof Ajv)) return new Ajv(opts);\n  opts = this._opts = util.copy(opts) || {};\n  setLogger(this);\n  this._schemas = {};\n  this._refs = {};\n  this._fragments = {};\n  this._formats = formats(opts.format);\n\n  this._cache = opts.cache || new Cache;\n  this._loadingSchemas = {};\n  this._compilations = [];\n  this.RULES = rules();\n  this._getId = chooseGetId(opts);\n\n  opts.loopRequired = opts.loopRequired || Infinity;\n  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\n  if (opts.serialize === undefined) opts.serialize = stableStringify;\n  this._metaOpts = getMetaSchemaOptions(this);\n\n  if (opts.formats) addInitialFormats(this);\n  if (opts.keywords) addInitialKeywords(this);\n  addDefaultMetaSchema(this);\n  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\n  if (opts.nullable) this.addKeyword('nullable', {metaSchema: {type: 'boolean'}});\n  addInitialSchemas(this);\n}\n\n\n\n/**\n * Validate data using schema\n * Schema will be compiled and cached (using serialized JSON as key. [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used to serialize.\n * @this   Ajv\n * @param  {String|Object} schemaKeyRef key, ref or schema object\n * @param  {Any} data to be validated\n * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\n */\nfunction validate(schemaKeyRef, data) {\n  var v;\n  if (typeof schemaKeyRef == 'string') {\n    v = this.getSchema(schemaKeyRef);\n    if (!v) throw new Error('no schema with key or ref \"' + schemaKeyRef + '\"');\n  } else {\n    var schemaObj = this._addSchema(schemaKeyRef);\n    v = schemaObj.validate || this._compile(schemaObj);\n  }\n\n  var valid = v(data);\n  if (v.$async !== true) this.errors = v.errors;\n  return valid;\n}\n\n\n/**\n * Create validating function for passed schema.\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\n * @return {Function} validating function\n */\nfunction compile(schema, _meta) {\n  var schemaObj = this._addSchema(schema, undefined, _meta);\n  return schemaObj.validate || this._compile(schemaObj);\n}\n\n\n/**\n * Adds schema to the instance.\n * @this   Ajv\n * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\n * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\n * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n * @return {Ajv} this for method chaining\n */\nfunction addSchema(schema, key, _skipValidation, _meta) {\n  if (Array.isArray(schema)){\n    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\n    return this;\n  }\n  var id = this._getId(schema);\n  if (id !== undefined && typeof id != 'string')\n    throw new Error('schema id must be string');\n  key = resolve.normalizeId(key || id);\n  checkUnique(this, key);\n  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\n  return this;\n}\n\n\n/**\n * Add schema that will be used to validate other schemas\n * options in META_IGNORE_OPTIONS are alway set to false\n * @this   Ajv\n * @param {Object} schema schema object\n * @param {String} key optional schema key\n * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\n * @return {Ajv} this for method chaining\n */\nfunction addMetaSchema(schema, key, skipValidation) {\n  this.addSchema(schema, key, skipValidation, true);\n  return this;\n}\n\n\n/**\n * Validate schema\n * @this   Ajv\n * @param {Object} schema schema to validate\n * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\n * @return {Boolean} true if schema is valid\n */\nfunction validateSchema(schema, throwOrLogError) {\n  var $schema = schema.$schema;\n  if ($schema !== undefined && typeof $schema != 'string')\n    throw new Error('$schema must be a string');\n  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\n  if (!$schema) {\n    this.logger.warn('meta-schema not available');\n    this.errors = null;\n    return true;\n  }\n  var valid = this.validate($schema, schema);\n  if (!valid && throwOrLogError) {\n    var message = 'schema is invalid: ' + this.errorsText();\n    if (this._opts.validateSchema == 'log') this.logger.error(message);\n    else throw new Error(message);\n  }\n  return valid;\n}\n\n\nfunction defaultMeta(self) {\n  var meta = self._opts.meta;\n  self._opts.defaultMeta = typeof meta == 'object'\n                            ? self._getId(meta) || meta\n                            : self.getSchema(META_SCHEMA_ID)\n                              ? META_SCHEMA_ID\n                              : undefined;\n  return self._opts.defaultMeta;\n}\n\n\n/**\n * Get compiled schema from the instance by `key` or `ref`.\n * @this   Ajv\n * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\n * @return {Function} schema validating function (with property `schema`).\n */\nfunction getSchema(keyRef) {\n  var schemaObj = _getSchemaObj(this, keyRef);\n  switch (typeof schemaObj) {\n    case 'object': return schemaObj.validate || this._compile(schemaObj);\n    case 'string': return this.getSchema(schemaObj);\n    case 'undefined': return _getSchemaFragment(this, keyRef);\n  }\n}\n\n\nfunction _getSchemaFragment(self, ref) {\n  var res = resolve.schema.call(self, { schema: {} }, ref);\n  if (res) {\n    var schema = res.schema\n      , root = res.root\n      , baseId = res.baseId;\n    var v = compileSchema.call(self, schema, root, undefined, baseId);\n    self._fragments[ref] = new SchemaObject({\n      ref: ref,\n      fragment: true,\n      schema: schema,\n      root: root,\n      baseId: baseId,\n      validate: v\n    });\n    return v;\n  }\n}\n\n\nfunction _getSchemaObj(self, keyRef) {\n  keyRef = resolve.normalizeId(keyRef);\n  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\n}\n\n\n/**\n * Remove cached schema(s).\n * If no parameter is passed all schemas but meta-schemas are removed.\n * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n * @this   Ajv\n * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\n * @return {Ajv} this for method chaining\n */\nfunction removeSchema(schemaKeyRef) {\n  if (schemaKeyRef instanceof RegExp) {\n    _removeAllSchemas(this, this._schemas, schemaKeyRef);\n    _removeAllSchemas(this, this._refs, schemaKeyRef);\n    return this;\n  }\n  switch (typeof schemaKeyRef) {\n    case 'undefined':\n      _removeAllSchemas(this, this._schemas);\n      _removeAllSchemas(this, this._refs);\n      this._cache.clear();\n      return this;\n    case 'string':\n      var schemaObj = _getSchemaObj(this, schemaKeyRef);\n      if (schemaObj) this._cache.del(schemaObj.cacheKey);\n      delete this._schemas[schemaKeyRef];\n      delete this._refs[schemaKeyRef];\n      return this;\n    case 'object':\n      var serialize = this._opts.serialize;\n      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\n      this._cache.del(cacheKey);\n      var id = this._getId(schemaKeyRef);\n      if (id) {\n        id = resolve.normalizeId(id);\n        delete this._schemas[id];\n        delete this._refs[id];\n      }\n  }\n  return this;\n}\n\n\nfunction _removeAllSchemas(self, schemas, regex) {\n  for (var keyRef in schemas) {\n    var schemaObj = schemas[keyRef];\n    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\n      self._cache.del(schemaObj.cacheKey);\n      delete schemas[keyRef];\n    }\n  }\n}\n\n\n/* @this   Ajv */\nfunction _addSchema(schema, skipValidation, meta, shouldAddSchema) {\n  if (typeof schema != 'object' && typeof schema != 'boolean')\n    throw new Error('schema should be object or boolean');\n  var serialize = this._opts.serialize;\n  var cacheKey = serialize ? serialize(schema) : schema;\n  var cached = this._cache.get(cacheKey);\n  if (cached) return cached;\n\n  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\n\n  var id = resolve.normalizeId(this._getId(schema));\n  if (id && shouldAddSchema) checkUnique(this, id);\n\n  var willValidate = this._opts.validateSchema !== false && !skipValidation;\n  var recursiveMeta;\n  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\n    this.validateSchema(schema, true);\n\n  var localRefs = resolve.ids.call(this, schema);\n\n  var schemaObj = new SchemaObject({\n    id: id,\n    schema: schema,\n    localRefs: localRefs,\n    cacheKey: cacheKey,\n    meta: meta\n  });\n\n  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\n  this._cache.put(cacheKey, schemaObj);\n\n  if (willValidate && recursiveMeta) this.validateSchema(schema, true);\n\n  return schemaObj;\n}\n\n\n/* @this   Ajv */\nfunction _compile(schemaObj, root) {\n  if (schemaObj.compiling) {\n    schemaObj.validate = callValidate;\n    callValidate.schema = schemaObj.schema;\n    callValidate.errors = null;\n    callValidate.root = root ? root : callValidate;\n    if (schemaObj.schema.$async === true)\n      callValidate.$async = true;\n    return callValidate;\n  }\n  schemaObj.compiling = true;\n\n  var currentOpts;\n  if (schemaObj.meta) {\n    currentOpts = this._opts;\n    this._opts = this._metaOpts;\n  }\n\n  var v;\n  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\n  catch(e) {\n    delete schemaObj.validate;\n    throw e;\n  }\n  finally {\n    schemaObj.compiling = false;\n    if (schemaObj.meta) this._opts = currentOpts;\n  }\n\n  schemaObj.validate = v;\n  schemaObj.refs = v.refs;\n  schemaObj.refVal = v.refVal;\n  schemaObj.root = v.root;\n  return v;\n\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var _validate = schemaObj.validate;\n    var result = _validate.apply(this, arguments);\n    callValidate.errors = _validate.errors;\n    return result;\n  }\n}\n\n\nfunction chooseGetId(opts) {\n  switch (opts.schemaId) {\n    case 'auto': return _get$IdOrId;\n    case 'id': return _getId;\n    default: return _get$Id;\n  }\n}\n\n/* @this   Ajv */\nfunction _getId(schema) {\n  if (schema.$id) this.logger.warn('schema $id ignored', schema.$id);\n  return schema.id;\n}\n\n/* @this   Ajv */\nfunction _get$Id(schema) {\n  if (schema.id) this.logger.warn('schema id ignored', schema.id);\n  return schema.$id;\n}\n\n\nfunction _get$IdOrId(schema) {\n  if (schema.$id && schema.id && schema.$id != schema.id)\n    throw new Error('schema $id is different from id');\n  return schema.$id || schema.id;\n}\n\n\n/**\n * Convert array of error message objects to string\n * @this   Ajv\n * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\n * @param  {Object} options optional options with properties `separator` and `dataVar`.\n * @return {String} human readable string with all errors descriptions\n */\nfunction errorsText(errors, options) {\n  errors = errors || this.errors;\n  if (!errors) return 'No errors';\n  options = options || {};\n  var separator = options.separator === undefined ? ', ' : options.separator;\n  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\n\n  var text = '';\n  for (var i=0; i<errors.length; i++) {\n    var e = errors[i];\n    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\n  }\n  return text.slice(0, -separator.length);\n}\n\n\n/**\n * Add custom format\n * @this   Ajv\n * @param {String} name format name\n * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\n * @return {Ajv} this for method chaining\n */\nfunction addFormat(name, format) {\n  if (typeof format == 'string') format = new RegExp(format);\n  this._formats[name] = format;\n  return this;\n}\n\n\nfunction addDefaultMetaSchema(self) {\n  var $dataSchema;\n  if (self._opts.$data) {\n    $dataSchema = require('./refs/data.json');\n    self.addMetaSchema($dataSchema, $dataSchema.$id, true);\n  }\n  if (self._opts.meta === false) return;\n  var metaSchema = require('./refs/json-schema-draft-07.json');\n  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\n  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\n  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\n}\n\n\nfunction addInitialSchemas(self) {\n  var optsSchemas = self._opts.schemas;\n  if (!optsSchemas) return;\n  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\n  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\n}\n\n\nfunction addInitialFormats(self) {\n  for (var name in self._opts.formats) {\n    var format = self._opts.formats[name];\n    self.addFormat(name, format);\n  }\n}\n\n\nfunction addInitialKeywords(self) {\n  for (var name in self._opts.keywords) {\n    var keyword = self._opts.keywords[name];\n    self.addKeyword(name, keyword);\n  }\n}\n\n\nfunction checkUnique(self, id) {\n  if (self._schemas[id] || self._refs[id])\n    throw new Error('schema with key or id \"' + id + '\" already exists');\n}\n\n\nfunction getMetaSchemaOptions(self) {\n  var metaOpts = util.copy(self._opts);\n  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\n    delete metaOpts[META_IGNORE_OPTIONS[i]];\n  return metaOpts;\n}\n\n\nfunction setLogger(self) {\n  var logger = self._opts.logger;\n  if (logger === false) {\n    self.logger = {log: noop, warn: noop, error: noop};\n  } else {\n    if (logger === undefined) logger = console;\n    if (!(typeof logger == 'object' && logger.log && logger.warn && logger.error))\n      throw new Error('logger must implement log, warn and error methods');\n    self.logger = logger;\n  }\n}\n\n\nfunction noop() {}\n","'use strict';\n\n\nvar Cache = module.exports = function Cache() {\n  this._cache = {};\n};\n\n\nCache.prototype.put = function Cache_put(key, value) {\n  this._cache[key] = value;\n};\n\n\nCache.prototype.get = function Cache_get(key) {\n  return this._cache[key];\n};\n\n\nCache.prototype.del = function Cache_del(key) {\n  delete this._cache[key];\n};\n\n\nCache.prototype.clear = function Cache_clear() {\n  this._cache = {};\n};\n","'use strict';\n\nvar MissingRefError = require('./error_classes').MissingRef;\n\nmodule.exports = compileAsync;\n\n\n/**\n * Creates validating function for passed schema with asynchronous loading of missing schemas.\n * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n * @this  Ajv\n * @param {Object}   schema schema object\n * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped\n * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.\n * @return {Promise} promise that resolves with a validating function.\n */\nfunction compileAsync(schema, meta, callback) {\n  /* eslint no-shadow: 0 */\n  /* global Promise */\n  /* jshint validthis: true */\n  var self = this;\n  if (typeof this._opts.loadSchema != 'function')\n    throw new Error('options.loadSchema should be a function');\n\n  if (typeof meta == 'function') {\n    callback = meta;\n    meta = undefined;\n  }\n\n  var p = loadMetaSchemaOf(schema).then(function () {\n    var schemaObj = self._addSchema(schema, undefined, meta);\n    return schemaObj.validate || _compileAsync(schemaObj);\n  });\n\n  if (callback) {\n    p.then(\n      function(v) { callback(null, v); },\n      callback\n    );\n  }\n\n  return p;\n\n\n  function loadMetaSchemaOf(sch) {\n    var $schema = sch.$schema;\n    return $schema && !self.getSchema($schema)\n            ? compileAsync.call(self, { $ref: $schema }, true)\n            : Promise.resolve();\n  }\n\n\n  function _compileAsync(schemaObj) {\n    try { return self._compile(schemaObj); }\n    catch(e) {\n      if (e instanceof MissingRefError) return loadMissingSchema(e);\n      throw e;\n    }\n\n\n    function loadMissingSchema(e) {\n      var ref = e.missingSchema;\n      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');\n\n      var schemaPromise = self._loadingSchemas[ref];\n      if (!schemaPromise) {\n        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);\n        schemaPromise.then(removePromise, removePromise);\n      }\n\n      return schemaPromise.then(function (sch) {\n        if (!added(ref)) {\n          return loadMetaSchemaOf(sch).then(function () {\n            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);\n          });\n        }\n      }).then(function() {\n        return _compileAsync(schemaObj);\n      });\n\n      function removePromise() {\n        delete self._loadingSchemas[ref];\n      }\n\n      function added(ref) {\n        return self._refs[ref] || self._schemas[ref];\n      }\n    }\n  }\n}\n","'use strict';\n\n// do NOT remove this file - it would break pre-compiled schemas\n// https://github.com/ajv-validator/ajv/issues/889\nmodule.exports = require('fast-deep-equal');\n","'use strict';\n\nvar resolve = require('./resolve');\n\nmodule.exports = {\n  Validation: errorSubclass(ValidationError),\n  MissingRef: errorSubclass(MissingRefError)\n};\n\n\nfunction ValidationError(errors) {\n  this.message = 'validation failed';\n  this.errors = errors;\n  this.ajv = this.validation = true;\n}\n\n\nMissingRefError.message = function (baseId, ref) {\n  return 'can\\'t resolve reference ' + ref + ' from id ' + baseId;\n};\n\n\nfunction MissingRefError(baseId, ref, message) {\n  this.message = message || MissingRefError.message(baseId, ref);\n  this.missingRef = resolve.url(baseId, ref);\n  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));\n}\n\n\nfunction errorSubclass(Subclass) {\n  Subclass.prototype = Object.create(Error.prototype);\n  Subclass.prototype.constructor = Subclass;\n  return Subclass;\n}\n","'use strict';\n\nvar util = require('./util');\n\nvar DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nvar DAYS = [0,31,28,31,30,31,30,31,31,30,31,30,31];\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nvar HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\nvar URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nvar URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nvar URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\n// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.\n// var URL = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nvar URL = /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-)*(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-)*(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i;\nvar UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nvar JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nvar JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nvar RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n\n\nmodule.exports = formats;\n\nfunction formats(mode) {\n  mode = mode == 'full' ? 'full' : 'fast';\n  return util.copy(formats[mode]);\n}\n\n\nformats.fast = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+\\-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n  hostname: HOSTNAME,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: UUID,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nformats.full = {\n  date: date,\n  time: time,\n  'date-time': date_time,\n  uri: uri,\n  'uri-reference': URIREF,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: HOSTNAME,\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  uuid: UUID,\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nfunction isLeapYear(year) {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\n\nfunction date(str) {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  var matches = str.match(DATE);\n  if (!matches) return false;\n\n  var year = +matches[1];\n  var month = +matches[2];\n  var day = +matches[3];\n\n  return month >= 1 && month <= 12 && day >= 1 &&\n          day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\n\n\nfunction time(str, full) {\n  var matches = str.match(TIME);\n  if (!matches) return false;\n\n  var hour = matches[1];\n  var minute = matches[2];\n  var second = matches[3];\n  var timeZone = matches[5];\n  return ((hour <= 23 && minute <= 59 && second <= 59) ||\n          (hour == 23 && minute == 59 && second == 60)) &&\n         (!full || timeZone);\n}\n\n\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  var dateTime = str.split(DATE_TIME_SEPARATOR);\n  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);\n}\n\n\nvar NOT_URI_FRAGMENT = /\\/|:/;\nfunction uri(str) {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\n\n\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return false;\n  try {\n    new RegExp(str);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n","'use strict';\n\nvar resolve = require('./resolve')\n  , util = require('./util')\n  , errorClasses = require('./error_classes')\n  , stableStringify = require('fast-json-stable-stringify');\n\nvar validateGenerator = require('../dotjs/validate');\n\n/**\n * Functions below are used inside compiled validations function\n */\n\nvar ucs2length = util.ucs2length;\nvar equal = require('fast-deep-equal');\n\n// this error is thrown by async schemas to return validation errors via exception\nvar ValidationError = errorClasses.Validation;\n\nmodule.exports = compile;\n\n\n/**\n * Compiles schema to validation function\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Object} root object with information about the root schema for this schema\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n * @param  {String} baseId base ID for IDs in the schema\n * @return {Function} validation function\n */\nfunction compile(schema, root, localRefs, baseId) {\n  /* jshint validthis: true, evil: true */\n  /* eslint no-shadow: 0 */\n  var self = this\n    , opts = this._opts\n    , refVal = [ undefined ]\n    , refs = {}\n    , patterns = []\n    , patternsHash = {}\n    , defaults = []\n    , defaultsHash = {}\n    , customRules = [];\n\n  root = root || { schema: schema, refVal: refVal, refs: refs };\n\n  var c = checkCompiling.call(this, schema, root, baseId);\n  var compilation = this._compilations[c.index];\n  if (c.compiling) return (compilation.callValidate = callValidate);\n\n  var formats = this._formats;\n  var RULES = this.RULES;\n\n  try {\n    var v = localCompile(schema, root, localRefs, baseId);\n    compilation.validate = v;\n    var cv = compilation.callValidate;\n    if (cv) {\n      cv.schema = v.schema;\n      cv.errors = null;\n      cv.refs = v.refs;\n      cv.refVal = v.refVal;\n      cv.root = v.root;\n      cv.$async = v.$async;\n      if (opts.sourceCode) cv.source = v.source;\n    }\n    return v;\n  } finally {\n    endCompiling.call(this, schema, root, baseId);\n  }\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var validate = compilation.validate;\n    var result = validate.apply(this, arguments);\n    callValidate.errors = validate.errors;\n    return result;\n  }\n\n  function localCompile(_schema, _root, localRefs, baseId) {\n    var isRoot = !_root || (_root && _root.schema == _schema);\n    if (_root.schema != root.schema)\n      return compile.call(self, _schema, _root, localRefs, baseId);\n\n    var $async = _schema.$async === true;\n\n    var sourceCode = validateGenerator({\n      isTop: true,\n      schema: _schema,\n      isRoot: isRoot,\n      baseId: baseId,\n      root: _root,\n      schemaPath: '',\n      errSchemaPath: '#',\n      errorPath: '\"\"',\n      MissingRefError: errorClasses.MissingRef,\n      RULES: RULES,\n      validate: validateGenerator,\n      util: util,\n      resolve: resolve,\n      resolveRef: resolveRef,\n      usePattern: usePattern,\n      useDefault: useDefault,\n      useCustomRule: useCustomRule,\n      opts: opts,\n      formats: formats,\n      logger: self.logger,\n      self: self\n    });\n\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                   + sourceCode;\n\n    if (opts.processCode) sourceCode = opts.processCode(sourceCode, _schema);\n    // console.log('\\n\\n\\n *** \\n', JSON.stringify(sourceCode));\n    var validate;\n    try {\n      var makeValidate = new Function(\n        'self',\n        'RULES',\n        'formats',\n        'root',\n        'refVal',\n        'defaults',\n        'customRules',\n        'equal',\n        'ucs2length',\n        'ValidationError',\n        sourceCode\n      );\n\n      validate = makeValidate(\n        self,\n        RULES,\n        formats,\n        root,\n        refVal,\n        defaults,\n        customRules,\n        equal,\n        ucs2length,\n        ValidationError\n      );\n\n      refVal[0] = validate;\n    } catch(e) {\n      self.logger.error('Error compiling schema, function code:', sourceCode);\n      throw e;\n    }\n\n    validate.schema = _schema;\n    validate.errors = null;\n    validate.refs = refs;\n    validate.refVal = refVal;\n    validate.root = isRoot ? validate : _root;\n    if ($async) validate.$async = true;\n    if (opts.sourceCode === true) {\n      validate.source = {\n        code: sourceCode,\n        patterns: patterns,\n        defaults: defaults\n      };\n    }\n\n    return validate;\n  }\n\n  function resolveRef(baseId, ref, isRoot) {\n    ref = resolve.url(baseId, ref);\n    var refIndex = refs[ref];\n    var _refVal, refCode;\n    if (refIndex !== undefined) {\n      _refVal = refVal[refIndex];\n      refCode = 'refVal[' + refIndex + ']';\n      return resolvedRef(_refVal, refCode);\n    }\n    if (!isRoot && root.refs) {\n      var rootRefId = root.refs[ref];\n      if (rootRefId !== undefined) {\n        _refVal = root.refVal[rootRefId];\n        refCode = addLocalRef(ref, _refVal);\n        return resolvedRef(_refVal, refCode);\n      }\n    }\n\n    refCode = addLocalRef(ref);\n    var v = resolve.call(self, localCompile, root, ref);\n    if (v === undefined) {\n      var localSchema = localRefs && localRefs[ref];\n      if (localSchema) {\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\n            ? localSchema\n            : compile.call(self, localSchema, root, localRefs, baseId);\n      }\n    }\n\n    if (v === undefined) {\n      removeLocalRef(ref);\n    } else {\n      replaceLocalRef(ref, v);\n      return resolvedRef(v, refCode);\n    }\n  }\n\n  function addLocalRef(ref, v) {\n    var refId = refVal.length;\n    refVal[refId] = v;\n    refs[ref] = refId;\n    return 'refVal' + refId;\n  }\n\n  function removeLocalRef(ref) {\n    delete refs[ref];\n  }\n\n  function replaceLocalRef(ref, v) {\n    var refId = refs[ref];\n    refVal[refId] = v;\n  }\n\n  function resolvedRef(refVal, code) {\n    return typeof refVal == 'object' || typeof refVal == 'boolean'\n            ? { code: code, schema: refVal, inline: true }\n            : { code: code, $async: refVal && !!refVal.$async };\n  }\n\n  function usePattern(regexStr) {\n    var index = patternsHash[regexStr];\n    if (index === undefined) {\n      index = patternsHash[regexStr] = patterns.length;\n      patterns[index] = regexStr;\n    }\n    return 'pattern' + index;\n  }\n\n  function useDefault(value) {\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n        return '' + value;\n      case 'string':\n        return util.toQuotedString(value);\n      case 'object':\n        if (value === null) return 'null';\n        var valueStr = stableStringify(value);\n        var index = defaultsHash[valueStr];\n        if (index === undefined) {\n          index = defaultsHash[valueStr] = defaults.length;\n          defaults[index] = value;\n        }\n        return 'default' + index;\n    }\n  }\n\n  function useCustomRule(rule, schema, parentSchema, it) {\n    if (self._opts.validateSchema !== false) {\n      var deps = rule.definition.dependencies;\n      if (deps && !deps.every(function(keyword) {\n        return Object.prototype.hasOwnProperty.call(parentSchema, keyword);\n      }))\n        throw new Error('parent schema must have all required keywords: ' + deps.join(','));\n\n      var validateSchema = rule.definition.validateSchema;\n      if (validateSchema) {\n        var valid = validateSchema(schema);\n        if (!valid) {\n          var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n          if (self._opts.validateSchema == 'log') self.logger.error(message);\n          else throw new Error(message);\n        }\n      }\n    }\n\n    var compile = rule.definition.compile\n      , inline = rule.definition.inline\n      , macro = rule.definition.macro;\n\n    var validate;\n    if (compile) {\n      validate = compile.call(self, schema, parentSchema, it);\n    } else if (macro) {\n      validate = macro.call(self, schema, parentSchema, it);\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\n    } else if (inline) {\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n    } else {\n      validate = rule.definition.validate;\n      if (!validate) return;\n    }\n\n    if (validate === undefined)\n      throw new Error('custom keyword \"' + rule.keyword + '\"failed to compile');\n\n    var index = customRules.length;\n    customRules[index] = validate;\n\n    return {\n      code: 'customRule' + index,\n      validate: validate\n    };\n  }\n}\n\n\n/**\n * Checks if the schema is currently compiled\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n */\nfunction checkCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var index = compIndex.call(this, schema, root, baseId);\n  if (index >= 0) return { index: index, compiling: true };\n  index = this._compilations.length;\n  this._compilations[index] = {\n    schema: schema,\n    root: root,\n    baseId: baseId\n  };\n  return { index: index, compiling: false };\n}\n\n\n/**\n * Removes the schema from the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n */\nfunction endCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var i = compIndex.call(this, schema, root, baseId);\n  if (i >= 0) this._compilations.splice(i, 1);\n}\n\n\n/**\n * Index of schema compilation in the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Integer} compilation index\n */\nfunction compIndex(schema, root, baseId) {\n  /* jshint validthis: true */\n  for (var i=0; i<this._compilations.length; i++) {\n    var c = this._compilations[i];\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n  }\n  return -1;\n}\n\n\nfunction patternCode(i, patterns) {\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n}\n\n\nfunction defaultCode(i) {\n  return 'var default' + i + ' = defaults[' + i + '];';\n}\n\n\nfunction refValCode(i, refVal) {\n  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\n}\n\n\nfunction customRuleCode(i) {\n  return 'var customRule' + i + ' = customRules[' + i + '];';\n}\n\n\nfunction vars(arr, statement) {\n  if (!arr.length) return '';\n  var code = '';\n  for (var i=0; i<arr.length; i++)\n    code += statement(i, arr);\n  return code;\n}\n","'use strict';\n\nvar URI = require('uri-js')\n  , equal = require('fast-deep-equal')\n  , util = require('./util')\n  , SchemaObject = require('./schema_obj')\n  , traverse = require('json-schema-traverse');\n\nmodule.exports = resolve;\n\nresolve.normalizeId = normalizeId;\nresolve.fullPath = getFullPath;\nresolve.url = resolveUrl;\nresolve.ids = resolveIds;\nresolve.inlineRef = inlineRef;\nresolve.schema = resolveSchema;\n\n/**\n * [resolve and compile the references ($ref)]\n * @this   Ajv\n * @param  {Function} compile reference to schema compilation funciton (localCompile)\n * @param  {Object} root object with information about the root schema for the current schema\n * @param  {String} ref reference to resolve\n * @return {Object|Function} schema object (if the schema can be inlined) or validation function\n */\nfunction resolve(compile, root, ref) {\n  /* jshint validthis: true */\n  var refVal = this._refs[ref];\n  if (typeof refVal == 'string') {\n    if (this._refs[refVal]) refVal = this._refs[refVal];\n    else return resolve.call(this, compile, root, refVal);\n  }\n\n  refVal = refVal || this._schemas[ref];\n  if (refVal instanceof SchemaObject) {\n    return inlineRef(refVal.schema, this._opts.inlineRefs)\n            ? refVal.schema\n            : refVal.validate || this._compile(refVal);\n  }\n\n  var res = resolveSchema.call(this, root, ref);\n  var schema, v, baseId;\n  if (res) {\n    schema = res.schema;\n    root = res.root;\n    baseId = res.baseId;\n  }\n\n  if (schema instanceof SchemaObject) {\n    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);\n  } else if (schema !== undefined) {\n    v = inlineRef(schema, this._opts.inlineRefs)\n        ? schema\n        : compile.call(this, schema, root, undefined, baseId);\n  }\n\n  return v;\n}\n\n\n/**\n * Resolve schema, its root and baseId\n * @this Ajv\n * @param  {Object} root root object with properties schema, refVal, refs\n * @param  {String} ref  reference to resolve\n * @return {Object} object with properties schema, root, baseId\n */\nfunction resolveSchema(root, ref) {\n  /* jshint validthis: true */\n  var p = URI.parse(ref)\n    , refPath = _getFullPath(p)\n    , baseId = getFullPath(this._getId(root.schema));\n  if (Object.keys(root.schema).length === 0 || refPath !== baseId) {\n    var id = normalizeId(refPath);\n    var refVal = this._refs[id];\n    if (typeof refVal == 'string') {\n      return resolveRecursive.call(this, root, refVal, p);\n    } else if (refVal instanceof SchemaObject) {\n      if (!refVal.validate) this._compile(refVal);\n      root = refVal;\n    } else {\n      refVal = this._schemas[id];\n      if (refVal instanceof SchemaObject) {\n        if (!refVal.validate) this._compile(refVal);\n        if (id == normalizeId(ref))\n          return { schema: refVal, root: root, baseId: baseId };\n        root = refVal;\n      } else {\n        return;\n      }\n    }\n    if (!root.schema) return;\n    baseId = getFullPath(this._getId(root.schema));\n  }\n  return getJsonPointer.call(this, p, baseId, root.schema, root);\n}\n\n\n/* @this Ajv */\nfunction resolveRecursive(root, ref, parsedRef) {\n  /* jshint validthis: true */\n  var res = resolveSchema.call(this, root, ref);\n  if (res) {\n    var schema = res.schema;\n    var baseId = res.baseId;\n    root = res.root;\n    var id = this._getId(schema);\n    if (id) baseId = resolveUrl(baseId, id);\n    return getJsonPointer.call(this, parsedRef, baseId, schema, root);\n  }\n}\n\n\nvar PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);\n/* @this Ajv */\nfunction getJsonPointer(parsedRef, baseId, schema, root) {\n  /* jshint validthis: true */\n  parsedRef.fragment = parsedRef.fragment || '';\n  if (parsedRef.fragment.slice(0,1) != '/') return;\n  var parts = parsedRef.fragment.split('/');\n\n  for (var i = 1; i < parts.length; i++) {\n    var part = parts[i];\n    if (part) {\n      part = util.unescapeFragment(part);\n      schema = schema[part];\n      if (schema === undefined) break;\n      var id;\n      if (!PREVENT_SCOPE_CHANGE[part]) {\n        id = this._getId(schema);\n        if (id) baseId = resolveUrl(baseId, id);\n        if (schema.$ref) {\n          var $ref = resolveUrl(baseId, schema.$ref);\n          var res = resolveSchema.call(this, root, $ref);\n          if (res) {\n            schema = res.schema;\n            root = res.root;\n            baseId = res.baseId;\n          }\n        }\n      }\n    }\n  }\n  if (schema !== undefined && schema !== root.schema)\n    return { schema: schema, root: root, baseId: baseId };\n}\n\n\nvar SIMPLE_INLINED = util.toHash([\n  'type', 'format', 'pattern',\n  'maxLength', 'minLength',\n  'maxProperties', 'minProperties',\n  'maxItems', 'minItems',\n  'maximum', 'minimum',\n  'uniqueItems', 'multipleOf',\n  'required', 'enum'\n]);\nfunction inlineRef(schema, limit) {\n  if (limit === false) return false;\n  if (limit === undefined || limit === true) return checkNoRef(schema);\n  else if (limit) return countKeys(schema) <= limit;\n}\n\n\nfunction checkNoRef(schema) {\n  var item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return false;\n      item = schema[key];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  }\n  return true;\n}\n\n\nfunction countKeys(schema) {\n  var count = 0, item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object') count += countKeys(item);\n      if (count == Infinity) return Infinity;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return Infinity;\n      if (SIMPLE_INLINED[key]) {\n        count++;\n      } else {\n        item = schema[key];\n        if (typeof item == 'object') count += countKeys(item) + 1;\n        if (count == Infinity) return Infinity;\n      }\n    }\n  }\n  return count;\n}\n\n\nfunction getFullPath(id, normalize) {\n  if (normalize !== false) id = normalizeId(id);\n  var p = URI.parse(id);\n  return _getFullPath(p);\n}\n\n\nfunction _getFullPath(p) {\n  return URI.serialize(p).split('#')[0] + '#';\n}\n\n\nvar TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';\n}\n\n\nfunction resolveUrl(baseId, id) {\n  id = normalizeId(id);\n  return URI.resolve(baseId, id);\n}\n\n\n/* @this Ajv */\nfunction resolveIds(schema) {\n  var schemaId = normalizeId(this._getId(schema));\n  var baseIds = {'': schemaId};\n  var fullPaths = {'': getFullPath(schemaId, false)};\n  var localRefs = {};\n  var self = this;\n\n  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n    if (jsonPtr === '') return;\n    var id = self._getId(sch);\n    var baseId = baseIds[parentJsonPtr];\n    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;\n    if (keyIndex !== undefined)\n      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));\n\n    if (typeof id == 'string') {\n      id = baseId = normalizeId(baseId ? URI.resolve(baseId, id) : id);\n\n      var refVal = self._refs[id];\n      if (typeof refVal == 'string') refVal = self._refs[refVal];\n      if (refVal && refVal.schema) {\n        if (!equal(sch, refVal.schema))\n          throw new Error('id \"' + id + '\" resolves to more than one schema');\n      } else if (id != normalizeId(fullPath)) {\n        if (id[0] == '#') {\n          if (localRefs[id] && !equal(sch, localRefs[id]))\n            throw new Error('id \"' + id + '\" resolves to more than one schema');\n          localRefs[id] = sch;\n        } else {\n          self._refs[id] = fullPath;\n        }\n      }\n    }\n    baseIds[jsonPtr] = baseId;\n    fullPaths[jsonPtr] = fullPath;\n  });\n\n  return localRefs;\n}\n","'use strict';\n\nvar ruleModules = require('../dotjs')\n  , toHash = require('./util').toHash;\n\nmodule.exports = function rules() {\n  var RULES = [\n    { type: 'number',\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\n    { type: 'string',\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\n    { type: 'array',\n      rules: [ 'maxItems', 'minItems', 'items', 'contains', 'uniqueItems' ] },\n    { type: 'object',\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if' ] }\n  ];\n\n  var ALL = [ 'type', '$comment' ];\n  var KEYWORDS = [\n    '$schema', '$id', 'id', '$data', '$async', 'title',\n    'description', 'default', 'definitions',\n    'examples', 'readOnly', 'writeOnly',\n    'contentMediaType', 'contentEncoding',\n    'additionalItems', 'then', 'else'\n  ];\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\n  RULES.all = toHash(ALL);\n  RULES.types = toHash(TYPES);\n\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      var implKeywords;\n      if (typeof keyword == 'object') {\n        var key = Object.keys(keyword)[0];\n        implKeywords = keyword[key];\n        keyword = key;\n        implKeywords.forEach(function (k) {\n          ALL.push(k);\n          RULES.all[k] = true;\n        });\n      }\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword],\n        implements: implKeywords\n      };\n      return rule;\n    });\n\n    RULES.all.$comment = {\n      keyword: '$comment',\n      code: ruleModules.$comment\n    };\n\n    if (group.type) RULES.types[group.type] = group;\n  });\n\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.custom = {};\n\n  return RULES;\n};\n","'use strict';\n\nvar util = require('./util');\n\nmodule.exports = SchemaObject;\n\nfunction SchemaObject(obj) {\n  util.copy(obj, this);\n}\n","'use strict';\n\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nmodule.exports = function ucs2length(str) {\n  var length = 0\n    , len = str.length\n    , pos = 0\n    , value;\n  while (pos < len) {\n    length++;\n    value = str.charCodeAt(pos++);\n    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos);\n      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate\n    }\n  }\n  return length;\n};\n","'use strict';\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: require('fast-deep-equal'),\n  ucs2length: require('./ucs2length'),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  schemaUnknownRules: schemaUnknownRules,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, strictNumbers, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data +\n                           (strictNumbers ? (AND + OK + 'isFinite(' + data + ')') : '') + ')';\n    case 'number': return '(typeof ' + data + EQUAL + '\"' + dataType + '\"' +\n                          (strictNumbers ? (AND + OK + 'isFinite(' + data + ')') : '') + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data, strictNumbers) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, strictNumbers, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, strictNumbers, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction schemaUnknownRules(schema, rules) {\n  if (typeof schema == 'boolean') return;\n  for (var key in schema) if (!rules[key]) return key;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/([^\\\\])' \\+ '/g, '$1');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n","'use strict';\n\nvar KEYWORDS = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum',\n  'maxLength',\n  'minLength',\n  'pattern',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'maxProperties',\n  'minProperties',\n  'required',\n  'additionalProperties',\n  'enum',\n  'format',\n  'const'\n];\n\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j=1; j<segments.length; j++)\n      keywords = keywords[segments[j]];\n\n    for (j=0; j<KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [\n            schema,\n            { $ref: 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n    }\n  }\n\n  return metaSchema;\n};\n","'use strict';\n\nvar metaSchema = require('./refs/json-schema-draft-07.json');\n\nmodule.exports = {\n  $id: 'https://github.com/ajv-validator/ajv/blob/master/lib/definition_schema.js',\n  definitions: {\n    simpleTypes: metaSchema.definitions.simpleTypes\n  },\n  type: 'object',\n  dependencies: {\n    schema: ['validate'],\n    $data: ['validate'],\n    statements: ['inline'],\n    valid: {not: {required: ['macro']}}\n  },\n  properties: {\n    type: metaSchema.properties.type,\n    schema: {type: 'boolean'},\n    statements: {type: 'boolean'},\n    dependencies: {\n      type: 'array',\n      items: {type: 'string'}\n    },\n    metaSchema: {type: 'object'},\n    modifying: {type: 'boolean'},\n    valid: {type: 'boolean'},\n    $data: {type: 'boolean'},\n    async: {type: 'boolean'},\n    errors: {\n      anyOf: [\n        {type: 'boolean'},\n        {const: 'full'}\n      ]\n    }\n  }\n};\n","'use strict';\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<',\n    $errorKeyword = undefined;\n  if (!($isData || typeof $schema == 'number' || $schema === undefined)) {\n    throw new Error($keyword + ' must be number');\n  }\n  if (!($isDataExcl || $schemaExcl === undefined || typeof $schemaExcl == 'number' || typeof $schemaExcl == 'boolean')) {\n    throw new Error($exclusiveKeyword + ' must be number or boolean');\n  }\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $exclType = 'exclType' + $lvl,\n      $exclIsNumber = 'exclIsNumber' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\'boolean\\' && ' + ($exclType) + ' != \\'undefined\\' && ' + ($exclType) + ' != \\'number\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($exclType) + ' == \\'number\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\'; ';\n    if ($schema === undefined) {\n      $errorKeyword = $exclusiveKeyword;\n      $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n      $schemaValue = $schemaValueExcl;\n      $isData = $isDataExcl;\n    }\n  } else {\n    var $exclIsNumber = typeof $schemaExcl == 'number',\n      $opStr = $op;\n    if ($exclIsNumber && $isData) {\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\n    } else {\n      if ($exclIsNumber && $schema === undefined) {\n        $exclusive = true;\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaExcl;\n        $notOp += '=';\n      } else {\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          $exclusive = true;\n          $errorKeyword = $exclusiveKeyword;\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\n    }\n  }\n  $errorKeyword = $errorKeyword || $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' items\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitLength(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxLength' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  if (it.opts.unicode === false) {\n    out += ' ' + ($data) + '.length ';\n  } else {\n    out += ' ucs2length(' + ($data) + ') ';\n  }\n  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitLength') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT be ';\n      if ($keyword == 'maxLength') {\n        out += 'longer';\n      } else {\n        out += 'shorter';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' characters\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitProperties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxProperties' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxProperties') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' properties\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return (it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all));\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_comment(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $comment = it.util.toQuotedString($schema);\n  if (it.opts.$comment === true) {\n    out += ' console.log(' + ($comment) + ');';\n  } else if (typeof it.opts.$comment == 'function') {\n    out += ' self._opts.$comment(' + ($comment) + ', ' + (it.util.toQuotedString($errSchemaPath)) + ', validate.root.schema);';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!$isData) {\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('const') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValue: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to constant\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId,\n    $nonEmptySchema = (it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all));\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($nonEmptySchema) {\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    out += ' if (' + ($nextValid) + ') break; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\n  } else {\n    out += ' if (' + ($data) + '.length == 0) {';\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('contains') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should contain a valid item\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } else { ';\n  if ($nonEmptySchema) {\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n  }\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_dependencies(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $schemaDeps = {},\n    $propertyDeps = {},\n    $ownProperties = it.opts.ownProperties;\n  for ($property in $schema) {\n    if ($property == '__proto__') continue;\n    var $sch = $schema[$property];\n    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;\n    $deps[$property] = $sch;\n  }\n  out += 'var ' + ($errs) + ' = errors;';\n  var $currentErrorPath = it.errorPath;\n  out += 'var missing' + ($lvl) + ';';\n  for (var $property in $propertyDeps) {\n    $deps = $propertyDeps[$property];\n    if ($deps.length) {\n      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      if ($breakOnError) {\n        out += ' && ( ';\n        var arr1 = $deps;\n        if (arr1) {\n          var $propertyKey, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $propertyKey = arr1[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ')) {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should have ';\n            if ($deps.length == 1) {\n              out += 'property ' + (it.util.escapeQuotes($deps[0]));\n            } else {\n              out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n            }\n            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      } else {\n        out += ' ) { ';\n        var arr2 = $deps;\n        if (arr2) {\n          var $propertyKey, i2 = -1,\n            l2 = arr2.length - 1;\n          while (i2 < l2) {\n            $propertyKey = arr2[i2 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should have ';\n                if ($deps.length == 1) {\n                  out += 'property ' + (it.util.escapeQuotes($deps[0]));\n                } else {\n                  out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n                }\n                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n      out += ' }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  it.errorPath = $currentErrorPath;\n  var $currentBaseId = $it.baseId;\n  for (var $property in $schemaDeps) {\n    var $sch = $schemaDeps[$property];\n    if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      out += ') { ';\n      $it.schema = $sch;\n      $it.schemaPath = $schemaPath + it.util.getProperty($property);\n      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_enum(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $i = 'i' + $lvl,\n    $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ';';\n  if ($isData) {\n    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n  }\n  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';\n  if ($isData) {\n    out += '  }  ';\n  }\n  out += ' if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('enum') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to one of the allowed values\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl,\n      $isObject = 'isObject' + $lvl,\n      $formatType = 'formatType' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\'string\\'; if (' + ($isObject) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats != 'ignore') {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\'' + ($ruleType) + '\\' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? await ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats == 'ignore') {\n        it.logger.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    var $formatType = $isObject && $format.type || 'string';\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($formatType != $ruleType) {\n      if ($breakOnError) {\n        out += ' if (true) { ';\n      }\n      return out;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(await ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_if(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $thenSch = it.schema['then'],\n    $elseSch = it.schema['else'],\n    $thenPresent = $thenSch !== undefined && (it.opts.strictKeywords ? (typeof $thenSch == 'object' && Object.keys($thenSch).length > 0) || $thenSch === false : it.util.schemaHasRules($thenSch, it.RULES.all)),\n    $elsePresent = $elseSch !== undefined && (it.opts.strictKeywords ? (typeof $elseSch == 'object' && Object.keys($elseSch).length > 0) || $elseSch === false : it.util.schemaHasRules($elseSch, it.RULES.all)),\n    $currentBaseId = $it.baseId;\n  if ($thenPresent || $elsePresent) {\n    var $ifClause;\n    $it.createErrors = false;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = true;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    out += '  ' + (it.validate($it)) + ' ';\n    $it.baseId = $currentBaseId;\n    $it.createErrors = true;\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    if ($thenPresent) {\n      out += ' if (' + ($nextValid) + ') {  ';\n      $it.schema = it.schema['then'];\n      $it.schemaPath = it.schemaPath + '.then';\n      $it.errSchemaPath = it.errSchemaPath + '/then';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'then\\'; ';\n      } else {\n        $ifClause = '\\'then\\'';\n      }\n      out += ' } ';\n      if ($elsePresent) {\n        out += ' else { ';\n      }\n    } else {\n      out += ' if (!' + ($nextValid) + ') { ';\n    }\n    if ($elsePresent) {\n      $it.schema = it.schema['else'];\n      $it.schemaPath = it.schemaPath + '.else';\n      $it.errSchemaPath = it.errSchemaPath + '/else';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'else\\'; ';\n      } else {\n        $ifClause = '\\'else\\'';\n      }\n      out += ' } ';\n    }\n    out += ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('if') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { failingKeyword: ' + ($ifClause) + ' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match \"\\' + ' + ($ifClause) + ' + \\'\" schema\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' }   ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\n\n//all requires must be explicit because browserify won't work with dynamic requires\nmodule.exports = {\n  '$ref': require('./ref'),\n  allOf: require('./allOf'),\n  anyOf: require('./anyOf'),\n  '$comment': require('./comment'),\n  const: require('./const'),\n  contains: require('./contains'),\n  dependencies: require('./dependencies'),\n  'enum': require('./enum'),\n  format: require('./format'),\n  'if': require('./if'),\n  items: require('./items'),\n  maximum: require('./_limit'),\n  minimum: require('./_limit'),\n  maxItems: require('./_limitItems'),\n  minItems: require('./_limitItems'),\n  maxLength: require('./_limitLength'),\n  minLength: require('./_limitLength'),\n  maxProperties: require('./_limitProperties'),\n  minProperties: require('./_limitProperties'),\n  multipleOf: require('./multipleOf'),\n  not: require('./not'),\n  oneOf: require('./oneOf'),\n  pattern: require('./pattern'),\n  properties: require('./properties'),\n  propertyNames: require('./propertyNames'),\n  required: require('./required'),\n  uniqueItems: require('./uniqueItems'),\n  validate: require('./validate')\n};\n","'use strict';\nmodule.exports = function generate_items(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId;\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n    if ($additionalItems === false) {\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + ($valid) + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + ($schema.length) + ' items\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n    if (typeof $additionalItems == 'object' && (it.opts.strictKeywords ? (typeof $additionalItems == 'object' && Object.keys($additionalItems).length > 0) || $additionalItems === false : it.util.schemaHasRules($additionalItems, it.RULES.all))) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n      } else {\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n      }\n      if ($breakOnError) {\n        out += ' if (!' + ($nextValid) + ') break; ';\n      }\n      out += ' } }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    if ($breakOnError) {\n      out += ' if (!' + ($nextValid) + ') break; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  out += 'var division' + ($lvl) + ';if (';\n  if ($isData) {\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\'number\\' || ';\n  }\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\n  if (it.opts.multipleOfPrecision) {\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\n  } else {\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\n  }\n  out += ' ) ';\n  if ($isData) {\n    out += '  )  ';\n  }\n  out += ' ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('multipleOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be multiple of ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $prevValid = 'prevValid' + $lvl,\n    $passingSchemas = 'passingSchemas' + $lvl;\n  out += 'var ' + ($errs) + ' = errors , ' + ($prevValid) + ' = false , ' + ($valid) + ' = false , ' + ($passingSchemas) + ' = null; ';\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && ' + ($prevValid) + ') { ' + ($valid) + ' = false; ' + ($passingSchemas) + ' = [' + ($passingSchemas) + ', ' + ($i) + ']; } else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') { ' + ($valid) + ' = ' + ($prevValid) + ' = true; ' + ($passingSchemas) + ' = ' + ($i) + '; }';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { passingSchemas: ' + ($passingSchemas) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_pattern(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n  }\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('pattern') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match pattern \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}).filter(notProto),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties).filter(notProto),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) {\n    var $requiredHash = it.util.toHash($required);\n  }\n\n  function notProto(p) {\n    return p !== '__proto__';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 8) {\n          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is an invalid additional property';\n              } else {\n                out += 'should NOT have additional properties';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) {\n            /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr3 = $schemaKeys;\n    if (arr3) {\n      var $propertyKey, i3 = -1,\n        l3 = arr3.length - 1;\n      while (i3 < l3) {\n        $propertyKey = arr3[i3 += 1];\n        var $sch = $schema[$propertyKey];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr4 = $pPropertyKeys;\n    if (arr4) {\n      var $pProperty, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $pProperty = arr4[i4 += 1];\n        var $sch = $pProperties[$pProperty];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + ($errs) + ' = errors;';\n  if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $i = 'i' + $lvl,\n      $invalidName = '\\' + ' + $key + ' + \\'',\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $dataProperties = 'dataProperties' + $lvl,\n      $ownProperties = it.opts.ownProperties,\n      $currentBaseId = it.baseId;\n    if ($ownProperties) {\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\n    }\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\n    var $passData = $key;\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('propertyNames') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\'' + ($invalidName) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'property name \\\\\\'' + ($invalidName) + '\\\\\\' is invalid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    if ($breakOnError) {\n      out += ' break; ';\n    }\n    out += ' } }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { await ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_required(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {\n      var $required = [];\n      var arr1 = $schema;\n      if (arr1) {\n        var $property, i1 = -1,\n          l1 = arr1.length - 1;\n        while (i1 < l1) {\n          $property = arr1[i1 += 1];\n          var $propertySch = it.schema.properties[$property];\n          if (!($propertySch && (it.opts.strictKeywords ? (typeof $propertySch == 'object' && Object.keys($propertySch).length > 0) || $propertySch === false : it.util.schemaHasRules($propertySch, it.RULES.all)))) {\n            $required[$required.length] = $property;\n          }\n        }\n      }\n    } else {\n      var $required = $schema;\n    }\n  }\n  if ($isData || $required.length) {\n    var $currentErrorPath = it.errorPath,\n      $loopRequired = $isData || $required.length >= it.opts.loopRequired,\n      $ownProperties = it.opts.ownProperties;\n    if ($breakOnError) {\n      out += ' var missing' + ($lvl) + '; ';\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        out += ' var ' + ($valid) + ' = true; ';\n        if ($isData) {\n          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';\n        if ($ownProperties) {\n          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += '; if (!' + ($valid) + ') break; } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n        out += '  if (!' + ($valid) + ') {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      } else {\n        out += ' if ( ';\n        var arr2 = $required;\n        if (arr2) {\n          var $propertyKey, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $propertyKey = arr2[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ') {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      }\n    } else {\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        if ($isData) {\n          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is a required property';\n              } else {\n                out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';\n        if ($ownProperties) {\n          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += ') {  var err =   '; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n      } else {\n        var arr3 = $required;\n        if (arr3) {\n          var $propertyKey, i3 = -1,\n            l3 = arr3.length - 1;\n          while (i3 < l3) {\n            $propertyKey = arr3[i3 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'';\n                if (it.opts._errorDataPathProperty) {\n                  out += 'is a required property';\n                } else {\n                  out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                }\n                out += '\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n    }\n    it.errorPath = $currentErrorPath;\n  } else if ($breakOnError) {\n    out += ' if (true) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\n    if ($isData) {\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'boolean\\') ' + ($valid) + ' = false; else { ';\n    }\n    out += ' var i = ' + ($data) + '.length , ' + ($valid) + ' = true , j; if (i > 1) { ';\n    var $itemType = it.schema.items && it.schema.items.type,\n      $typeIsArray = Array.isArray($itemType);\n    if (!$itemType || $itemType == 'object' || $itemType == 'array' || ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0))) {\n      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } ';\n    } else {\n      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + ($data) + '[i]; ';\n      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');\n      out += ' if (' + (it.util[$method]($itemType, 'item', it.opts.strictNumbers, true)) + ') continue; ';\n      if ($typeIsArray) {\n        out += ' if (typeof item == \\'string\\') item = \\'\"\\' + item; ';\n      }\n      out += ' if (typeof itemIndices[item] == \\'number\\') { ' + ($valid) + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';\n    }\n    out += ' } ';\n    if ($isData) {\n      out += '  }  ';\n    }\n    out += ' if (!' + ($valid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('uniqueItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema:  ';\n        if ($isData) {\n          out += 'validate.schema' + ($schemaPath);\n        } else {\n          out += '' + ($schema);\n        }\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.opts.strictKeywords) {\n    var $unknownKwd = it.util.schemaUnknownRules(it.schema, it.RULES.keywords);\n    if ($unknownKwd) {\n      var $keywordsMsg = 'unknown keyword: ' + $unknownKwd;\n      if (it.opts.strictKeywords === 'log') it.logger.warn($keywordsMsg);\n      else throw new Error($keywordsMsg);\n    }\n  }\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [\"\"];\n    if (it.schema.default !== undefined && it.opts.useDefaults && it.opts.strictDefaults) {\n      var $defaultMsg = 'default is ignored in the schema root';\n      if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n      else throw new Error($defaultMsg);\n    }\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, it.opts.strictNumbers, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; var ' + ($coerced) + ' = undefined; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ') && ' + ($data) + '.length == 1) { ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + '; if (' + (it.util.checkDataType(it.schema.type, $data, it.opts.strictNumbers)) + ') ' + ($coerced) + ' = ' + ($data) + '; } ';\n        }\n        out += ' if (' + ($coerced) + ' !== undefined) ; ';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($type == 'string') {\n              out += ' else if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' else if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' else if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' else if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' else if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' else {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } if (' + ($coerced) + ' !== undefined) {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data, it.opts.strictNumbers)) + ') { ';\n          }\n          if (it.opts.useDefaults) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n","'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\nvar definitionSchema = require('./definition_schema');\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword,\n  validate: validateKeyword\n};\n\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    this.validateKeyword(definition, true);\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      for (var i=0; i<dataType.length; i++)\n        _addRule(keyword, dataType[i], definition);\n    } else {\n      _addRule(keyword, dataType, definition);\n    }\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if (definition.$data && this._opts.$data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n  return this;\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n\n\n/**\n * Validate keyword definition\n * @this  Ajv\n * @param {Object} definition keyword definition object.\n * @param {Boolean} throwError true to throw exception if definition is invalid\n * @return {boolean} validation result\n */\nfunction validateKeyword(definition, throwError) {\n  validateKeyword.errors = null;\n  var v = this._validateKeyword = this._validateKeyword\n                                  || this.compile(definitionSchema, true);\n\n  if (v(definition)) return true;\n  validateKeyword.errors = v.errors;\n  if (throwError)\n    throw new Error('custom keyword definition is invalid: '  + this.errorsText(v.errors));\n  else\n    return false;\n}\n","'use strict'\n\n/* global SharedArrayBuffer, Atomics */\n\nif (typeof SharedArrayBuffer !== 'undefined' && typeof Atomics !== 'undefined') {\n  const nil = new Int32Array(new SharedArrayBuffer(4))\n\n  function sleep (ms) {\n    // also filters out NaN, non-number types, including empty strings, but allows bigints\n    const valid = ms > 0 && ms < Infinity \n    if (valid === false) {\n      if (typeof ms !== 'number' && typeof ms !== 'bigint') {\n        throw TypeError('sleep: ms must be a number')\n      }\n      throw RangeError('sleep: ms must be a number that is greater than 0 but less than Infinity')\n    }\n\n    Atomics.wait(nil, 0, 0, Number(ms))\n  }\n  module.exports = sleep\n} else {\n\n  function sleep (ms) {\n    // also filters out NaN, non-number types, including empty strings, but allows bigints\n    const valid = ms > 0 && ms < Infinity \n    if (valid === false) {\n      if (typeof ms !== 'number' && typeof ms !== 'bigint') {\n        throw TypeError('sleep: ms must be a number')\n      }\n      throw RangeError('sleep: ms must be a number that is greater than 0 but less than Infinity')\n    }\n    const target = Date.now() + Number(ms)\n    while (target > Date.now()){}\n  }\n\n  module.exports = sleep\n\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","'use strict'\n\n/* eslint no-prototype-builtins: 0 */\n\nconst Ajv = require('ajv')\nconst merge = require('deepmerge')\nconst clone = require('rfdc')({ proto: true })\nconst fjsCloned = Symbol('fast-json-stringify.cloned')\n\nconst validate = require('./schema-validator')\nlet stringSimilarity = null\n\nlet isLong\ntry {\n  isLong = require('long').isLong\n} catch (e) {\n  isLong = null\n}\n\nconst addComma = `\n  if (addComma) {\n    json += ','\n  } else {\n    addComma = true\n  }\n`\n\nfunction isValidSchema (schema, name) {\n  if (!validate(schema)) {\n    if (name) {\n      name = `\"${name}\" `\n    } else {\n      name = ''\n    }\n    const first = validate.errors[0]\n    const err = new Error(`${name}schema is invalid: data${first.dataPath} ${first.message}`)\n    err.errors = isValidSchema.errors\n    throw err\n  }\n}\n\nfunction mergeLocation (source, dest) {\n  return {\n    schema: dest.schema || source.schema,\n    root: dest.root || source.root,\n    externalSchema: dest.externalSchema || source.externalSchema\n  }\n}\n\nfunction build (schema, options) {\n  options = options || {}\n  isValidSchema(schema)\n  if (options.schema) {\n    // eslint-disable-next-line\n    for (var key of Object.keys(options.schema)) {\n      isValidSchema(options.schema[key], key)\n    }\n  }\n\n  let intParseFunctionName = 'trunc'\n  if (options.rounding) {\n    if (['floor', 'ceil', 'round'].includes(options.rounding)) {\n      intParseFunctionName = options.rounding\n    } else {\n      throw new Error(`Unsupported integer rounding method ${options.rounding}`)\n    }\n  }\n\n  /* eslint no-new-func: \"off\" */\n  let code = `\n    'use strict'\n  `\n\n  code += `\n    ${asFunctions}\n\n    var isLong = ${isLong ? isLong.toString() : false}\n\n    function parseInteger(int) { return Math.${intParseFunctionName}(int) }\n    `\n\n  let location = {\n    schema,\n    root: schema,\n    externalSchema: options.schema\n  }\n\n  if (schema.$ref) {\n    location = refFinder(schema.$ref, location)\n    schema = location.schema\n  }\n\n  if (schema.type === undefined) {\n    schema.type = inferTypeByKeyword(schema)\n  }\n\n  let main\n\n  switch (schema.type) {\n    case 'object':\n      main = '$main'\n      code = buildObject(location, code, main)\n      break\n    case 'string':\n      main = schema.nullable ? '$asStringNullable' : getStringSerializer(schema.format)\n      break\n    case 'integer':\n      main = schema.nullable ? '$asIntegerNullable' : '$asInteger'\n      break\n    case 'number':\n      main = schema.nullable ? '$asNumberNullable' : '$asNumber'\n      break\n    case 'boolean':\n      main = schema.nullable ? '$asBooleanNullable' : '$asBoolean'\n      break\n    case 'null':\n      main = '$asNull'\n      break\n    case 'array':\n      main = '$main'\n      code = buildArray(location, code, main)\n      schema = location.schema\n      break\n    case undefined:\n      main = '$asAny'\n      break\n    default:\n      throw new Error(`${schema.type} unsupported`)\n  }\n\n  code += `\n    ;\n     return ${main}\n  `\n\n  const dependencies = [new Ajv(options.ajv)]\n  const dependenciesName = ['ajv']\n  dependenciesName.push(code)\n\n  if (options.debugMode) {\n    dependenciesName.toString = function () {\n      return dependenciesName.join('\\n')\n    }\n    return dependenciesName\n  }\n\n  return (Function.apply(null, dependenciesName).apply(null, dependencies))\n}\n\nconst objectKeywords = [\n  'maxProperties',\n  'minProperties',\n  'required',\n  'properties',\n  'patternProperties',\n  'additionalProperties',\n  'dependencies'\n]\n\nconst arrayKeywords = [\n  'items',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'contains'\n]\n\nconst stringKeywords = [\n  'maxLength',\n  'minLength',\n  'pattern'\n]\n\nconst numberKeywords = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum'\n]\n\n/**\n * Infer type based on keyword in order to generate optimized code\n * https://json-schema.org/latest/json-schema-validation.html#rfc.section.6\n */\nfunction inferTypeByKeyword (schema) {\n  // eslint-disable-next-line\n  for (var keyword of objectKeywords) {\n    if (keyword in schema) return 'object'\n  }\n  // eslint-disable-next-line\n  for (var keyword of arrayKeywords) {\n    if (keyword in schema) return 'array'\n  }\n  // eslint-disable-next-line\n  for (var keyword of stringKeywords) {\n    if (keyword in schema) return 'string'\n  }\n  // eslint-disable-next-line\n  for (var keyword of numberKeywords) {\n    if (keyword in schema) return 'number'\n  }\n  return schema.type\n}\n\nconst stringSerializerMap = {\n  'date-time': '$asDatetime',\n  date: '$asDate',\n  time: '$asTime'\n}\n\nfunction getStringSerializer (format) {\n  return stringSerializerMap[format] ||\n  '$asString'\n}\n\nfunction getTestSerializer (format) {\n  return stringSerializerMap[format]\n}\n\nconst asFunctions = `\nfunction $pad2Zeros (num) {\n  const s = '00' + num\n  return s[s.length - 2] + s[s.length - 1]\n}\n\nfunction $asAny (i) {\n  return JSON.stringify(i)\n}\n\nfunction $asNull () {\n  return 'null'\n}\n\nfunction $asInteger (i) {\n  if (isLong && isLong(i)) {\n    return i.toString()\n  } else if (typeof i === 'bigint') {\n    return i.toString()\n  } else if (Number.isInteger(i)) {\n    return $asNumber(i)\n  } else {\n    /* eslint no-undef: \"off\" */\n    return $asNumber(parseInteger(i))\n  }\n}\n\nfunction $asIntegerNullable (i) {\n  return i === null ? null : $asInteger(i)\n}\n\nfunction $asNumber (i) {\n  const num = Number(i)\n  if (isNaN(num)) {\n    return 'null'\n  } else {\n    return '' + num\n  }\n}\n\nfunction $asNumberNullable (i) {\n  return i === null ? null : $asNumber(i)\n}\n\nfunction $asBoolean (bool) {\n  return bool && 'true' || 'false' // eslint-disable-line\n}\n\nfunction $asBooleanNullable (bool) {\n  return bool === null ? null : $asBoolean(bool)\n}\n\nfunction $asDatetime (date, skipQuotes) {\n  const quotes = skipQuotes === true ? '' : '\"'\n  if (date instanceof Date) {\n    return quotes + date.toISOString() + quotes\n  } else if (date && typeof date.toISOString === 'function') {\n    return quotes + date.toISOString() + quotes\n  } else {\n    return $asString(date, skipQuotes)\n  }\n}\n\nfunction $asDate (date, skipQuotes) {\n  const quotes = skipQuotes === true ? '' : '\"'\n  if (date instanceof Date) {\n    return quotes + new Date(date.getTime() - (date.getTimezoneOffset() * 60000 )).toISOString().slice(0, 10) + quotes\n  } else if (date && typeof date.format === 'function') {\n    return quotes + date.format('YYYY-MM-DD') + quotes\n  } else {\n    return $asString(date, skipQuotes)\n  }\n}\n\nfunction $asTime (date, skipQuotes) {\n  const quotes = skipQuotes === true ? '' : '\"'\n  if (date instanceof Date) {\n    const hour = new Intl.DateTimeFormat('en', { hour: 'numeric', hour12: false }).format(date)\n    const minute = new Intl.DateTimeFormat('en', { minute: 'numeric' }).format(date)\n    const second = new Intl.DateTimeFormat('en', { second: 'numeric' }).format(date)\n    return quotes + $pad2Zeros(hour) + ':' + $pad2Zeros(minute) + ':' + $pad2Zeros(second) + quotes\n  } else if (date && typeof date.format === 'function') {\n    return quotes + date.format('HH:mm:ss') + quotes\n  } else {\n    return $asString(date, skipQuotes)\n  }\n}\n\nfunction $asString (str, skipQuotes) {\n  const quotes = skipQuotes === true ? '' : '\"'\n  if (str instanceof Date) {\n    return quotes + str.toISOString() + quotes\n  } else if (str === null) {\n    return quotes + quotes\n  } else if (str instanceof RegExp) {\n    str = str.source\n  } else if (typeof str !== 'string') {\n    str = str.toString()\n  }\n  // If we skipQuotes it means that we are using it as test\n  // no need to test the string length for the render\n  if (skipQuotes) {\n    return str\n  }\n\n  if (str.length < 42) {\n    return $asStringSmall(str)\n  } else {\n    return JSON.stringify(str)\n  }\n}\n\nfunction $asStringNullable (str) {\n  return str === null ? null : $asString(str)\n}\n\n// magically escape strings for json\n// relying on their charCodeAt\n// everything below 32 needs JSON.stringify()\n// every string that contain surrogate needs JSON.stringify()\n// 34 and 92 happens all the time, so we\n// have a fast case for them\nfunction $asStringSmall (str) {\n  const l = str.length\n  let result = ''\n  let last = 0\n  let found = false\n  let surrogateFound = false\n  let point = 255\n  // eslint-disable-next-line\n  for (var i = 0; i < l && point >= 32; i++) {\n    point = str.charCodeAt(i)\n    if (point >= 0xD800 && point <= 0xDFFF) {\n      // The current character is a surrogate.\n      surrogateFound = true\n    }\n    if (point === 34 || point === 92) {\n      result += str.slice(last, i) + '\\\\\\\\'\n      last = i\n      found = true\n    }\n  }\n\n  if (!found) {\n    result = str\n  } else {\n    result += str.slice(last)\n  }\n  return ((point < 32) || (surrogateFound === true)) ? JSON.stringify(str) : '\"' + result + '\"'\n}\n`\n\nfunction addPatternProperties (location) {\n  const schema = location.schema\n  const pp = schema.patternProperties\n  let code = `\n      var properties = ${JSON.stringify(schema.properties)} || {}\n      var keys = Object.keys(obj)\n      for (var i = 0; i < keys.length; i++) {\n        if (properties[keys[i]]) continue\n  `\n  Object.keys(pp).forEach((regex, index) => {\n    let ppLocation = mergeLocation(location, { schema: pp[regex] })\n    if (pp[regex].$ref) {\n      ppLocation = refFinder(pp[regex].$ref, location)\n      pp[regex] = ppLocation.schema\n    }\n    const type = pp[regex].type\n    const format = pp[regex].format\n    const stringSerializer = getStringSerializer(format)\n    try {\n      RegExp(regex)\n    } catch (err) {\n      throw new Error(`${err.message}. Found at ${regex} matching ${JSON.stringify(pp[regex])}`)\n    }\n    code += `\n        if (/${regex.replace(/\\\\*\\//g, '\\\\/')}/.test(keys[i])) {\n    `\n    if (type === 'object') {\n      code += `${buildObject(ppLocation, '', 'buildObjectPP' + index)}\n          ${addComma}\n          json += $asString(keys[i]) + ':' + buildObjectPP${index}(obj[keys[i]])\n      `\n    } else if (type === 'array') {\n      code += `${buildArray(ppLocation, '', 'buildArrayPP' + index)}\n          ${addComma}\n          json += $asString(keys[i]) + ':' + buildArrayPP${index}(obj[keys[i]])\n      `\n    } else if (type === 'null') {\n      code += `\n          ${addComma}\n          json += $asString(keys[i]) +':null'\n      `\n    } else if (type === 'string') {\n      code += `\n          ${addComma}\n          json += $asString(keys[i]) + ':' + ${stringSerializer}(obj[keys[i]])\n      `\n    } else if (type === 'integer') {\n      code += `\n          ${addComma}\n          json += $asString(keys[i]) + ':' + $asInteger(obj[keys[i]])\n      `\n    } else if (type === 'number') {\n      code += `\n          ${addComma}\n          json += $asString(keys[i]) + ':' + $asNumber(obj[keys[i]])\n      `\n    } else if (type === 'boolean') {\n      code += `\n          ${addComma}\n          json += $asString(keys[i]) + ':' + $asBoolean(obj[keys[i]])\n      `\n    } else if (type === undefined) {\n      code += `\n          ${addComma}\n          json += $asString(keys[i]) + ':' + $asAny(obj[keys[i]])\n      `\n    } else {\n      code += `\n        throw new Error('Cannot coerce ' + obj[keys[i]] + ' to ' + ${JSON.stringify(type)})\n      `\n    }\n\n    code += `\n          continue\n        }\n    `\n  })\n  if (schema.additionalProperties) {\n    code += additionalProperty(location)\n  }\n\n  code += `\n      }\n  `\n  return code\n}\n\nfunction additionalProperty (location) {\n  let ap = location.schema.additionalProperties\n  let code = ''\n  if (ap === true) {\n    return `\n        if (obj[keys[i]] !== undefined && typeof obj[keys[i]] !== 'function' && typeof obj[keys[i]] !== 'symbol') {\n          ${addComma}\n          json += $asString(keys[i]) + ':' + JSON.stringify(obj[keys[i]])\n        }\n    `\n  }\n  let apLocation = mergeLocation(location, { schema: ap })\n  if (ap.$ref) {\n    apLocation = refFinder(ap.$ref, location)\n    ap = apLocation.schema\n  }\n\n  const type = ap.type\n  const format = ap.format\n  const stringSerializer = getStringSerializer(format)\n  if (type === 'object') {\n    code += `${buildObject(apLocation, '', 'buildObjectAP')}\n        ${addComma}\n        json += $asString(keys[i]) + ':' + buildObjectAP(obj[keys[i]])\n    `\n  } else if (type === 'array') {\n    code += `${buildArray(apLocation, '', 'buildArrayAP')}\n        ${addComma}\n        json += $asString(keys[i]) + ':' + buildArrayAP(obj[keys[i]])\n    `\n  } else if (type === 'null') {\n    code += `\n        ${addComma}\n        json += $asString(keys[i]) +':null'\n    `\n  } else if (type === 'string') {\n    code += `\n        ${addComma}\n        json += $asString(keys[i]) + ':' + ${stringSerializer}(obj[keys[i]])\n    `\n  } else if (type === 'integer') {\n    code += `\n        var t = Number(obj[keys[i]])\n    `\n    if (isLong) {\n      code += `\n          if (isLong(obj[keys[i]]) || !isNaN(t)) {\n            ${addComma}\n            json += $asString(keys[i]) + ':' + $asInteger(obj[keys[i]])\n          }\n      `\n    } else {\n      code += `\n          if (!isNaN(t)) {\n            ${addComma}\n            json += $asString(keys[i]) + ':' + t\n          }\n      `\n    }\n  } else if (type === 'number') {\n    code += `\n        var t = Number(obj[keys[i]])\n        if (!isNaN(t)) {\n          ${addComma}\n          json += $asString(keys[i]) + ':' + t\n        }\n    `\n  } else if (type === 'boolean') {\n    code += `\n        ${addComma}\n        json += $asString(keys[i]) + ':' + $asBoolean(obj[keys[i]])\n    `\n  } else if (type === undefined) {\n    code += `\n        ${addComma}\n        json += $asString(keys[i]) + ':' + $asAny(obj[keys[i]])\n    `\n  } else {\n    code += `\n        throw new Error('Cannot coerce ' + obj[keys[i]] + ' to ' + ${JSON.stringify(type)})\n    `\n  }\n  return code\n}\n\nfunction addAdditionalProperties (location) {\n  return `\n      var properties = ${JSON.stringify(location.schema.properties)} || {}\n      var keys = Object.keys(obj)\n      for (var i = 0; i < keys.length; i++) {\n        if (properties[keys[i]]) continue\n        ${additionalProperty(location)}\n      }\n  `\n}\n\nfunction idFinder (schema, searchedId) {\n  let objSchema\n  const explore = (schema, searchedId) => {\n    Object.keys(schema || {}).forEach((key, i, a) => {\n      if (key === '$id' && schema[key] === searchedId) {\n        objSchema = schema\n      } else if (objSchema === undefined && typeof schema[key] === 'object') {\n        explore(schema[key], searchedId)\n      }\n    })\n  }\n  explore(schema, searchedId)\n  return objSchema\n}\n\nfunction refFinder (ref, location) {\n  const externalSchema = location.externalSchema\n  let root = location.root\n  let schema = location.schema\n\n  if (externalSchema && externalSchema[ref]) {\n    return {\n      schema: externalSchema[ref],\n      root: externalSchema[ref],\n      externalSchema: externalSchema\n    }\n  }\n\n  // Split file from walk\n  ref = ref.split('#')\n\n  // If external file\n  if (ref[0]) {\n    schema = externalSchema[ref[0]]\n    root = externalSchema[ref[0]]\n\n    if (schema === undefined) {\n      findBadKey(externalSchema, [ref[0]])\n    }\n\n    if (schema.$ref) {\n      return refFinder(schema.$ref, {\n        schema: schema,\n        root: root,\n        externalSchema: externalSchema\n      })\n    }\n  }\n\n  let code = 'return schema'\n  // If it has a path\n  if (ref[1]) {\n    // ref[1] could contain a JSON pointer - ex: /definitions/num\n    // or plain name fragment id without suffix # - ex: customId\n    const walk = ref[1].split('/')\n    if (walk.length === 1) {\n      const targetId = `#${ref[1]}`\n      let dereferenced = idFinder(schema, targetId)\n      if (dereferenced === undefined && !ref[0]) {\n        // eslint-disable-next-line\n        for (var key of Object.keys(externalSchema)) {\n          dereferenced = idFinder(externalSchema[key], targetId)\n          if (dereferenced !== undefined) {\n            root = externalSchema[key]\n            break\n          }\n        }\n      }\n\n      return {\n        schema: dereferenced,\n        root: root,\n        externalSchema: externalSchema\n      }\n    } else {\n      // eslint-disable-next-line\n      for (var i = 1; i < walk.length; i++) {\n        code += `[${JSON.stringify(walk[i])}]`\n      }\n    }\n  }\n  let result\n  try {\n    result = (new Function('schema', code))(root)\n  } catch (err) {}\n\n  if (result === undefined && ref[1]) {\n    const walk = ref[1].split('/')\n    findBadKey(schema, walk.slice(1))\n  }\n\n  if (result.$ref) {\n    return refFinder(result.$ref, {\n      schema: schema,\n      root: root,\n      externalSchema: externalSchema\n    })\n  }\n\n  return {\n    schema: result,\n    root: root,\n    externalSchema: externalSchema\n  }\n\n  function findBadKey (obj, keys) {\n    if (keys.length === 0) return null\n    const key = keys.shift()\n    if (obj[key] === undefined) {\n      stringSimilarity = stringSimilarity || require('string-similarity')\n      const { bestMatch } = stringSimilarity.findBestMatch(key, Object.keys(obj))\n      if (bestMatch.rating >= 0.5) {\n        throw new Error(`Cannot find reference ${JSON.stringify(key)}, did you mean ${JSON.stringify(bestMatch.target)}?`)\n      } else {\n        throw new Error(`Cannot find reference ${JSON.stringify(key)}`)\n      }\n    }\n    return findBadKey(obj[key], keys)\n  }\n}\n\nfunction buildCode (location, code, laterCode, name) {\n  if (location.schema.$ref) {\n    location = refFinder(location.schema.$ref, location)\n  }\n\n  const schema = location.schema\n  let required = schema.required\n\n  Object.keys(schema.properties || {}).forEach((key, i, a) => {\n    let propertyLocation = mergeLocation(location, { schema: schema.properties[key] })\n    if (schema.properties[key].$ref) {\n      propertyLocation = refFinder(schema.properties[key].$ref, location)\n      schema.properties[key] = propertyLocation.schema\n    }\n\n    // Using obj['key'] !== undefined instead of obj.hasOwnProperty(prop) for perf reasons,\n    // see https://github.com/mcollina/fast-json-stringify/pull/3 for discussion.\n\n    const type = schema.properties[key].type\n    const nullable = schema.properties[key].nullable\n    const sanitized = JSON.stringify(key)\n    const asString = JSON.stringify(sanitized)\n\n    if (nullable) {\n      code += `\n        if (obj[${sanitized}] === null) {\n          ${addComma}\n          json += ${asString} + ':null'\n          var rendered = true\n        } else {\n      `\n    }\n\n    if (type === 'number') {\n      code += `\n          var t = Number(obj[${sanitized}])\n          if (!isNaN(t)) {\n            ${addComma}\n            json += ${asString} + ':' + t\n      `\n    } else if (type === 'integer') {\n      code += `\n          var rendered = false\n      `\n      if (isLong) {\n        code += `\n            if (isLong(obj[${sanitized}])) {\n              ${addComma}\n              json += ${asString} + ':' + obj[${sanitized}].toString()\n              rendered = true\n            } else {\n              var t = Number(obj[${sanitized}])\n              if (!isNaN(t)) {\n                ${addComma}\n                json += ${asString} + ':' + t\n                rendered = true\n              }\n            }\n        `\n      } else {\n        code += `\n            var t = $asInteger(obj[${sanitized}])\n            if (!isNaN(t)) {\n              ${addComma}\n              json += ${asString} + ':' + t\n              rendered = true\n            }\n        `\n      }\n      code += `\n          if (rendered) {\n      `\n    } else {\n      code += `\n        if (obj[${sanitized}] !== undefined) {\n          ${addComma}\n          json += ${asString} + ':'\n        `\n\n      const result = nested(laterCode, name, key, mergeLocation(propertyLocation, { schema: schema.properties[key] }), undefined, false)\n      code += result.code\n      laterCode = result.laterCode\n    }\n\n    const defaultValue = schema.properties[key].default\n    if (defaultValue !== undefined) {\n      required = filterRequired(required, key)\n      code += `\n      } else {\n        ${addComma}\n        json += ${asString} + ':' + ${JSON.stringify(JSON.stringify(defaultValue))}\n      `\n    } else if (required && required.indexOf(key) !== -1) {\n      required = filterRequired(required, key)\n      code += `\n      } else {\n        throw new Error('${sanitized} is required!')\n      `\n    }\n\n    code += `\n      }\n    `\n\n    if (nullable) {\n      code += `\n        }\n      `\n    }\n  })\n\n  if (required && required.length > 0) {\n    code += 'var required = ['\n    // eslint-disable-next-line\n    for (var i = 0; i < required.length; i++) {\n      if (i > 0) {\n        code += ','\n      }\n      code += `${JSON.stringify(required[i])}`\n    }\n    code += `]\n      for (var i = 0; i < required.length; i++) {\n        if (obj[required[i]] === undefined) throw new Error('\"' + required[i] + '\" is required!')\n      }\n    `\n  }\n\n  return { code: code, laterCode: laterCode }\n}\n\nfunction filterRequired (required, key) {\n  if (!required) {\n    return required\n  }\n  return required.filter(k => k !== key)\n}\n\nfunction buildCodeWithAllOfs (location, code, laterCode, name) {\n  if (location.schema.allOf) {\n    location.schema.allOf.forEach((ss) => {\n      const builtCode = buildCodeWithAllOfs(mergeLocation(location, { schema: ss }), code, laterCode, name)\n      code = builtCode.code\n      laterCode = builtCode.laterCode\n    })\n  } else {\n    const builtCode = buildCode(location, code, laterCode, name)\n\n    code = builtCode.code\n    laterCode = builtCode.laterCode\n  }\n\n  return { code: code, laterCode: laterCode }\n}\n\nfunction buildInnerObject (location, name) {\n  const schema = location.schema\n  const result = buildCodeWithAllOfs(location, '', '', name)\n  if (schema.patternProperties) {\n    result.code += addPatternProperties(location)\n  } else if (schema.additionalProperties && !schema.patternProperties) {\n    result.code += addAdditionalProperties(location)\n  }\n  return result\n}\n\nfunction addIfThenElse (location, name) {\n  let code = ''\n  let r\n  let laterCode = ''\n  let innerR\n\n  const schema = location.schema\n  const copy = merge({}, schema)\n  const i = copy.if\n  const then = copy.then\n  const e = copy.else ? copy.else : { additionalProperties: true }\n  delete copy.if\n  delete copy.then\n  delete copy.else\n  let merged = merge(copy, then)\n  let mergedLocation = mergeLocation(location, { schema: merged })\n\n  code += `\n    valid = ajv.validate(${JSON.stringify(i)}, obj)\n    if (valid) {\n  `\n  if (merged.if && merged.then) {\n    innerR = addIfThenElse(mergedLocation, name + 'Then')\n    code += innerR.code\n    laterCode = innerR.laterCode\n  }\n\n  r = buildInnerObject(mergedLocation, name + 'Then')\n  code += r.code\n  laterCode += r.laterCode\n\n  code += `\n    }\n  `\n  merged = merge(copy, e)\n  mergedLocation = mergeLocation(mergedLocation, { schema: merged })\n\n  code += `\n      else {\n    `\n\n  if (merged.if && merged.then) {\n    innerR = addIfThenElse(mergedLocation, name + 'Else')\n    code += innerR.code\n    laterCode += innerR.laterCode\n  }\n\n  r = buildInnerObject(mergedLocation, name + 'Else')\n  code += r.code\n  laterCode += r.laterCode\n\n  code += `\n      }\n    `\n  return { code: code, laterCode: laterCode }\n}\n\nfunction toJSON (variableName) {\n  return `(${variableName} && typeof ${variableName}.toJSON === 'function')\n    ? ${variableName}.toJSON()\n    : ${variableName}\n  `\n}\n\nfunction buildObject (location, code, name) {\n  const schema = location.schema\n\n  code += `\n    function ${name} (input) {\n  `\n  if (schema.nullable) {\n    code += `\n      if(input === null) {\n        return 'null';\n      }\n  `\n  }\n  code += `\n      var obj = ${toJSON('input')}\n      var json = '{'\n      var addComma = false\n  `\n\n  let r\n  if (schema.if && schema.then) {\n    code += `\n      var valid\n    `\n    r = addIfThenElse(location, name)\n  } else {\n    r = buildInnerObject(location, name)\n  }\n\n  // Removes the comma if is the last element of the string (in case there are not properties)\n  code += `${r.code}\n      json += '}'\n      return json\n    }\n    ${r.laterCode}\n  `\n\n  return code\n}\n\nfunction buildArray (location, code, name, key = null) {\n  let schema = location.schema\n  code += `\n    function ${name} (obj) {\n  `\n  if (schema.nullable) {\n    code += `\n      if(obj === null) {\n        return 'null';\n      }\n    `\n  }\n  const laterCode = ''\n\n  // default to any items type\n  if (!schema.items) {\n    schema.items = {}\n  }\n\n  if (schema.items.$ref) {\n    if (!schema[fjsCloned]) {\n      location.schema = clone(location.schema)\n      schema = location.schema\n      schema[fjsCloned] = true\n    }\n    location = refFinder(schema.items.$ref, location)\n    schema.items = location.schema\n  }\n\n  let result = { code: '', laterCode: '' }\n  const accessor = '[i]'\n  if (Array.isArray(schema.items)) {\n    result = schema.items.reduce((res, item, i) => {\n      const tmpRes = nested(laterCode, name, accessor, mergeLocation(location, { schema: item }), i, true)\n      const condition = `i === ${i} && ${buildArrayTypeCondition(item.type, accessor)}`\n      return {\n        code: `${res.code}\n        ${i > 0 ? 'else' : ''} if (${condition}) {\n          ${tmpRes.code}\n        }`,\n        laterCode: `${res.laterCode}\n        ${tmpRes.laterCode}`\n      }\n    }, result)\n\n    if (schema.additionalItems) {\n      const tmpRes = nested(laterCode, name, accessor, mergeLocation(location, { schema: schema.items }), undefined, true)\n      result.code += `\n      else if (i >= ${schema.items.length}) {\n        ${tmpRes.code}\n      }\n      `\n    }\n\n    result.code += `\n    else {\n      throw new Error(\\`Item at $\\{i} does not match schema definition.\\`)\n    }\n    `\n  } else {\n    result = nested(laterCode, name, accessor, mergeLocation(location, { schema: schema.items }), undefined, true)\n  }\n\n  if (key) {\n    code += `\n    if(!Array.isArray(obj)) {\n      throw new TypeError(\\`Property '${key}' should be of type array, received '$\\{obj}' instead.\\`)\n    }\n    `\n  }\n\n  code += `\n    var l = obj.length\n    var jsonOutput= ''\n    for (var i = 0; i < l; i++) {\n      var json = ''\n      ${result.code}\n      jsonOutput += json\n\n      if (json.length > 0 && i < l - 1) {\n        jsonOutput += ','\n      }\n    }\n    return \\`[\\${jsonOutput}]\\`\n  }\n  ${result.laterCode}\n  `\n\n  return code\n}\n\nfunction buildArrayTypeCondition (type, accessor) {\n  let condition\n  switch (type) {\n    case 'null':\n      condition = `obj${accessor} === null`\n      break\n    case 'string':\n      condition = `typeof obj${accessor} === 'string'`\n      break\n    case 'integer':\n      condition = `Number.isInteger(obj${accessor})`\n      break\n    case 'number':\n      condition = `Number.isFinite(obj${accessor})`\n      break\n    case 'boolean':\n      condition = `typeof obj${accessor} === 'boolean'`\n      break\n    case 'object':\n      condition = `obj${accessor} && typeof obj${accessor} === 'object' && obj${accessor}.constructor === Object`\n      break\n    case 'array':\n      condition = `Array.isArray(obj${accessor})`\n      break\n    default:\n      if (Array.isArray(type)) {\n        const conditions = type.map((subType) => {\n          return buildArrayTypeCondition(subType, accessor)\n        })\n        condition = `(${conditions.join(' || ')})`\n      } else {\n        throw new Error(`${type} unsupported`)\n      }\n  }\n  return condition\n}\n\nfunction dereferenceOfRefs (location, type) {\n  if (!location.schema[fjsCloned]) {\n    const schemaClone = clone(location.schema)\n    schemaClone[fjsCloned] = true\n    location.schema = schemaClone\n  }\n\n  const schema = location.schema\n  const locations = []\n\n  schema[type].forEach((s, index) => {\n    // follow the refs\n    let sLocation = mergeLocation(location, { schema: s })\n    while (s.$ref) {\n      sLocation = refFinder(s.$ref, sLocation)\n      schema[type][index] = sLocation.schema\n      s = schema[type][index]\n    }\n    locations[index] = sLocation\n  })\n\n  return locations\n}\n\nlet strNameCounter = 0\nfunction asFuncName (str) {\n  // only allow chars that can work\n  let rep = str.replace(/[^a-zA-Z0-9$_]/g, '')\n\n  if (rep.length === 0) {\n    return 'anan' + strNameCounter++\n  } else if (rep !== str) {\n    rep += strNameCounter++\n  }\n\n  return rep\n}\n\nfunction nested (laterCode, name, key, location, subKey, isArray) {\n  let code = ''\n  let funcName\n\n  subKey = subKey || ''\n\n  let schema = location.schema\n\n  if (schema.$ref) {\n    schema = refFinder(schema.$ref, location)\n  }\n\n  if (schema.type === undefined) {\n    const inferredType = inferTypeByKeyword(schema)\n    if (inferredType) {\n      schema.type = inferredType\n    }\n  }\n\n  const type = schema.type\n  const nullable = schema.nullable === true\n\n  const accessor = isArray ? key : `[${JSON.stringify(key)}]`\n\n  switch (type) {\n    case 'null':\n      code += `\n        json += $asNull()\n      `\n      break\n    case 'string': {\n      const stringSerializer = getStringSerializer(schema.format)\n      code += nullable ? `json += obj${accessor} === null ? null : ${stringSerializer}(obj${accessor})` : `json += ${stringSerializer}(obj${accessor})`\n      break\n    }\n    case 'integer':\n      code += nullable ? `json += obj${accessor} === null ? null : $asInteger(obj${accessor})` : `json += $asInteger(obj${accessor})`\n      break\n    case 'number':\n      code += nullable ? `json += obj${accessor} === null ? null : $asNumber(obj${accessor})` : `json += $asNumber(obj${accessor})`\n      break\n    case 'boolean':\n      code += nullable ? `json += obj${accessor} === null ? null : $asBoolean(obj${accessor})` : `json += $asBoolean(obj${accessor})`\n      break\n    case 'object':\n      funcName = asFuncName(name + key + subKey)\n      laterCode = buildObject(location, laterCode, funcName)\n      code += `\n        json += ${funcName}(obj${accessor})\n      `\n      break\n    case 'array':\n      funcName = asFuncName('$arr' + name + key + subKey) // eslint-disable-line\n      laterCode = buildArray(location, laterCode, funcName, key)\n      code += `\n        json += ${funcName}(obj${accessor})\n      `\n      break\n    case undefined:\n      if ('anyOf' in schema) {\n        // beware: dereferenceOfRefs has side effects and changes schema.anyOf\n        const anyOfLocations = dereferenceOfRefs(location, 'anyOf')\n        anyOfLocations.forEach((location, index) => {\n          const nestedResult = nested(laterCode, name, key, location, subKey !== '' ? subKey : 'i' + index, isArray)\n          // We need a test serializer as the String serializer will not work with\n          // date/time ajv validations\n          // see: https://github.com/fastify/fast-json-stringify/issues/325\n          const testSerializer = getTestSerializer(location.schema.format)\n          const testValue = testSerializer !== undefined ? `${testSerializer}(obj${accessor}, true)` : `obj${accessor}`\n\n          // Since we are only passing the relevant schema to ajv.validate, it needs to be full dereferenced\n          // otherwise any $ref pointing to an external schema would result in an error.\n          // Full dereference of the schema happens as side effect of two functions:\n          // 1. `dereferenceOfRefs` loops through the `schema.anyOf`` array and replaces any top level reference\n          // with the actual schema\n          // 2. `nested`, through `buildCode`, replaces any reference in object properties with the actual schema\n          // (see https://github.com/fastify/fast-json-stringify/blob/6da3b3e8ac24b1ca5578223adedb4083b7adf8db/index.js#L631)\n          code += `\n            ${index === 0 ? 'if' : 'else if'}(ajv.validate(${JSON.stringify(location.schema)}, ${testValue}))\n              ${nestedResult.code}\n          `\n          laterCode = nestedResult.laterCode\n        })\n        code += `\n          else json+= null\n        `\n      } else if ('oneOf' in schema) {\n        // beware: dereferenceOfRefs has side effects and changes schema.oneOf\n        const oneOfLocations = dereferenceOfRefs(location, 'oneOf')\n        oneOfLocations.forEach((location, index) => {\n          const nestedResult = nested(laterCode, name, key, location, subKey !== '' ? subKey : 'i' + index, isArray)\n          const testSerializer = getTestSerializer(location.schema.format)\n          const testValue = testSerializer !== undefined ? `${testSerializer}(obj${accessor}, true)` : `obj${accessor}`\n          // see comment on anyOf about dereferencing the schema before calling ajv.validate\n          code += `\n            ${index === 0 ? 'if' : 'else if'}(ajv.validate(${JSON.stringify(location.schema)}, ${testValue}))\n              ${nestedResult.code}\n          `\n          laterCode = nestedResult.laterCode\n        })\n\n        if (!isArray) {\n          code += `\n            else json+= null\n          `\n        }\n      } else if (isEmpty(schema)) {\n        code += `\n          json += JSON.stringify(obj${accessor})\n        `\n      } else if ('const' in schema) {\n        code += `\n          if(ajv.validate(${JSON.stringify(schema)}, obj${accessor}))\n            json += '${JSON.stringify(schema.const)}'\n          else\n            throw new Error(\\`Item $\\{JSON.stringify(obj${accessor})} does not match schema definition.\\`)\n        `\n      } else if (schema.type === undefined) {\n        code += `\n          json += JSON.stringify(obj${accessor})\n        `\n      } else {\n        throw new Error(`${schema.type} unsupported`)\n      }\n      break\n    default:\n      if (Array.isArray(type)) {\n        const nullIndex = type.indexOf('null')\n        const sortedTypes = nullIndex !== -1 ? [type[nullIndex]].concat(type.slice(0, nullIndex)).concat(type.slice(nullIndex + 1)) : type\n        sortedTypes.forEach((type, index) => {\n          const statement = index === 0 ? 'if' : 'else if'\n          const tempSchema = Object.assign({}, schema, { type })\n          const nestedResult = nested(laterCode, name, key, mergeLocation(location, { schema: tempSchema }), subKey, isArray)\n          switch (type) {\n            case 'string': {\n              code += `\n                ${statement}(obj${accessor} === null || typeof obj${accessor} === \"${type}\" || obj${accessor} instanceof Date || typeof obj${accessor}.toISOString === \"function\" || obj${accessor} instanceof RegExp || (typeof obj${accessor} === \"object\" && Object.hasOwnProperty.call(obj${accessor}, \"toString\")))\n                  ${nestedResult.code}\n              `\n              break\n            }\n            case 'null': {\n              code += `\n                ${statement}(obj${accessor} == null)\n                  ${nestedResult.code}\n              `\n              break\n            }\n            case 'array': {\n              code += `\n                ${statement}(Array.isArray(obj${accessor}))\n                  ${nestedResult.code}\n              `\n              break\n            }\n            case 'integer': {\n              code += `\n                ${statement}(Number.isInteger(obj${accessor}) || obj${accessor} === null)\n                  ${nestedResult.code}\n              `\n              break\n            }\n            case 'number': {\n              code += `\n                ${statement}(isNaN(obj${accessor}) === false)\n                  ${nestedResult.code}\n              `\n              break\n            }\n            default: {\n              code += `\n                ${statement}(typeof obj${accessor} === \"${type}\")\n                  ${nestedResult.code}\n              `\n              break\n            }\n          }\n          laterCode = nestedResult.laterCode\n        })\n        code += `\n          else json+= null\n        `\n      } else {\n        throw new Error(`${type} unsupported`)\n      }\n  }\n\n  return {\n    code,\n    laterCode\n  }\n}\n\nfunction isEmpty (schema) {\n  // eslint-disable-next-line\n  for (var key in schema) {\n    if (schema.hasOwnProperty(key) && schema[key] !== undefined) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = build\n\nmodule.exports.restore = function (debugModeStr, options = {}) {\n  const dependencies = [debugModeStr]\n  const args = []\n  if (debugModeStr.startsWith('ajv')) {\n    dependencies.unshift('ajv')\n    args.push(new Ajv(options.ajv))\n  }\n\n  // eslint-disable-next-line\n  return (Function.apply(null, ['ajv', debugModeStr])\n    .apply(null, args))\n}\n","// This file is autogenerated by build-schema-validator.js, do not edit\n\nfunction nop () { return true }\n\n'use strict';\nvar formats = require('ajv/lib/compile/formats')();\nvar equal = require('ajv/lib/compile/equal');\nvar validate = (function() {\n  var refVal = [];\n  var refVal1 = {\n    \"type\": \"integer\",\n    \"minimum\": 0\n  };\n  refVal[1] = refVal1;\n  var refVal2 = (function() {\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      'use strict';\n      var vErrors = null;\n      var errors = 0;\n      var errs_1 = errors;\n      var errs_2 = errors;\n      if ((typeof data !== \"number\" || (data % 1) || data !== data)) {\n        validate.errors = [{\n          keyword: 'type',\n          dataPath: (dataPath || '') + \"\",\n          schemaPath: '#/definitions/nonNegativeInteger/type',\n          params: {\n            type: 'integer'\n          },\n          message: 'should be integer'\n        }];\n        return false;\n      }\n      if (typeof data === \"number\") {\n        if (data < 0 || data !== data) {\n          validate.errors = [{\n            keyword: 'minimum',\n            dataPath: (dataPath || '') + \"\",\n            schemaPath: '#/definitions/nonNegativeInteger/minimum',\n            params: {\n              comparison: '>=',\n              limit: 0,\n              exclusive: false\n            },\n            message: 'should be >= 0'\n          }];\n          return false;\n        }\n      }\n      var valid2 = errors === errs_2;\n      var valid1 = errors === errs_1;\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal2.schema = {\n    \"allOf\": [{\n      \"$ref\": \"#/definitions/nonNegativeInteger\"\n    }, {\n      \"default\": 0\n    }]\n  };\n  refVal2.errors = null;\n  refVal[2] = refVal2;\n  var refVal3 = (function() {\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      'use strict';\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if (Array.isArray(data)) {\n        if (data.length < 1) {\n          validate.errors = [{\n            keyword: 'minItems',\n            dataPath: (dataPath || '') + \"\",\n            schemaPath: '#/minItems',\n            params: {\n              limit: 1\n            },\n            message: 'should NOT have fewer than 1 items'\n          }];\n          return false;\n        } else {\n          var errs__0 = errors;\n          var valid0;\n          for (var i0 = 0; i0 < data.length; i0++) {\n            var errs_1 = errors;\n            if (!nop(data[i0], (dataPath || '') + '[' + i0 + ']', data, i0, rootData)) {\n              if (vErrors === null) vErrors = nop.errors;\n              else vErrors = vErrors.concat(nop.errors);\n              errors = vErrors.length;\n            }\n            var valid1 = errors === errs_1;\n            if (!valid1) break;\n          }\n        }\n      } else {\n        validate.errors = [{\n          keyword: 'type',\n          dataPath: (dataPath || '') + \"\",\n          schemaPath: '#/type',\n          params: {\n            type: 'array'\n          },\n          message: 'should be array'\n        }];\n        return false;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal3.schema = {\n    \"type\": \"array\",\n    \"minItems\": 1,\n    \"items\": {\n      \"$ref\": \"#\"\n    }\n  };\n  refVal3.errors = null;\n  refVal[3] = refVal3;\n  var refVal4 = {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"string\"\n    },\n    \"uniqueItems\": true,\n    \"default\": []\n  };\n  refVal[4] = refVal4;\n  var refVal5 = {\n    \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n  };\n  refVal[5] = refVal5;\n  return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n    'use strict'; /*# sourceURL=http://json-schema.org/draft-07/schema# */\n    var vErrors = null;\n    var errors = 0;\n    if (rootData === undefined) rootData = data;\n    if ((!data || typeof data !== \"object\" || Array.isArray(data)) && typeof data !== \"boolean\") {\n      validate.errors = [{\n        keyword: 'type',\n        dataPath: (dataPath || '') + \"\",\n        schemaPath: '#/type',\n        params: {\n          type: 'object,boolean'\n        },\n        message: 'should be object,boolean'\n      }];\n      return false;\n    }\n    if ((data && typeof data === \"object\" && !Array.isArray(data))) {\n      var errs__0 = errors;\n      var valid1 = true;\n      var data1 = data.$id;\n      if (data1 === undefined) {\n        valid1 = true;\n      } else {\n        var errs_1 = errors;\n        if (errors === errs_1) {\n          if (typeof data1 === \"string\") {\n            if (!formats['uri-reference'].test(data1)) {\n              validate.errors = [{\n                keyword: 'format',\n                dataPath: (dataPath || '') + '.$id',\n                schemaPath: '#/properties/%24id/format',\n                params: {\n                  format: 'uri-reference'\n                },\n                message: 'should match format \"uri-reference\"'\n              }];\n              return false;\n            }\n          } else {\n            validate.errors = [{\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.$id',\n              schemaPath: '#/properties/%24id/type',\n              params: {\n                type: 'string'\n              },\n              message: 'should be string'\n            }];\n            return false;\n          }\n        }\n        var valid1 = errors === errs_1;\n      }\n      if (valid1) {\n        var data1 = data.$schema;\n        if (data1 === undefined) {\n          valid1 = true;\n        } else {\n          var errs_1 = errors;\n          if (errors === errs_1) {\n            if (typeof data1 === \"string\") {\n              if (!formats.uri.test(data1)) {\n                validate.errors = [{\n                  keyword: 'format',\n                  dataPath: (dataPath || '') + '.$schema',\n                  schemaPath: '#/properties/%24schema/format',\n                  params: {\n                    format: 'uri'\n                  },\n                  message: 'should match format \"uri\"'\n                }];\n                return false;\n              }\n            } else {\n              validate.errors = [{\n                keyword: 'type',\n                dataPath: (dataPath || '') + '.$schema',\n                schemaPath: '#/properties/%24schema/type',\n                params: {\n                  type: 'string'\n                },\n                message: 'should be string'\n              }];\n              return false;\n            }\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (valid1) {\n          var data1 = data.$ref;\n          if (data1 === undefined) {\n            valid1 = true;\n          } else {\n            var errs_1 = errors;\n            if (errors === errs_1) {\n              if (typeof data1 === \"string\") {\n                if (!formats['uri-reference'].test(data1)) {\n                  validate.errors = [{\n                    keyword: 'format',\n                    dataPath: (dataPath || '') + '.$ref',\n                    schemaPath: '#/properties/%24ref/format',\n                    params: {\n                      format: 'uri-reference'\n                    },\n                    message: 'should match format \"uri-reference\"'\n                  }];\n                  return false;\n                }\n              } else {\n                validate.errors = [{\n                  keyword: 'type',\n                  dataPath: (dataPath || '') + '.$ref',\n                  schemaPath: '#/properties/%24ref/type',\n                  params: {\n                    type: 'string'\n                  },\n                  message: 'should be string'\n                }];\n                return false;\n              }\n            }\n            var valid1 = errors === errs_1;\n          }\n          if (valid1) {\n            if (data.$comment === undefined) {\n              valid1 = true;\n            } else {\n              var errs_1 = errors;\n              if (typeof data.$comment !== \"string\") {\n                validate.errors = [{\n                  keyword: 'type',\n                  dataPath: (dataPath || '') + '.$comment',\n                  schemaPath: '#/properties/%24comment/type',\n                  params: {\n                    type: 'string'\n                  },\n                  message: 'should be string'\n                }];\n                return false;\n              }\n              var valid1 = errors === errs_1;\n            }\n            if (valid1) {\n              if (data.title === undefined) {\n                valid1 = true;\n              } else {\n                var errs_1 = errors;\n                if (typeof data.title !== \"string\") {\n                  validate.errors = [{\n                    keyword: 'type',\n                    dataPath: (dataPath || '') + '.title',\n                    schemaPath: '#/properties/title/type',\n                    params: {\n                      type: 'string'\n                    },\n                    message: 'should be string'\n                  }];\n                  return false;\n                }\n                var valid1 = errors === errs_1;\n              }\n              if (valid1) {\n                if (data.description === undefined) {\n                  valid1 = true;\n                } else {\n                  var errs_1 = errors;\n                  if (typeof data.description !== \"string\") {\n                    validate.errors = [{\n                      keyword: 'type',\n                      dataPath: (dataPath || '') + '.description',\n                      schemaPath: '#/properties/description/type',\n                      params: {\n                        type: 'string'\n                      },\n                      message: 'should be string'\n                    }];\n                    return false;\n                  }\n                  var valid1 = errors === errs_1;\n                }\n                if (valid1) {\n                  if (valid1) {\n                    if (data.readOnly === undefined) {\n                      valid1 = true;\n                    } else {\n                      var errs_1 = errors;\n                      if (typeof data.readOnly !== \"boolean\") {\n                        validate.errors = [{\n                          keyword: 'type',\n                          dataPath: (dataPath || '') + '.readOnly',\n                          schemaPath: '#/properties/readOnly/type',\n                          params: {\n                            type: 'boolean'\n                          },\n                          message: 'should be boolean'\n                        }];\n                        return false;\n                      }\n                      var valid1 = errors === errs_1;\n                    }\n                    if (valid1) {\n                      if (data.examples === undefined) {\n                        valid1 = true;\n                      } else {\n                        var errs_1 = errors;\n                        if (Array.isArray(data.examples)) {\n                          var errs__1 = errors;\n                          var valid1;\n                        } else {\n                          validate.errors = [{\n                            keyword: 'type',\n                            dataPath: (dataPath || '') + '.examples',\n                            schemaPath: '#/properties/examples/type',\n                            params: {\n                              type: 'array'\n                            },\n                            message: 'should be array'\n                          }];\n                          return false;\n                        }\n                        var valid1 = errors === errs_1;\n                      }\n                      if (valid1) {\n                        var data1 = data.multipleOf;\n                        if (data1 === undefined) {\n                          valid1 = true;\n                        } else {\n                          var errs_1 = errors;\n                          if (typeof data1 === \"number\") {\n                            if (data1 <= 0 || data1 !== data1) {\n                              validate.errors = [{\n                                keyword: 'exclusiveMinimum',\n                                dataPath: (dataPath || '') + '.multipleOf',\n                                schemaPath: '#/properties/multipleOf/exclusiveMinimum',\n                                params: {\n                                  comparison: '>',\n                                  limit: 0,\n                                  exclusive: true\n                                },\n                                message: 'should be > 0'\n                              }];\n                              return false;\n                            }\n                          } else {\n                            validate.errors = [{\n                              keyword: 'type',\n                              dataPath: (dataPath || '') + '.multipleOf',\n                              schemaPath: '#/properties/multipleOf/type',\n                              params: {\n                                type: 'number'\n                              },\n                              message: 'should be number'\n                            }];\n                            return false;\n                          }\n                          var valid1 = errors === errs_1;\n                        }\n                        if (valid1) {\n                          if (data.maximum === undefined) {\n                            valid1 = true;\n                          } else {\n                            var errs_1 = errors;\n                            if (typeof data.maximum !== \"number\") {\n                              validate.errors = [{\n                                keyword: 'type',\n                                dataPath: (dataPath || '') + '.maximum',\n                                schemaPath: '#/properties/maximum/type',\n                                params: {\n                                  type: 'number'\n                                },\n                                message: 'should be number'\n                              }];\n                              return false;\n                            }\n                            var valid1 = errors === errs_1;\n                          }\n                          if (valid1) {\n                            if (data.exclusiveMaximum === undefined) {\n                              valid1 = true;\n                            } else {\n                              var errs_1 = errors;\n                              if (typeof data.exclusiveMaximum !== \"number\") {\n                                validate.errors = [{\n                                  keyword: 'type',\n                                  dataPath: (dataPath || '') + '.exclusiveMaximum',\n                                  schemaPath: '#/properties/exclusiveMaximum/type',\n                                  params: {\n                                    type: 'number'\n                                  },\n                                  message: 'should be number'\n                                }];\n                                return false;\n                              }\n                              var valid1 = errors === errs_1;\n                            }\n                            if (valid1) {\n                              if (data.minimum === undefined) {\n                                valid1 = true;\n                              } else {\n                                var errs_1 = errors;\n                                if (typeof data.minimum !== \"number\") {\n                                  validate.errors = [{\n                                    keyword: 'type',\n                                    dataPath: (dataPath || '') + '.minimum',\n                                    schemaPath: '#/properties/minimum/type',\n                                    params: {\n                                      type: 'number'\n                                    },\n                                    message: 'should be number'\n                                  }];\n                                  return false;\n                                }\n                                var valid1 = errors === errs_1;\n                              }\n                              if (valid1) {\n                                if (data.exclusiveMinimum === undefined) {\n                                  valid1 = true;\n                                } else {\n                                  var errs_1 = errors;\n                                  if (typeof data.exclusiveMinimum !== \"number\") {\n                                    validate.errors = [{\n                                      keyword: 'type',\n                                      dataPath: (dataPath || '') + '.exclusiveMinimum',\n                                      schemaPath: '#/properties/exclusiveMinimum/type',\n                                      params: {\n                                        type: 'number'\n                                      },\n                                      message: 'should be number'\n                                    }];\n                                    return false;\n                                  }\n                                  var valid1 = errors === errs_1;\n                                }\n                                if (valid1) {\n                                  var data1 = data.maxLength;\n                                  if (data1 === undefined) {\n                                    valid1 = true;\n                                  } else {\n                                    var errs_1 = errors;\n                                    var errs_2 = errors;\n                                    if ((typeof data1 !== \"number\" || (data1 % 1) || data1 !== data1)) {\n                                      validate.errors = [{\n                                        keyword: 'type',\n                                        dataPath: (dataPath || '') + '.maxLength',\n                                        schemaPath: '#/definitions/nonNegativeInteger/type',\n                                        params: {\n                                          type: 'integer'\n                                        },\n                                        message: 'should be integer'\n                                      }];\n                                      return false;\n                                    }\n                                    if (typeof data1 === \"number\") {\n                                      if (data1 < 0 || data1 !== data1) {\n                                        validate.errors = [{\n                                          keyword: 'minimum',\n                                          dataPath: (dataPath || '') + '.maxLength',\n                                          schemaPath: '#/definitions/nonNegativeInteger/minimum',\n                                          params: {\n                                            comparison: '>=',\n                                            limit: 0,\n                                            exclusive: false\n                                          },\n                                          message: 'should be >= 0'\n                                        }];\n                                        return false;\n                                      }\n                                    }\n                                    var valid2 = errors === errs_2;\n                                    var valid1 = errors === errs_1;\n                                  }\n                                  if (valid1) {\n                                    if (data.minLength === undefined) {\n                                      valid1 = true;\n                                    } else {\n                                      var errs_1 = errors;\n                                      if (!refVal2(data.minLength, (dataPath || '') + '.minLength', data, 'minLength', rootData)) {\n                                        if (vErrors === null) vErrors = refVal2.errors;\n                                        else vErrors = vErrors.concat(refVal2.errors);\n                                        errors = vErrors.length;\n                                      }\n                                      var valid1 = errors === errs_1;\n                                    }\n                                    if (valid1) {\n                                      var data1 = data.pattern;\n                                      if (data1 === undefined) {\n                                        valid1 = true;\n                                      } else {\n                                        var errs_1 = errors;\n                                        if (errors === errs_1) {\n                                          if (typeof data1 === \"string\") {\n                                            if (!formats.regex(data1)) {\n                                              validate.errors = [{\n                                                keyword: 'format',\n                                                dataPath: (dataPath || '') + '.pattern',\n                                                schemaPath: '#/properties/pattern/format',\n                                                params: {\n                                                  format: 'regex'\n                                                },\n                                                message: 'should match format \"regex\"'\n                                              }];\n                                              return false;\n                                            }\n                                          } else {\n                                            validate.errors = [{\n                                              keyword: 'type',\n                                              dataPath: (dataPath || '') + '.pattern',\n                                              schemaPath: '#/properties/pattern/type',\n                                              params: {\n                                                type: 'string'\n                                              },\n                                              message: 'should be string'\n                                            }];\n                                            return false;\n                                          }\n                                        }\n                                        var valid1 = errors === errs_1;\n                                      }\n                                      if (valid1) {\n                                        if (data.additionalItems === undefined) {\n                                          valid1 = true;\n                                        } else {\n                                          var errs_1 = errors;\n                                          if (!validate(data.additionalItems, (dataPath || '') + '.additionalItems', data, 'additionalItems', rootData)) {\n                                            if (vErrors === null) vErrors = validate.errors;\n                                            else vErrors = vErrors.concat(validate.errors);\n                                            errors = vErrors.length;\n                                          }\n                                          var valid1 = errors === errs_1;\n                                        }\n                                        if (valid1) {\n                                          var data1 = data.items;\n                                          if (data1 === undefined) {\n                                            valid1 = true;\n                                          } else {\n                                            var errs_1 = errors;\n                                            var errs__1 = errors;\n                                            var valid1 = false;\n                                            var errs_2 = errors;\n                                            if (!validate(data1, (dataPath || '') + '.items', data, 'items', rootData)) {\n                                              if (vErrors === null) vErrors = validate.errors;\n                                              else vErrors = vErrors.concat(validate.errors);\n                                              errors = vErrors.length;\n                                            }\n                                            var valid2 = errors === errs_2;\n                                            valid1 = valid1 || valid2;\n                                            if (!valid1) {\n                                              var errs_2 = errors;\n                                              if (!refVal3(data1, (dataPath || '') + '.items', data, 'items', rootData)) {\n                                                if (vErrors === null) vErrors = refVal3.errors;\n                                                else vErrors = vErrors.concat(refVal3.errors);\n                                                errors = vErrors.length;\n                                              }\n                                              var valid2 = errors === errs_2;\n                                              valid1 = valid1 || valid2;\n                                            }\n                                            if (!valid1) {\n                                              var err = {\n                                                keyword: 'anyOf',\n                                                dataPath: (dataPath || '') + '.items',\n                                                schemaPath: '#/properties/items/anyOf',\n                                                params: {},\n                                                message: 'should match some schema in anyOf'\n                                              };\n                                              if (vErrors === null) vErrors = [err];\n                                              else vErrors.push(err);\n                                              errors++;\n                                              validate.errors = vErrors;\n                                              return false;\n                                            } else {\n                                              errors = errs__1;\n                                              if (vErrors !== null) {\n                                                if (errs__1) vErrors.length = errs__1;\n                                                else vErrors = null;\n                                              }\n                                            }\n                                            var valid1 = errors === errs_1;\n                                          }\n                                          if (valid1) {\n                                            var data1 = data.maxItems;\n                                            if (data1 === undefined) {\n                                              valid1 = true;\n                                            } else {\n                                              var errs_1 = errors;\n                                              var errs_2 = errors;\n                                              if ((typeof data1 !== \"number\" || (data1 % 1) || data1 !== data1)) {\n                                                validate.errors = [{\n                                                  keyword: 'type',\n                                                  dataPath: (dataPath || '') + '.maxItems',\n                                                  schemaPath: '#/definitions/nonNegativeInteger/type',\n                                                  params: {\n                                                    type: 'integer'\n                                                  },\n                                                  message: 'should be integer'\n                                                }];\n                                                return false;\n                                              }\n                                              if (typeof data1 === \"number\") {\n                                                if (data1 < 0 || data1 !== data1) {\n                                                  validate.errors = [{\n                                                    keyword: 'minimum',\n                                                    dataPath: (dataPath || '') + '.maxItems',\n                                                    schemaPath: '#/definitions/nonNegativeInteger/minimum',\n                                                    params: {\n                                                      comparison: '>=',\n                                                      limit: 0,\n                                                      exclusive: false\n                                                    },\n                                                    message: 'should be >= 0'\n                                                  }];\n                                                  return false;\n                                                }\n                                              }\n                                              var valid2 = errors === errs_2;\n                                              var valid1 = errors === errs_1;\n                                            }\n                                            if (valid1) {\n                                              if (data.minItems === undefined) {\n                                                valid1 = true;\n                                              } else {\n                                                var errs_1 = errors;\n                                                if (!refVal[2](data.minItems, (dataPath || '') + '.minItems', data, 'minItems', rootData)) {\n                                                  if (vErrors === null) vErrors = refVal[2].errors;\n                                                  else vErrors = vErrors.concat(refVal[2].errors);\n                                                  errors = vErrors.length;\n                                                }\n                                                var valid1 = errors === errs_1;\n                                              }\n                                              if (valid1) {\n                                                if (data.uniqueItems === undefined) {\n                                                  valid1 = true;\n                                                } else {\n                                                  var errs_1 = errors;\n                                                  if (typeof data.uniqueItems !== \"boolean\") {\n                                                    validate.errors = [{\n                                                      keyword: 'type',\n                                                      dataPath: (dataPath || '') + '.uniqueItems',\n                                                      schemaPath: '#/properties/uniqueItems/type',\n                                                      params: {\n                                                        type: 'boolean'\n                                                      },\n                                                      message: 'should be boolean'\n                                                    }];\n                                                    return false;\n                                                  }\n                                                  var valid1 = errors === errs_1;\n                                                }\n                                                if (valid1) {\n                                                  if (data.contains === undefined) {\n                                                    valid1 = true;\n                                                  } else {\n                                                    var errs_1 = errors;\n                                                    if (!validate(data.contains, (dataPath || '') + '.contains', data, 'contains', rootData)) {\n                                                      if (vErrors === null) vErrors = validate.errors;\n                                                      else vErrors = vErrors.concat(validate.errors);\n                                                      errors = vErrors.length;\n                                                    }\n                                                    var valid1 = errors === errs_1;\n                                                  }\n                                                  if (valid1) {\n                                                    var data1 = data.maxProperties;\n                                                    if (data1 === undefined) {\n                                                      valid1 = true;\n                                                    } else {\n                                                      var errs_1 = errors;\n                                                      var errs_2 = errors;\n                                                      if ((typeof data1 !== \"number\" || (data1 % 1) || data1 !== data1)) {\n                                                        validate.errors = [{\n                                                          keyword: 'type',\n                                                          dataPath: (dataPath || '') + '.maxProperties',\n                                                          schemaPath: '#/definitions/nonNegativeInteger/type',\n                                                          params: {\n                                                            type: 'integer'\n                                                          },\n                                                          message: 'should be integer'\n                                                        }];\n                                                        return false;\n                                                      }\n                                                      if (typeof data1 === \"number\") {\n                                                        if (data1 < 0 || data1 !== data1) {\n                                                          validate.errors = [{\n                                                            keyword: 'minimum',\n                                                            dataPath: (dataPath || '') + '.maxProperties',\n                                                            schemaPath: '#/definitions/nonNegativeInteger/minimum',\n                                                            params: {\n                                                              comparison: '>=',\n                                                              limit: 0,\n                                                              exclusive: false\n                                                            },\n                                                            message: 'should be >= 0'\n                                                          }];\n                                                          return false;\n                                                        }\n                                                      }\n                                                      var valid2 = errors === errs_2;\n                                                      var valid1 = errors === errs_1;\n                                                    }\n                                                    if (valid1) {\n                                                      if (data.minProperties === undefined) {\n                                                        valid1 = true;\n                                                      } else {\n                                                        var errs_1 = errors;\n                                                        if (!refVal[2](data.minProperties, (dataPath || '') + '.minProperties', data, 'minProperties', rootData)) {\n                                                          if (vErrors === null) vErrors = refVal[2].errors;\n                                                          else vErrors = vErrors.concat(refVal[2].errors);\n                                                          errors = vErrors.length;\n                                                        }\n                                                        var valid1 = errors === errs_1;\n                                                      }\n                                                      if (valid1) {\n                                                        var data1 = data.required;\n                                                        if (data1 === undefined) {\n                                                          valid1 = true;\n                                                        } else {\n                                                          var errs_1 = errors;\n                                                          var errs_2 = errors;\n                                                          if (Array.isArray(data1)) {\n                                                            var errs__2 = errors;\n                                                            var valid2;\n                                                            for (var i2 = 0; i2 < data1.length; i2++) {\n                                                              var errs_3 = errors;\n                                                              if (typeof data1[i2] !== \"string\") {\n                                                                validate.errors = [{\n                                                                  keyword: 'type',\n                                                                  dataPath: (dataPath || '') + '.required[' + i2 + ']',\n                                                                  schemaPath: '#/definitions/stringArray/items/type',\n                                                                  params: {\n                                                                    type: 'string'\n                                                                  },\n                                                                  message: 'should be string'\n                                                                }];\n                                                                return false;\n                                                              }\n                                                              var valid3 = errors === errs_3;\n                                                              if (!valid3) break;\n                                                            }\n                                                            if (errs__2 == errors) {\n                                                              var i = data1.length,\n                                                                valid2 = true,\n                                                                j;\n                                                              if (i > 1) {\n                                                                var itemIndices = {},\n                                                                  item;\n                                                                for (; i--;) {\n                                                                  var item = data1[i];\n                                                                  if (typeof item !== \"string\") continue;\n                                                                  if (typeof itemIndices[item] == 'number') {\n                                                                    valid2 = false;\n                                                                    j = itemIndices[item];\n                                                                    break;\n                                                                  }\n                                                                  itemIndices[item] = i;\n                                                                }\n                                                              }\n                                                              if (!valid2) {\n                                                                validate.errors = [{\n                                                                  keyword: 'uniqueItems',\n                                                                  dataPath: (dataPath || '') + '.required',\n                                                                  schemaPath: '#/definitions/stringArray/uniqueItems',\n                                                                  params: {\n                                                                    i: i,\n                                                                    j: j\n                                                                  },\n                                                                  message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)'\n                                                                }];\n                                                                return false;\n                                                              }\n                                                            }\n                                                          } else {\n                                                            validate.errors = [{\n                                                              keyword: 'type',\n                                                              dataPath: (dataPath || '') + '.required',\n                                                              schemaPath: '#/definitions/stringArray/type',\n                                                              params: {\n                                                                type: 'array'\n                                                              },\n                                                              message: 'should be array'\n                                                            }];\n                                                            return false;\n                                                          }\n                                                          var valid2 = errors === errs_2;\n                                                          var valid1 = errors === errs_1;\n                                                        }\n                                                        if (valid1) {\n                                                          if (data.additionalProperties === undefined) {\n                                                            valid1 = true;\n                                                          } else {\n                                                            var errs_1 = errors;\n                                                            if (!validate(data.additionalProperties, (dataPath || '') + '.additionalProperties', data, 'additionalProperties', rootData)) {\n                                                              if (vErrors === null) vErrors = validate.errors;\n                                                              else vErrors = vErrors.concat(validate.errors);\n                                                              errors = vErrors.length;\n                                                            }\n                                                            var valid1 = errors === errs_1;\n                                                          }\n                                                          if (valid1) {\n                                                            var data1 = data.definitions;\n                                                            if (data1 === undefined) {\n                                                              valid1 = true;\n                                                            } else {\n                                                              var errs_1 = errors;\n                                                              if ((data1 && typeof data1 === \"object\" && !Array.isArray(data1))) {\n                                                                var errs__1 = errors;\n                                                                var valid2 = true;\n                                                                for (var key1 in data1) {\n                                                                  var errs_2 = errors;\n                                                                  if (!validate(data1[key1], (dataPath || '') + '.definitions[\\'' + key1 + '\\']', data1, key1, rootData)) {\n                                                                    if (vErrors === null) vErrors = validate.errors;\n                                                                    else vErrors = vErrors.concat(validate.errors);\n                                                                    errors = vErrors.length;\n                                                                  }\n                                                                  var valid2 = errors === errs_2;\n                                                                  if (!valid2) break;\n                                                                }\n                                                              } else {\n                                                                validate.errors = [{\n                                                                  keyword: 'type',\n                                                                  dataPath: (dataPath || '') + '.definitions',\n                                                                  schemaPath: '#/properties/definitions/type',\n                                                                  params: {\n                                                                    type: 'object'\n                                                                  },\n                                                                  message: 'should be object'\n                                                                }];\n                                                                return false;\n                                                              }\n                                                              var valid1 = errors === errs_1;\n                                                            }\n                                                            if (valid1) {\n                                                              var data1 = data.properties;\n                                                              if (data1 === undefined) {\n                                                                valid1 = true;\n                                                              } else {\n                                                                var errs_1 = errors;\n                                                                if ((data1 && typeof data1 === \"object\" && !Array.isArray(data1))) {\n                                                                  var errs__1 = errors;\n                                                                  var valid2 = true;\n                                                                  for (var key1 in data1) {\n                                                                    var errs_2 = errors;\n                                                                    if (!validate(data1[key1], (dataPath || '') + '.properties[\\'' + key1 + '\\']', data1, key1, rootData)) {\n                                                                      if (vErrors === null) vErrors = validate.errors;\n                                                                      else vErrors = vErrors.concat(validate.errors);\n                                                                      errors = vErrors.length;\n                                                                    }\n                                                                    var valid2 = errors === errs_2;\n                                                                    if (!valid2) break;\n                                                                  }\n                                                                } else {\n                                                                  validate.errors = [{\n                                                                    keyword: 'type',\n                                                                    dataPath: (dataPath || '') + '.properties',\n                                                                    schemaPath: '#/properties/properties/type',\n                                                                    params: {\n                                                                      type: 'object'\n                                                                    },\n                                                                    message: 'should be object'\n                                                                  }];\n                                                                  return false;\n                                                                }\n                                                                var valid1 = errors === errs_1;\n                                                              }\n                                                              if (valid1) {\n                                                                var data1 = data.patternProperties;\n                                                                if (data1 === undefined) {\n                                                                  valid1 = true;\n                                                                } else {\n                                                                  var errs_1 = errors;\n                                                                  if ((data1 && typeof data1 === \"object\" && !Array.isArray(data1))) {\n                                                                    var errs__1 = errors;\n                                                                    for (var key1 in data1) {\n                                                                      var startErrs1 = errors;\n                                                                      var data2 = key1;\n                                                                      var errs_2 = errors;\n                                                                      if (errors === errs_2) {\n                                                                        if (typeof data2 === \"string\") {\n                                                                          if (!formats.regex(data2)) {\n                                                                            var err = {\n                                                                              keyword: 'format',\n                                                                              dataPath: (dataPath || '') + '.patternProperties',\n                                                                              schemaPath: '#/properties/patternProperties/propertyNames/format',\n                                                                              params: {\n                                                                                format: 'regex'\n                                                                              },\n                                                                              message: 'should match format \"regex\"'\n                                                                            };\n                                                                            if (vErrors === null) vErrors = [err];\n                                                                            else vErrors.push(err);\n                                                                            errors++;\n                                                                          }\n                                                                        }\n                                                                      }\n                                                                      var valid2 = errors === errs_2;\n                                                                      if (!valid2) {\n                                                                        for (var i1 = startErrs1; i1 < errors; i1++) {\n                                                                          vErrors[i1].propertyName = key1;\n                                                                        }\n                                                                        var err = {\n                                                                          keyword: 'propertyNames',\n                                                                          dataPath: (dataPath || '') + '.patternProperties',\n                                                                          schemaPath: '#/properties/patternProperties/propertyNames',\n                                                                          params: {\n                                                                            propertyName: '' + key1 + ''\n                                                                          },\n                                                                          message: 'property name \\'' + key1 + '\\' is invalid'\n                                                                        };\n                                                                        if (vErrors === null) vErrors = [err];\n                                                                        else vErrors.push(err);\n                                                                        errors++;\n                                                                        validate.errors = vErrors;\n                                                                        return false;\n                                                                        break;\n                                                                      }\n                                                                    }\n                                                                    if (errs__1 == errors) {\n                                                                      var errs__1 = errors;\n                                                                      var valid2 = true;\n                                                                      for (var key1 in data1) {\n                                                                        var errs_2 = errors;\n                                                                        if (!validate(data1[key1], (dataPath || '') + '.patternProperties[\\'' + key1 + '\\']', data1, key1, rootData)) {\n                                                                          if (vErrors === null) vErrors = validate.errors;\n                                                                          else vErrors = vErrors.concat(validate.errors);\n                                                                          errors = vErrors.length;\n                                                                        }\n                                                                        var valid2 = errors === errs_2;\n                                                                        if (!valid2) break;\n                                                                      }\n                                                                    }\n                                                                  } else {\n                                                                    validate.errors = [{\n                                                                      keyword: 'type',\n                                                                      dataPath: (dataPath || '') + '.patternProperties',\n                                                                      schemaPath: '#/properties/patternProperties/type',\n                                                                      params: {\n                                                                        type: 'object'\n                                                                      },\n                                                                      message: 'should be object'\n                                                                    }];\n                                                                    return false;\n                                                                  }\n                                                                  var valid1 = errors === errs_1;\n                                                                }\n                                                                if (valid1) {\n                                                                  var data1 = data.dependencies;\n                                                                  if (data1 === undefined) {\n                                                                    valid1 = true;\n                                                                  } else {\n                                                                    var errs_1 = errors;\n                                                                    if ((data1 && typeof data1 === \"object\" && !Array.isArray(data1))) {\n                                                                      var errs__1 = errors;\n                                                                      var valid2 = true;\n                                                                      for (var key1 in data1) {\n                                                                        var data2 = data1[key1];\n                                                                        var errs_2 = errors;\n                                                                        var errs__2 = errors;\n                                                                        var valid2 = false;\n                                                                        var errs_3 = errors;\n                                                                        if (!validate(data2, (dataPath || '') + '.dependencies[\\'' + key1 + '\\']', data1, key1, rootData)) {\n                                                                          if (vErrors === null) vErrors = validate.errors;\n                                                                          else vErrors = vErrors.concat(validate.errors);\n                                                                          errors = vErrors.length;\n                                                                        }\n                                                                        var valid3 = errors === errs_3;\n                                                                        valid2 = valid2 || valid3;\n                                                                        if (!valid2) {\n                                                                          var errs_3 = errors;\n                                                                          var errs_4 = errors;\n                                                                          if (Array.isArray(data2)) {\n                                                                            var errs__4 = errors;\n                                                                            var valid4;\n                                                                            for (var i4 = 0; i4 < data2.length; i4++) {\n                                                                              var errs_5 = errors;\n                                                                              if (typeof data2[i4] !== \"string\") {\n                                                                                var err = {\n                                                                                  keyword: 'type',\n                                                                                  dataPath: (dataPath || '') + '.dependencies[\\'' + key1 + '\\'][' + i4 + ']',\n                                                                                  schemaPath: '#/definitions/stringArray/items/type',\n                                                                                  params: {\n                                                                                    type: 'string'\n                                                                                  },\n                                                                                  message: 'should be string'\n                                                                                };\n                                                                                if (vErrors === null) vErrors = [err];\n                                                                                else vErrors.push(err);\n                                                                                errors++;\n                                                                              }\n                                                                              var valid5 = errors === errs_5;\n                                                                              if (!valid5) break;\n                                                                            }\n                                                                            if (errs__4 == errors) {\n                                                                              var i = data2.length,\n                                                                                valid4 = true,\n                                                                                j;\n                                                                              if (i > 1) {\n                                                                                var itemIndices = {},\n                                                                                  item;\n                                                                                for (; i--;) {\n                                                                                  var item = data2[i];\n                                                                                  if (typeof item !== \"string\") continue;\n                                                                                  if (typeof itemIndices[item] == 'number') {\n                                                                                    valid4 = false;\n                                                                                    j = itemIndices[item];\n                                                                                    break;\n                                                                                  }\n                                                                                  itemIndices[item] = i;\n                                                                                }\n                                                                              }\n                                                                              if (!valid4) {\n                                                                                var err = {\n                                                                                  keyword: 'uniqueItems',\n                                                                                  dataPath: (dataPath || '') + '.dependencies[\\'' + key1 + '\\']',\n                                                                                  schemaPath: '#/definitions/stringArray/uniqueItems',\n                                                                                  params: {\n                                                                                    i: i,\n                                                                                    j: j\n                                                                                  },\n                                                                                  message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)'\n                                                                                };\n                                                                                if (vErrors === null) vErrors = [err];\n                                                                                else vErrors.push(err);\n                                                                                errors++;\n                                                                              }\n                                                                            }\n                                                                          } else {\n                                                                            var err = {\n                                                                              keyword: 'type',\n                                                                              dataPath: (dataPath || '') + '.dependencies[\\'' + key1 + '\\']',\n                                                                              schemaPath: '#/definitions/stringArray/type',\n                                                                              params: {\n                                                                                type: 'array'\n                                                                              },\n                                                                              message: 'should be array'\n                                                                            };\n                                                                            if (vErrors === null) vErrors = [err];\n                                                                            else vErrors.push(err);\n                                                                            errors++;\n                                                                          }\n                                                                          var valid4 = errors === errs_4;\n                                                                          var valid3 = errors === errs_3;\n                                                                          valid2 = valid2 || valid3;\n                                                                        }\n                                                                        if (!valid2) {\n                                                                          var err = {\n                                                                            keyword: 'anyOf',\n                                                                            dataPath: (dataPath || '') + '.dependencies[\\'' + key1 + '\\']',\n                                                                            schemaPath: '#/properties/dependencies/additionalProperties/anyOf',\n                                                                            params: {},\n                                                                            message: 'should match some schema in anyOf'\n                                                                          };\n                                                                          if (vErrors === null) vErrors = [err];\n                                                                          else vErrors.push(err);\n                                                                          errors++;\n                                                                          validate.errors = vErrors;\n                                                                          return false;\n                                                                        } else {\n                                                                          errors = errs__2;\n                                                                          if (vErrors !== null) {\n                                                                            if (errs__2) vErrors.length = errs__2;\n                                                                            else vErrors = null;\n                                                                          }\n                                                                        }\n                                                                        var valid2 = errors === errs_2;\n                                                                        if (!valid2) break;\n                                                                      }\n                                                                    } else {\n                                                                      validate.errors = [{\n                                                                        keyword: 'type',\n                                                                        dataPath: (dataPath || '') + '.dependencies',\n                                                                        schemaPath: '#/properties/dependencies/type',\n                                                                        params: {\n                                                                          type: 'object'\n                                                                        },\n                                                                        message: 'should be object'\n                                                                      }];\n                                                                      return false;\n                                                                    }\n                                                                    var valid1 = errors === errs_1;\n                                                                  }\n                                                                  if (valid1) {\n                                                                    if (data.propertyNames === undefined) {\n                                                                      valid1 = true;\n                                                                    } else {\n                                                                      var errs_1 = errors;\n                                                                      if (!validate(data.propertyNames, (dataPath || '') + '.propertyNames', data, 'propertyNames', rootData)) {\n                                                                        if (vErrors === null) vErrors = validate.errors;\n                                                                        else vErrors = vErrors.concat(validate.errors);\n                                                                        errors = vErrors.length;\n                                                                      }\n                                                                      var valid1 = errors === errs_1;\n                                                                    }\n                                                                    if (valid1) {\n                                                                      if (valid1) {\n                                                                        var data1 = data.enum;\n                                                                        if (data1 === undefined) {\n                                                                          valid1 = true;\n                                                                        } else {\n                                                                          var errs_1 = errors;\n                                                                          if (Array.isArray(data1)) {\n                                                                            if (data1.length < 1) {\n                                                                              validate.errors = [{\n                                                                                keyword: 'minItems',\n                                                                                dataPath: (dataPath || '') + '.enum',\n                                                                                schemaPath: '#/properties/enum/minItems',\n                                                                                params: {\n                                                                                  limit: 1\n                                                                                },\n                                                                                message: 'should NOT have fewer than 1 items'\n                                                                              }];\n                                                                              return false;\n                                                                            } else {\n                                                                              var errs__1 = errors;\n                                                                              var valid1;\n                                                                              if (errs__1 == errors) {\n                                                                                var i = data1.length,\n                                                                                  valid1 = true,\n                                                                                  j;\n                                                                                if (i > 1) {\n                                                                                  outer: for (; i--;) {\n                                                                                    for (j = i; j--;) {\n                                                                                      if (equal(data1[i], data1[j])) {\n                                                                                        valid1 = false;\n                                                                                        break outer;\n                                                                                      }\n                                                                                    }\n                                                                                  }\n                                                                                }\n                                                                                if (!valid1) {\n                                                                                  validate.errors = [{\n                                                                                    keyword: 'uniqueItems',\n                                                                                    dataPath: (dataPath || '') + '.enum',\n                                                                                    schemaPath: '#/properties/enum/uniqueItems',\n                                                                                    params: {\n                                                                                      i: i,\n                                                                                      j: j\n                                                                                    },\n                                                                                    message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)'\n                                                                                  }];\n                                                                                  return false;\n                                                                                }\n                                                                              }\n                                                                            }\n                                                                          } else {\n                                                                            validate.errors = [{\n                                                                              keyword: 'type',\n                                                                              dataPath: (dataPath || '') + '.enum',\n                                                                              schemaPath: '#/properties/enum/type',\n                                                                              params: {\n                                                                                type: 'array'\n                                                                              },\n                                                                              message: 'should be array'\n                                                                            }];\n                                                                            return false;\n                                                                          }\n                                                                          var valid1 = errors === errs_1;\n                                                                        }\n                                                                        if (valid1) {\n                                                                          var data1 = data.type;\n                                                                          if (data1 === undefined) {\n                                                                            valid1 = true;\n                                                                          } else {\n                                                                            var errs_1 = errors;\n                                                                            var errs__1 = errors;\n                                                                            var valid1 = false;\n                                                                            var errs_2 = errors;\n                                                                            var errs_3 = errors;\n                                                                            var schema3 = refVal5.enum;\n                                                                            var valid3;\n                                                                            valid3 = false;\n                                                                            for (var i3 = 0; i3 < schema3.length; i3++)\n                                                                              if (equal(data1, schema3[i3])) {\n                                                                                valid3 = true;\n                                                                                break;\n                                                                              } if (!valid3) {\n                                                                              var err = {\n                                                                                keyword: 'enum',\n                                                                                dataPath: (dataPath || '') + '.type',\n                                                                                schemaPath: '#/definitions/simpleTypes/enum',\n                                                                                params: {\n                                                                                  allowedValues: schema3\n                                                                                },\n                                                                                message: 'should be equal to one of the allowed values'\n                                                                              };\n                                                                              if (vErrors === null) vErrors = [err];\n                                                                              else vErrors.push(err);\n                                                                              errors++;\n                                                                            }\n                                                                            var valid3 = errors === errs_3;\n                                                                            var valid2 = errors === errs_2;\n                                                                            valid1 = valid1 || valid2;\n                                                                            if (!valid1) {\n                                                                              var errs_2 = errors;\n                                                                              if (Array.isArray(data1)) {\n                                                                                if (data1.length < 1) {\n                                                                                  var err = {\n                                                                                    keyword: 'minItems',\n                                                                                    dataPath: (dataPath || '') + '.type',\n                                                                                    schemaPath: '#/properties/type/anyOf/1/minItems',\n                                                                                    params: {\n                                                                                      limit: 1\n                                                                                    },\n                                                                                    message: 'should NOT have fewer than 1 items'\n                                                                                  };\n                                                                                  if (vErrors === null) vErrors = [err];\n                                                                                  else vErrors.push(err);\n                                                                                  errors++;\n                                                                                } else {\n                                                                                  var errs__2 = errors;\n                                                                                  var valid2;\n                                                                                  for (var i2 = 0; i2 < data1.length; i2++) {\n                                                                                    var errs_3 = errors;\n                                                                                    var errs_4 = errors;\n                                                                                    var schema4 = refVal[5].enum;\n                                                                                    var valid4;\n                                                                                    valid4 = false;\n                                                                                    for (var i4 = 0; i4 < schema4.length; i4++)\n                                                                                      if (equal(data1[i2], schema4[i4])) {\n                                                                                        valid4 = true;\n                                                                                        break;\n                                                                                      } if (!valid4) {\n                                                                                      var err = {\n                                                                                        keyword: 'enum',\n                                                                                        dataPath: (dataPath || '') + '.type[' + i2 + ']',\n                                                                                        schemaPath: '#/definitions/simpleTypes/enum',\n                                                                                        params: {\n                                                                                          allowedValues: schema4\n                                                                                        },\n                                                                                        message: 'should be equal to one of the allowed values'\n                                                                                      };\n                                                                                      if (vErrors === null) vErrors = [err];\n                                                                                      else vErrors.push(err);\n                                                                                      errors++;\n                                                                                    }\n                                                                                    var valid4 = errors === errs_4;\n                                                                                    var valid3 = errors === errs_3;\n                                                                                    if (!valid3) break;\n                                                                                  }\n                                                                                  if (errs__2 == errors) {\n                                                                                    var i = data1.length,\n                                                                                      valid2 = true,\n                                                                                      j;\n                                                                                    if (i > 1) {\n                                                                                      outer: for (; i--;) {\n                                                                                        for (j = i; j--;) {\n                                                                                          if (equal(data1[i], data1[j])) {\n                                                                                            valid2 = false;\n                                                                                            break outer;\n                                                                                          }\n                                                                                        }\n                                                                                      }\n                                                                                    }\n                                                                                    if (!valid2) {\n                                                                                      var err = {\n                                                                                        keyword: 'uniqueItems',\n                                                                                        dataPath: (dataPath || '') + '.type',\n                                                                                        schemaPath: '#/properties/type/anyOf/1/uniqueItems',\n                                                                                        params: {\n                                                                                          i: i,\n                                                                                          j: j\n                                                                                        },\n                                                                                        message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)'\n                                                                                      };\n                                                                                      if (vErrors === null) vErrors = [err];\n                                                                                      else vErrors.push(err);\n                                                                                      errors++;\n                                                                                    }\n                                                                                  }\n                                                                                }\n                                                                              } else {\n                                                                                var err = {\n                                                                                  keyword: 'type',\n                                                                                  dataPath: (dataPath || '') + '.type',\n                                                                                  schemaPath: '#/properties/type/anyOf/1/type',\n                                                                                  params: {\n                                                                                    type: 'array'\n                                                                                  },\n                                                                                  message: 'should be array'\n                                                                                };\n                                                                                if (vErrors === null) vErrors = [err];\n                                                                                else vErrors.push(err);\n                                                                                errors++;\n                                                                              }\n                                                                              var valid2 = errors === errs_2;\n                                                                              valid1 = valid1 || valid2;\n                                                                            }\n                                                                            if (!valid1) {\n                                                                              var err = {\n                                                                                keyword: 'anyOf',\n                                                                                dataPath: (dataPath || '') + '.type',\n                                                                                schemaPath: '#/properties/type/anyOf',\n                                                                                params: {},\n                                                                                message: 'should match some schema in anyOf'\n                                                                              };\n                                                                              if (vErrors === null) vErrors = [err];\n                                                                              else vErrors.push(err);\n                                                                              errors++;\n                                                                              validate.errors = vErrors;\n                                                                              return false;\n                                                                            } else {\n                                                                              errors = errs__1;\n                                                                              if (vErrors !== null) {\n                                                                                if (errs__1) vErrors.length = errs__1;\n                                                                                else vErrors = null;\n                                                                              }\n                                                                            }\n                                                                            var valid1 = errors === errs_1;\n                                                                          }\n                                                                          if (valid1) {\n                                                                            if (data.format === undefined) {\n                                                                              valid1 = true;\n                                                                            } else {\n                                                                              var errs_1 = errors;\n                                                                              if (typeof data.format !== \"string\") {\n                                                                                validate.errors = [{\n                                                                                  keyword: 'type',\n                                                                                  dataPath: (dataPath || '') + '.format',\n                                                                                  schemaPath: '#/properties/format/type',\n                                                                                  params: {\n                                                                                    type: 'string'\n                                                                                  },\n                                                                                  message: 'should be string'\n                                                                                }];\n                                                                                return false;\n                                                                              }\n                                                                              var valid1 = errors === errs_1;\n                                                                            }\n                                                                            if (valid1) {\n                                                                              if (data.contentMediaType === undefined) {\n                                                                                valid1 = true;\n                                                                              } else {\n                                                                                var errs_1 = errors;\n                                                                                if (typeof data.contentMediaType !== \"string\") {\n                                                                                  validate.errors = [{\n                                                                                    keyword: 'type',\n                                                                                    dataPath: (dataPath || '') + '.contentMediaType',\n                                                                                    schemaPath: '#/properties/contentMediaType/type',\n                                                                                    params: {\n                                                                                      type: 'string'\n                                                                                    },\n                                                                                    message: 'should be string'\n                                                                                  }];\n                                                                                  return false;\n                                                                                }\n                                                                                var valid1 = errors === errs_1;\n                                                                              }\n                                                                              if (valid1) {\n                                                                                if (data.contentEncoding === undefined) {\n                                                                                  valid1 = true;\n                                                                                } else {\n                                                                                  var errs_1 = errors;\n                                                                                  if (typeof data.contentEncoding !== \"string\") {\n                                                                                    validate.errors = [{\n                                                                                      keyword: 'type',\n                                                                                      dataPath: (dataPath || '') + '.contentEncoding',\n                                                                                      schemaPath: '#/properties/contentEncoding/type',\n                                                                                      params: {\n                                                                                        type: 'string'\n                                                                                      },\n                                                                                      message: 'should be string'\n                                                                                    }];\n                                                                                    return false;\n                                                                                  }\n                                                                                  var valid1 = errors === errs_1;\n                                                                                }\n                                                                                if (valid1) {\n                                                                                  if (data.if === undefined) {\n                                                                                    valid1 = true;\n                                                                                  } else {\n                                                                                    var errs_1 = errors;\n                                                                                    if (!validate(data.if, (dataPath || '') + '.if', data, 'if', rootData)) {\n                                                                                      if (vErrors === null) vErrors = validate.errors;\n                                                                                      else vErrors = vErrors.concat(validate.errors);\n                                                                                      errors = vErrors.length;\n                                                                                    }\n                                                                                    var valid1 = errors === errs_1;\n                                                                                  }\n                                                                                  if (valid1) {\n                                                                                    if (data.then === undefined) {\n                                                                                      valid1 = true;\n                                                                                    } else {\n                                                                                      var errs_1 = errors;\n                                                                                      if (!validate(data.then, (dataPath || '') + '.then', data, 'then', rootData)) {\n                                                                                        if (vErrors === null) vErrors = validate.errors;\n                                                                                        else vErrors = vErrors.concat(validate.errors);\n                                                                                        errors = vErrors.length;\n                                                                                      }\n                                                                                      var valid1 = errors === errs_1;\n                                                                                    }\n                                                                                    if (valid1) {\n                                                                                      if (data.else === undefined) {\n                                                                                        valid1 = true;\n                                                                                      } else {\n                                                                                        var errs_1 = errors;\n                                                                                        if (!validate(data.else, (dataPath || '') + '.else', data, 'else', rootData)) {\n                                                                                          if (vErrors === null) vErrors = validate.errors;\n                                                                                          else vErrors = vErrors.concat(validate.errors);\n                                                                                          errors = vErrors.length;\n                                                                                        }\n                                                                                        var valid1 = errors === errs_1;\n                                                                                      }\n                                                                                      if (valid1) {\n                                                                                        if (data.allOf === undefined) {\n                                                                                          valid1 = true;\n                                                                                        } else {\n                                                                                          var errs_1 = errors;\n                                                                                          if (!refVal[3](data.allOf, (dataPath || '') + '.allOf', data, 'allOf', rootData)) {\n                                                                                            if (vErrors === null) vErrors = refVal[3].errors;\n                                                                                            else vErrors = vErrors.concat(refVal[3].errors);\n                                                                                            errors = vErrors.length;\n                                                                                          }\n                                                                                          var valid1 = errors === errs_1;\n                                                                                        }\n                                                                                        if (valid1) {\n                                                                                          if (data.anyOf === undefined) {\n                                                                                            valid1 = true;\n                                                                                          } else {\n                                                                                            var errs_1 = errors;\n                                                                                            if (!refVal[3](data.anyOf, (dataPath || '') + '.anyOf', data, 'anyOf', rootData)) {\n                                                                                              if (vErrors === null) vErrors = refVal[3].errors;\n                                                                                              else vErrors = vErrors.concat(refVal[3].errors);\n                                                                                              errors = vErrors.length;\n                                                                                            }\n                                                                                            var valid1 = errors === errs_1;\n                                                                                          }\n                                                                                          if (valid1) {\n                                                                                            if (data.oneOf === undefined) {\n                                                                                              valid1 = true;\n                                                                                            } else {\n                                                                                              var errs_1 = errors;\n                                                                                              if (!refVal[3](data.oneOf, (dataPath || '') + '.oneOf', data, 'oneOf', rootData)) {\n                                                                                                if (vErrors === null) vErrors = refVal[3].errors;\n                                                                                                else vErrors = vErrors.concat(refVal[3].errors);\n                                                                                                errors = vErrors.length;\n                                                                                              }\n                                                                                              var valid1 = errors === errs_1;\n                                                                                            }\n                                                                                            if (valid1) {\n                                                                                              if (data.not === undefined) {\n                                                                                                valid1 = true;\n                                                                                              } else {\n                                                                                                var errs_1 = errors;\n                                                                                                if (!validate(data.not, (dataPath || '') + '.not', data, 'not', rootData)) {\n                                                                                                  if (vErrors === null) vErrors = validate.errors;\n                                                                                                  else vErrors = vErrors.concat(validate.errors);\n                                                                                                  errors = vErrors.length;\n                                                                                                }\n                                                                                                var valid1 = errors === errs_1;\n                                                                                              }\n                                                                                            }\n                                                                                          }\n                                                                                        }\n                                                                                      }\n                                                                                    }\n                                                                                  }\n                                                                                }\n                                                                              }\n                                                                            }\n                                                                          }\n                                                                        }\n                                                                      }\n                                                                    }\n                                                                  }\n                                                                }\n                                                              }\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    validate.errors = vErrors;\n    return errors === 0;\n  };\n})();\nvalidate.schema = {\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Core schema meta-schema\",\n  \"definitions\": {\n    \"schemaArray\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"items\": {\n        \"$ref\": \"#\"\n      }\n    },\n    \"nonNegativeInteger\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"nonNegativeIntegerDefault0\": {\n      \"allOf\": [{\n        \"$ref\": \"#/definitions/nonNegativeInteger\"\n      }, {\n        \"default\": 0\n      }]\n    },\n    \"simpleTypes\": {\n      \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n    },\n    \"stringArray\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"uniqueItems\": true,\n      \"default\": []\n    }\n  },\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"$id\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$schema\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"$ref\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$comment\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"default\": true,\n    \"readOnly\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"examples\": {\n      \"type\": \"array\",\n      \"items\": true\n    },\n    \"multipleOf\": {\n      \"type\": \"number\",\n      \"exclusiveMinimum\": 0\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMaximum\": {\n      \"type\": \"number\"\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMinimum\": {\n      \"type\": \"number\"\n    },\n    \"maxLength\": {\n      \"$ref\": \"#/definitions/nonNegativeInteger\"\n    },\n    \"minLength\": {\n      \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"\n    },\n    \"pattern\": {\n      \"type\": \"string\",\n      \"format\": \"regex\"\n    },\n    \"additionalItems\": {\n      \"$ref\": \"#\"\n    },\n    \"items\": {\n      \"anyOf\": [{\n        \"$ref\": \"#\"\n      }, {\n        \"$ref\": \"#/definitions/schemaArray\"\n      }],\n      \"default\": true\n    },\n    \"maxItems\": {\n      \"$ref\": \"#/definitions/nonNegativeInteger\"\n    },\n    \"minItems\": {\n      \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"\n    },\n    \"uniqueItems\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"contains\": {\n      \"$ref\": \"#\"\n    },\n    \"maxProperties\": {\n      \"$ref\": \"#/definitions/nonNegativeInteger\"\n    },\n    \"minProperties\": {\n      \"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"\n    },\n    \"required\": {\n      \"$ref\": \"#/definitions/stringArray\"\n    },\n    \"additionalProperties\": {\n      \"$ref\": \"#\"\n    },\n    \"definitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#\"\n      },\n      \"default\": {}\n    },\n    \"properties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#\"\n      },\n      \"default\": {}\n    },\n    \"patternProperties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#\"\n      },\n      \"propertyNames\": {\n        \"format\": \"regex\"\n      },\n      \"default\": {}\n    },\n    \"dependencies\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"anyOf\": [{\n          \"$ref\": \"#\"\n        }, {\n          \"$ref\": \"#/definitions/stringArray\"\n        }]\n      }\n    },\n    \"propertyNames\": {\n      \"$ref\": \"#\"\n    },\n    \"const\": true,\n    \"enum\": {\n      \"type\": \"array\",\n      \"items\": true,\n      \"minItems\": 1,\n      \"uniqueItems\": true\n    },\n    \"type\": {\n      \"anyOf\": [{\n        \"$ref\": \"#/definitions/simpleTypes\"\n      }, {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/definitions/simpleTypes\"\n        },\n        \"minItems\": 1,\n        \"uniqueItems\": true\n      }]\n    },\n    \"format\": {\n      \"type\": \"string\"\n    },\n    \"contentMediaType\": {\n      \"type\": \"string\"\n    },\n    \"contentEncoding\": {\n      \"type\": \"string\"\n    },\n    \"if\": {\n      \"$ref\": \"#\"\n    },\n    \"then\": {\n      \"$ref\": \"#\"\n    },\n    \"else\": {\n      \"$ref\": \"#\"\n    },\n    \"allOf\": {\n      \"$ref\": \"#/definitions/schemaArray\"\n    },\n    \"anyOf\": {\n      \"$ref\": \"#/definitions/schemaArray\"\n    },\n    \"oneOf\": {\n      \"$ref\": \"#/definitions/schemaArray\"\n    },\n    \"not\": {\n      \"$ref\": \"#\"\n    }\n  },\n  \"default\": true\n};\nvalidate.errors = null;\nmodule.exports = validate;\n","'use strict'\n\nconst validator = require('./lib/validator')\nconst parse = require('./lib/parse')\nconst redactor = require('./lib/redactor')\nconst restorer = require('./lib/restorer')\nconst { groupRedact, nestedRedact } = require('./lib/modifiers')\nconst state = require('./lib/state')\nconst rx = require('./lib/rx')\nconst validate = validator()\nconst noop = (o) => o\nnoop.restore = noop\n\nconst DEFAULT_CENSOR = '[REDACTED]'\nfastRedact.rx = rx\nfastRedact.validator = validator\n\nmodule.exports = fastRedact\n\nfunction fastRedact (opts = {}) {\n  const paths = Array.from(new Set(opts.paths || []))\n  const serialize = 'serialize' in opts ? (\n    opts.serialize === false ? opts.serialize\n      : (typeof opts.serialize === 'function' ? opts.serialize : JSON.stringify)\n  ) : JSON.stringify\n  const remove = opts.remove\n  if (remove === true && serialize !== JSON.stringify) {\n    throw Error('fast-redact – remove option may only be set when serializer is JSON.stringify')\n  }\n  const censor = remove === true\n    ? undefined\n    : 'censor' in opts ? opts.censor : DEFAULT_CENSOR\n\n  const isCensorFct = typeof censor === 'function'\n  const censorFctTakesPath = isCensorFct && censor.length > 1\n\n  if (paths.length === 0) return serialize || noop\n\n  validate({ paths, serialize, censor })\n\n  const { wildcards, wcLen, secret } = parse({ paths, censor })\n\n  const compileRestore = restorer({ secret, wcLen })\n  const strict = 'strict' in opts ? opts.strict : true\n\n  return redactor({ secret, wcLen, serialize, strict, isCensorFct, censorFctTakesPath }, state({\n    secret,\n    censor,\n    compileRestore,\n    serialize,\n    groupRedact,\n    nestedRedact,\n    wildcards,\n    wcLen\n  }))\n}\n","'use strict'\n\nmodule.exports = {\n  groupRedact,\n  groupRestore,\n  nestedRedact,\n  nestedRestore\n}\n\nfunction groupRestore ({ keys, values, target }) {\n  if (target == null) return\n  const length = keys.length\n  for (var i = 0; i < length; i++) {\n    const k = keys[i]\n    target[k] = values[i]\n  }\n}\n\nfunction groupRedact (o, path, censor, isCensorFct, censorFctTakesPath) {\n  const target = get(o, path)\n  if (target == null) return { keys: null, values: null, target: null, flat: true }\n  const keys = Object.keys(target)\n  const keysLength = keys.length\n  const pathLength = path.length\n  const pathWithKey = censorFctTakesPath ? [...path] : undefined\n  const values = new Array(keysLength)\n\n  for (var i = 0; i < keysLength; i++) {\n    const key = keys[i]\n    values[i] = target[key]\n\n    if (censorFctTakesPath) {\n      pathWithKey[pathLength] = key\n      target[key] = censor(target[key], pathWithKey)\n    } else if (isCensorFct) {\n      target[key] = censor(target[key])\n    } else {\n      target[key] = censor\n    }\n  }\n  return { keys, values, target, flat: true }\n}\n\nfunction nestedRestore (arr) {\n  const length = arr.length\n  for (var i = 0; i < length; i++) {\n    const { key, target, value } = arr[i]\n    target[key] = value\n  }\n}\n\nfunction nestedRedact (store, o, path, ns, censor, isCensorFct, censorFctTakesPath) {\n  const target = get(o, path)\n  if (target == null) return\n  const keys = Object.keys(target)\n  const keysLength = keys.length\n  for (var i = 0; i < keysLength; i++) {\n    const key = keys[i]\n    const { value, parent, exists } =\n      specialSet(target, key, path, ns, censor, isCensorFct, censorFctTakesPath)\n\n    if (exists === true && parent !== null) {\n      store.push({ key: ns[ns.length - 1], target: parent, value })\n    }\n  }\n  return store\n}\n\nfunction has (obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop)\n}\n\nfunction specialSet (o, k, path, afterPath, censor, isCensorFct, censorFctTakesPath) {\n  const afterPathLen = afterPath.length\n  const lastPathIndex = afterPathLen - 1\n  const originalKey = k\n  var i = -1\n  var n\n  var nv\n  var ov\n  var oov = null\n  var exists = true\n  ov = n = o[k]\n  if (typeof n !== 'object') return { value: null, parent: null, exists }\n  while (n != null && ++i < afterPathLen) {\n    k = afterPath[i]\n    oov = ov\n    if (!(k in n)) {\n      exists = false\n      break\n    }\n    ov = n[k]\n    nv = (i !== lastPathIndex)\n      ? ov\n      : (isCensorFct\n        ? (censorFctTakesPath ? censor(ov, [...path, originalKey, ...afterPath]) : censor(ov))\n        : censor)\n    n[k] = (has(n, k) && nv === ov) || (nv === undefined && censor !== undefined) ? n[k] : nv\n    n = n[k]\n    if (typeof n !== 'object') break\n  }\n  return { value: ov, parent: oov, exists }\n}\n\nfunction get (o, p) {\n  var i = -1\n  var l = p.length\n  var n = o\n  while (n != null && ++i < l) {\n    n = n[p[i]]\n  }\n  return n\n}\n","'use strict'\n\nconst rx = require('./rx')\n\nmodule.exports = parse\n\nfunction parse ({ paths }) {\n  const wildcards = []\n  var wcLen = 0\n  const secret = paths.reduce(function (o, strPath, ix) {\n    var path = strPath.match(rx).map((p) => p.replace(/'|\"|`/g, ''))\n    const leadingBracket = strPath[0] === '['\n    path = path.map((p) => {\n      if (p[0] === '[') return p.substr(1, p.length - 2)\n      else return p\n    })\n    const star = path.indexOf('*')\n    if (star > -1) {\n      const before = path.slice(0, star)\n      const beforeStr = before.join('.')\n      const after = path.slice(star + 1, path.length)\n      if (after.indexOf('*') > -1) throw Error('fast-redact – Only one wildcard per path is supported')\n      const nested = after.length > 0\n      wcLen++\n      wildcards.push({\n        before,\n        beforeStr,\n        after,\n        nested\n      })\n    } else {\n      o[strPath] = {\n        path: path,\n        val: undefined,\n        precensored: false,\n        circle: '',\n        escPath: JSON.stringify(strPath),\n        leadingBracket: leadingBracket\n      }\n    }\n    return o\n  }, {})\n\n  return { wildcards, wcLen, secret }\n}\n","'use strict'\n\nconst rx = require('./rx')\n\nmodule.exports = redactor\n\nfunction redactor ({ secret, serialize, wcLen, strict, isCensorFct, censorFctTakesPath }, state) {\n  /* eslint-disable-next-line */\n  const redact = Function('o', `\n    if (typeof o !== 'object' || o == null) {\n      ${strictImpl(strict, serialize)}\n    }\n    const { censor, secret } = this\n    ${redactTmpl(secret, isCensorFct, censorFctTakesPath)}\n    this.compileRestore()\n    ${dynamicRedactTmpl(wcLen > 0, isCensorFct, censorFctTakesPath)}\n    ${resultTmpl(serialize)}\n  `).bind(state)\n\n  if (serialize === false) {\n    redact.restore = (o) => state.restore(o)\n  }\n\n  return redact\n}\n\nfunction redactTmpl (secret, isCensorFct, censorFctTakesPath) {\n  return Object.keys(secret).map((path) => {\n    const { escPath, leadingBracket, path: arrPath } = secret[path]\n    const skip = leadingBracket ? 1 : 0\n    const delim = leadingBracket ? '' : '.'\n    const hops = []\n    var match\n    while ((match = rx.exec(path)) !== null) {\n      const [ , ix ] = match\n      const { index, input } = match\n      if (index > skip) hops.push(input.substring(0, index - (ix ? 0 : 1)))\n    }\n    var existence = hops.map((p) => `o${delim}${p}`).join(' && ')\n    if (existence.length === 0) existence += `o${delim}${path} != null`\n    else existence += ` && o${delim}${path} != null`\n\n    const circularDetection = `\n      switch (true) {\n        ${hops.reverse().map((p) => `\n          case o${delim}${p} === censor:\n            secret[${escPath}].circle = ${JSON.stringify(p)}\n            break\n        `).join('\\n')}\n      }\n    `\n\n    const censorArgs = censorFctTakesPath\n      ? `val, ${JSON.stringify(arrPath)}`\n      : `val`\n\n    return `\n      if (${existence}) {\n        const val = o${delim}${path}\n        if (val === censor) {\n          secret[${escPath}].precensored = true\n        } else {\n          secret[${escPath}].val = val\n          o${delim}${path} = ${isCensorFct ? `censor(${censorArgs})` : 'censor'}\n          ${circularDetection}\n        }\n      }\n    `\n  }).join('\\n')\n}\n\nfunction dynamicRedactTmpl (hasWildcards, isCensorFct, censorFctTakesPath) {\n  return hasWildcards === true ? `\n    {\n      const { wildcards, wcLen, groupRedact, nestedRedact } = this\n      for (var i = 0; i < wcLen; i++) {\n        const { before, beforeStr, after, nested } = wildcards[i]\n        if (nested === true) {\n          secret[beforeStr] = secret[beforeStr] || []\n          nestedRedact(secret[beforeStr], o, before, after, censor, ${isCensorFct}, ${censorFctTakesPath})\n        } else secret[beforeStr] = groupRedact(o, before, censor, ${isCensorFct}, ${censorFctTakesPath})\n      }\n    }\n  ` : ''\n}\n\nfunction resultTmpl (serialize) {\n  return serialize === false ? `return o` : `\n    var s = this.serialize(o)\n    this.restore(o)\n    return s\n  `\n}\n\nfunction strictImpl (strict, serialize) {\n  return strict === true\n    ? `throw Error('fast-redact: primitives cannot be redacted')`\n    : serialize === false ? `return o` : `return this.serialize(o)`\n}\n","'use strict'\n\nconst { groupRestore, nestedRestore } = require('./modifiers')\n\nmodule.exports = restorer\n\nfunction restorer ({ secret, wcLen }) {\n  return function compileRestore () {\n    if (this.restore) return\n    const paths = Object.keys(secret)\n    const resetters = resetTmpl(secret, paths)\n    const hasWildcards = wcLen > 0\n    const state = hasWildcards ? { secret, groupRestore, nestedRestore } : { secret }\n    /* eslint-disable-next-line */\n    this.restore = Function(\n      'o',\n      restoreTmpl(resetters, paths, hasWildcards)\n    ).bind(state)\n  }\n}\n\n/**\n * Mutates the original object to be censored by restoring its original values\n * prior to censoring.\n *\n * @param {object} secret Compiled object describing which target fields should\n * be censored and the field states.\n * @param {string[]} paths The list of paths to censor as provided at\n * initialization time.\n *\n * @returns {string} String of JavaScript to be used by `Function()`. The\n * string compiles to the function that does the work in the description.\n */\nfunction resetTmpl (secret, paths) {\n  return paths.map((path) => {\n    const { circle, escPath, leadingBracket } = secret[path]\n    const delim = leadingBracket ? '' : '.'\n    const reset = circle\n      ? `o.${circle} = secret[${escPath}].val`\n      : `o${delim}${path} = secret[${escPath}].val`\n    const clear = `secret[${escPath}].val = undefined`\n    return `\n      if (secret[${escPath}].val !== undefined) {\n        try { ${reset} } catch (e) {}\n        ${clear}\n      }\n    `\n  }).join('')\n}\n\n/**\n * Creates the body of the restore function\n *\n * Restoration of the redacted object happens\n * backwards, in reverse order of redactions,\n * so that repeated redactions on the same object\n * property can be eventually rolled back to the\n * original value.\n *\n * This way dynamic redactions are restored first,\n * starting from the last one working backwards and\n * followed by the static ones.\n *\n * @returns {string} the body of the restore function\n */\nfunction restoreTmpl (resetters, paths, hasWildcards) {\n  const dynamicReset = hasWildcards === true ? `\n    const keys = Object.keys(secret)\n    const len = keys.length\n    for (var i = len - 1; i >= ${paths.length}; i--) {\n      const k = keys[i]\n      const o = secret[k]\n      if (o.flat === true) this.groupRestore(o)\n      else this.nestedRestore(o)\n      secret[k] = null\n    }\n  ` : ''\n\n  return `\n    const secret = this.secret\n    ${dynamicReset}\n    ${resetters}\n    return o\n  `\n}\n","'use strict'\n\nmodule.exports = /[^.[\\]]+|\\[((?:.)*?)\\]/g\n\n/*\nRegular expression explanation:\n\nAlt 1: /[^.[\\]]+/ - Match one or more characters that are *not* a dot (.)\n                    opening square bracket ([) or closing square bracket (])\n\nAlt 2: /\\[((?:.)*?)\\]/ - If the char IS dot or square bracket, then create a capture\n                         group (which will be capture group $1) that matches anything\n                         within square brackets. Expansion is lazy so it will\n                         stop matching as soon as the first closing bracket is met `]`\n                         (rather than continuing to match until the final closing bracket).\n*/\n","'use strict'\n\nmodule.exports = state\n\nfunction state (o) {\n  const {\n    secret,\n    censor,\n    compileRestore,\n    serialize,\n    groupRedact,\n    nestedRedact,\n    wildcards,\n    wcLen\n  } = o\n  const builder = [{ secret, censor, compileRestore }]\n  if (serialize !== false) builder.push({ serialize })\n  if (wcLen > 0) builder.push({ groupRedact, nestedRedact, wildcards, wcLen })\n  return Object.assign(...builder)\n}\n","'use strict'\n\nconst { createContext, runInContext } = require('vm')\n\nmodule.exports = validator\n\nfunction validator (opts = {}) {\n  const {\n    ERR_PATHS_MUST_BE_STRINGS = () => 'fast-redact - Paths must be (non-empty) strings',\n    ERR_INVALID_PATH = (s) => `fast-redact – Invalid path (${s})`\n  } = opts\n\n  return function validate ({ paths }) {\n    paths.forEach((s) => {\n      if (typeof s !== 'string') {\n        throw Error(ERR_PATHS_MUST_BE_STRINGS())\n      }\n      try {\n        if (/〇/.test(s)) throw Error()\n        const proxy = new Proxy({}, { get: () => proxy, set: () => { throw Error() } })\n        const expr = (s[0] === '[' ? '' : '.') + s.replace(/^\\*/, '〇').replace(/\\.\\*/g, '.〇').replace(/\\[\\*\\]/g, '[〇]')\n        if (/\\n|\\r|;/.test(expr)) throw Error()\n        if (/\\/\\*/.test(expr)) throw Error()\n        runInContext(`\n          (function () {\n            'use strict'\n            o${expr}\n            if ([o${expr}].length !== 1) throw Error()\n          })()\n        `, createContext({ o: proxy, 〇: null }), {\n          codeGeneration: { strings: false, wasm: false }\n        })\n      } catch (e) {\n        throw Error(ERR_INVALID_PATH(s))\n      }\n    })\n  }\n}\n","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","'use strict'\n\n// You may be tempted to copy and paste this, \n// but take a look at the commit history first,\n// this is a moving target so relying on the module\n// is the best way to make sure the optimization\n// method is kept up to date and compatible with\n// every Node version.\n\nfunction flatstr (s) {\n  s | 0\n  return s\n}\n\nmodule.exports = flatstr","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","'use strict'\n\nconst https = require('https')\nconst http = require('http')\nconst { URL } = require('url')\n\nclass HttpProxyAgent extends http.Agent {\n  constructor (options) {\n    const { proxy, ...opts } = options\n    super(opts)\n    this.proxy = typeof proxy === 'string'\n      ? new URL(proxy)\n      : proxy\n  }\n\n  createConnection (options, callback) {\n    const requestOptions = {\n      method: 'CONNECT',\n      host: this.proxy.hostname,\n      port: this.proxy.port,\n      path: `${options.host}:${options.port}`,\n      setHost: false,\n      headers: { connection: this.keepAlive ? 'keep-alive' : 'close', host: `${options.host}:${options.port}` },\n      agent: false\n    }\n\n    if (this.proxy.username || this.proxy.password) {\n      const base64 = Buffer.from(`${this.proxy.username || ''}:${this.proxy.password || ''}`).toString('base64')\n      requestOptions.headers['proxy-authorization'] = `Basic ${base64}`\n    }\n\n    const request = (this.proxy.protocol === 'http:' ? http : https).request(requestOptions)\n    request.once('connect', (response, socket, head) => {\n      request.removeAllListeners()\n      socket.removeAllListeners()\n      if (response.statusCode === 200) {\n        callback(null, socket)\n      } else {\n        callback(new Error(`Bad response: ${response.statusCode}`), null)\n      }\n    })\n\n    request.once('error', err => {\n      request.removeAllListeners()\n      callback(err, null)\n    })\n\n    request.end()\n  }\n}\n\nclass HttpsProxyAgent extends https.Agent {\n  constructor (options) {\n    const { proxy, ...opts } = options\n    super(opts)\n    this.proxy = typeof proxy === 'string'\n      ? new URL(proxy)\n      : proxy\n  }\n\n  createConnection (options, callback) {\n    const requestOptions = {\n      method: 'CONNECT',\n      host: this.proxy.hostname,\n      port: this.proxy.port,\n      path: `${options.host}:${options.port}`,\n      setHost: false,\n      headers: { connection: this.keepAlive ? 'keep-alive' : 'close', host: `${options.host}:${options.port}` },\n      agent: false\n    }\n\n    if (this.proxy.username || this.proxy.password) {\n      const base64 = Buffer.from(`${this.proxy.username || ''}:${this.proxy.password || ''}`).toString('base64')\n      requestOptions.headers['proxy-authorization'] = `Basic ${base64}`\n    }\n\n    const request = (this.proxy.protocol === 'http:' ? http : https).request(requestOptions)\n    request.once('connect', (response, socket, head) => {\n      request.removeAllListeners()\n      socket.removeAllListeners()\n      if (response.statusCode === 200) {\n        const secureSocket = super.createConnection({ ...options, socket })\n        callback(null, secureSocket)\n      } else {\n        callback(new Error(`Bad response: ${response.statusCode}`), null)\n      }\n    })\n\n    request.once('error', err => {\n      request.removeAllListeners()\n      callback(err, null)\n    })\n\n    request.end()\n  }\n}\n\nmodule.exports = {\n  HttpProxyAgent,\n  HttpsProxyAgent\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","'use strict'\n\nconst errSerializer = require('./lib/err')\nconst reqSerializers = require('./lib/req')\nconst resSerializers = require('./lib/res')\n\nmodule.exports = {\n  err: errSerializer,\n  mapHttpRequest: reqSerializers.mapHttpRequest,\n  mapHttpResponse: resSerializers.mapHttpResponse,\n  req: reqSerializers.reqSerializer,\n  res: resSerializers.resSerializer,\n\n  wrapErrorSerializer: function wrapErrorSerializer (customSerializer) {\n    if (customSerializer === errSerializer) return customSerializer\n    return function wrapErrSerializer (err) {\n      return customSerializer(errSerializer(err))\n    }\n  },\n\n  wrapRequestSerializer: function wrapRequestSerializer (customSerializer) {\n    if (customSerializer === reqSerializers.reqSerializer) return customSerializer\n    return function wrappedReqSerializer (req) {\n      return customSerializer(reqSerializers.reqSerializer(req))\n    }\n  },\n\n  wrapResponseSerializer: function wrapResponseSerializer (customSerializer) {\n    if (customSerializer === resSerializers.resSerializer) return customSerializer\n    return function wrappedResSerializer (res) {\n      return customSerializer(resSerializers.resSerializer(res))\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = errSerializer\n\nconst { toString } = Object.prototype\nconst seen = Symbol('circular-ref-tag')\nconst rawSymbol = Symbol('pino-raw-err-ref')\nconst pinoErrProto = Object.create({}, {\n  type: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  message: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  stack: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoErrProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nfunction errSerializer (err) {\n  if (!(err instanceof Error)) {\n    return err\n  }\n\n  err[seen] = undefined // tag to prevent re-looking at this\n  const _err = Object.create(pinoErrProto)\n  _err.type = toString.call(err.constructor) === '[object Function]'\n    ? err.constructor.name\n    : err.name\n  _err.message = err.message\n  _err.stack = err.stack\n  for (const key in err) {\n    if (_err[key] === undefined) {\n      const val = err[key]\n      if (val instanceof Error) {\n        /* eslint-disable no-prototype-builtins */\n        if (!val.hasOwnProperty(seen)) {\n          _err[key] = errSerializer(val)\n        }\n      } else {\n        _err[key] = val\n      }\n    }\n  }\n\n  delete err[seen] // clean up tag in case err is serialized again later\n  _err.raw = err\n  return _err\n}\n","'use strict'\n\nmodule.exports = {\n  mapHttpRequest,\n  reqSerializer\n}\n\nconst rawSymbol = Symbol('pino-raw-req-ref')\nconst pinoReqProto = Object.create({}, {\n  id: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  method: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  url: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  query: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  params: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  headers: {\n    enumerable: true,\n    writable: true,\n    value: {}\n  },\n  remoteAddress: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  remotePort: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoReqProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nfunction reqSerializer (req) {\n  // req.info is for hapi compat.\n  const connection = req.info || req.socket\n  const _req = Object.create(pinoReqProto)\n  _req.id = (typeof req.id === 'function' ? req.id() : (req.id || (req.info ? req.info.id : undefined)))\n  _req.method = req.method\n  // req.originalUrl is for expressjs compat.\n  if (req.originalUrl) {\n    _req.url = req.originalUrl\n    _req.query = req.query\n    _req.params = req.params\n  } else {\n    // req.url.path is  for hapi compat.\n    _req.url = req.path || (req.url ? (req.url.path || req.url) : undefined)\n  }\n  _req.headers = req.headers\n  _req.remoteAddress = connection && connection.remoteAddress\n  _req.remotePort = connection && connection.remotePort\n  // req.raw is  for hapi compat/equivalence\n  _req.raw = req.raw || req\n  return _req\n}\n\nfunction mapHttpRequest (req) {\n  return {\n    req: reqSerializer(req)\n  }\n}\n","'use strict'\n\nmodule.exports = {\n  mapHttpResponse,\n  resSerializer\n}\n\nconst rawSymbol = Symbol('pino-raw-res-ref')\nconst pinoResProto = Object.create({}, {\n  statusCode: {\n    enumerable: true,\n    writable: true,\n    value: 0\n  },\n  headers: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoResProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nfunction resSerializer (res) {\n  const _res = Object.create(pinoResProto)\n  _res.statusCode = res.statusCode\n  _res.headers = res.getHeaders ? res.getHeaders() : res._headers\n  _res.raw = res\n  return _res\n}\n\nfunction mapHttpResponse (res) {\n  return {\n    res: resSerializer(res)\n  }\n}\n","'use strict'\n\nconst warning = require('process-warning')()\nmodule.exports = warning\n\nconst warnName = 'PinoWarning'\n\nwarning.create(warnName, 'PINODEP004', 'bindings.serializers is deprecated, use options.serializers option instead')\n\nwarning.create(warnName, 'PINODEP005', 'bindings.formatters is deprecated, use options.formatters option instead')\n\nwarning.create(warnName, 'PINODEP006', 'bindings.customLevels is deprecated, use options.customLevels option instead')\n\nwarning.create(warnName, 'PINODEP007', 'bindings.level is deprecated, use options.level option instead')\n","'use strict'\n/* eslint no-prototype-builtins: 0 */\nconst flatstr = require('flatstr')\nconst {\n  lsCacheSym,\n  levelValSym,\n  useOnlyCustomLevelsSym,\n  streamSym,\n  formattersSym,\n  hooksSym\n} = require('./symbols')\nconst { noop, genLog } = require('./tools')\n\nconst levels = {\n  trace: 10,\n  debug: 20,\n  info: 30,\n  warn: 40,\n  error: 50,\n  fatal: 60\n}\nconst levelMethods = {\n  fatal: (hook) => {\n    const logFatal = genLog(levels.fatal, hook)\n    return function (...args) {\n      const stream = this[streamSym]\n      logFatal.call(this, ...args)\n      if (typeof stream.flushSync === 'function') {\n        try {\n          stream.flushSync()\n        } catch (e) {\n          // https://github.com/pinojs/pino/pull/740#discussion_r346788313\n        }\n      }\n    }\n  },\n  error: (hook) => genLog(levels.error, hook),\n  warn: (hook) => genLog(levels.warn, hook),\n  info: (hook) => genLog(levels.info, hook),\n  debug: (hook) => genLog(levels.debug, hook),\n  trace: (hook) => genLog(levels.trace, hook)\n}\n\nconst nums = Object.keys(levels).reduce((o, k) => {\n  o[levels[k]] = k\n  return o\n}, {})\n\nconst initialLsCache = Object.keys(nums).reduce((o, k) => {\n  o[k] = flatstr('{\"level\":' + Number(k))\n  return o\n}, {})\n\nfunction genLsCache (instance) {\n  const formatter = instance[formattersSym].level\n  const { labels } = instance.levels\n  const cache = {}\n  for (const label in labels) {\n    const level = formatter(labels[label], Number(label))\n    cache[label] = JSON.stringify(level).slice(0, -1)\n  }\n  instance[lsCacheSym] = cache\n  return instance\n}\n\nfunction isStandardLevel (level, useOnlyCustomLevels) {\n  if (useOnlyCustomLevels) {\n    return false\n  }\n\n  switch (level) {\n    case 'fatal':\n    case 'error':\n    case 'warn':\n    case 'info':\n    case 'debug':\n    case 'trace':\n      return true\n    default:\n      return false\n  }\n}\n\nfunction setLevel (level) {\n  const { labels, values } = this.levels\n  if (typeof level === 'number') {\n    if (labels[level] === undefined) throw Error('unknown level value' + level)\n    level = labels[level]\n  }\n  if (values[level] === undefined) throw Error('unknown level ' + level)\n  const preLevelVal = this[levelValSym]\n  const levelVal = this[levelValSym] = values[level]\n  const useOnlyCustomLevelsVal = this[useOnlyCustomLevelsSym]\n  const hook = this[hooksSym].logMethod\n\n  for (const key in values) {\n    if (levelVal > values[key]) {\n      this[key] = noop\n      continue\n    }\n    this[key] = isStandardLevel(key, useOnlyCustomLevelsVal) ? levelMethods[key](hook) : genLog(values[key], hook)\n  }\n\n  this.emit(\n    'level-change',\n    level,\n    levelVal,\n    labels[preLevelVal],\n    preLevelVal\n  )\n}\n\nfunction getLevel (level) {\n  const { levels, levelVal } = this\n  // protection against potential loss of Pino scope from serializers (edge case with circular refs - https://github.com/pinojs/pino/issues/833)\n  return (levels && levels.labels) ? levels.labels[levelVal] : ''\n}\n\nfunction isLevelEnabled (logLevel) {\n  const { values } = this.levels\n  const logLevelVal = values[logLevel]\n  return logLevelVal !== undefined && (logLevelVal >= this[levelValSym])\n}\n\nfunction mappings (customLevels = null, useOnlyCustomLevels = false) {\n  const customNums = customLevels\n    /* eslint-disable */\n    ? Object.keys(customLevels).reduce((o, k) => {\n        o[customLevels[k]] = k\n        return o\n      }, {})\n    : null\n    /* eslint-enable */\n\n  const labels = Object.assign(\n    Object.create(Object.prototype, { Infinity: { value: 'silent' } }),\n    useOnlyCustomLevels ? null : nums,\n    customNums\n  )\n  const values = Object.assign(\n    Object.create(Object.prototype, { silent: { value: Infinity } }),\n    useOnlyCustomLevels ? null : levels,\n    customLevels\n  )\n  return { labels, values }\n}\n\nfunction assertDefaultLevelFound (defaultLevel, customLevels, useOnlyCustomLevels) {\n  if (typeof defaultLevel === 'number') {\n    const values = [].concat(\n      Object.keys(customLevels || {}).map(key => customLevels[key]),\n      useOnlyCustomLevels ? [] : Object.keys(nums).map(level => +level),\n      Infinity\n    )\n    if (!values.includes(defaultLevel)) {\n      throw Error(`default level:${defaultLevel} must be included in custom levels`)\n    }\n    return\n  }\n\n  const labels = Object.assign(\n    Object.create(Object.prototype, { silent: { value: Infinity } }),\n    useOnlyCustomLevels ? null : levels,\n    customLevels\n  )\n  if (!(defaultLevel in labels)) {\n    throw Error(`default level:${defaultLevel} must be included in custom levels`)\n  }\n}\n\nfunction assertNoLevelCollisions (levels, customLevels) {\n  const { labels, values } = levels\n  for (const k in customLevels) {\n    if (k in values) {\n      throw Error('levels cannot be overridden')\n    }\n    if (customLevels[k] in labels) {\n      throw Error('pre-existing level values cannot be used for new levels')\n    }\n  }\n}\n\nmodule.exports = {\n  initialLsCache,\n  genLsCache,\n  levelMethods,\n  getLevel,\n  setLevel,\n  isLevelEnabled,\n  mappings,\n  assertNoLevelCollisions,\n  assertDefaultLevelFound\n}\n","'use strict'\n\nconst { version } = require('../package.json')\n\nmodule.exports = { version }\n","'use strict'\n\n/* eslint no-prototype-builtins: 0 */\n\nconst { EventEmitter } = require('events')\nconst SonicBoom = require('sonic-boom')\nconst flatstr = require('flatstr')\nconst warning = require('./deprecations')\nconst {\n  lsCacheSym,\n  levelValSym,\n  setLevelSym,\n  getLevelSym,\n  chindingsSym,\n  parsedChindingsSym,\n  mixinSym,\n  asJsonSym,\n  writeSym,\n  mixinMergeStrategySym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  serializersSym,\n  formattersSym,\n  useOnlyCustomLevelsSym,\n  needsMetadataGsym,\n  redactFmtSym,\n  stringifySym,\n  formatOptsSym,\n  stringifiersSym\n} = require('./symbols')\nconst {\n  getLevel,\n  setLevel,\n  isLevelEnabled,\n  mappings,\n  initialLsCache,\n  genLsCache,\n  assertNoLevelCollisions\n} = require('./levels')\nconst {\n  asChindings,\n  asJson,\n  buildFormatters,\n  stringify\n} = require('./tools')\nconst {\n  version\n} = require('./meta')\nconst redaction = require('./redaction')\n\n// note: use of class is satirical\n// https://github.com/pinojs/pino/pull/433#pullrequestreview-127703127\nconst constructor = class Pino {}\nconst prototype = {\n  constructor,\n  child,\n  bindings,\n  setBindings,\n  flush,\n  isLevelEnabled,\n  version,\n  get level () { return this[getLevelSym]() },\n  set level (lvl) { this[setLevelSym](lvl) },\n  get levelVal () { return this[levelValSym] },\n  set levelVal (n) { throw Error('levelVal is read-only') },\n  [lsCacheSym]: initialLsCache,\n  [writeSym]: write,\n  [asJsonSym]: asJson,\n  [getLevelSym]: getLevel,\n  [setLevelSym]: setLevel\n}\n\nObject.setPrototypeOf(prototype, EventEmitter.prototype)\n\n// exporting and consuming the prototype object using factory pattern fixes scoping issues with getters when serializing\nmodule.exports = function () {\n  return Object.create(prototype)\n}\n\nconst resetChildingsFormatter = bindings => bindings\nfunction child (bindings, options) {\n  if (!bindings) {\n    throw Error('missing bindings for child Pino')\n  }\n  options = options || {} // default options to empty object\n  const serializers = this[serializersSym]\n  const formatters = this[formattersSym]\n  const instance = Object.create(this)\n\n  if (bindings.hasOwnProperty('serializers') === true) {\n    warning.emit('PINODEP004')\n    options.serializers = bindings.serializers\n  }\n  if (bindings.hasOwnProperty('formatters') === true) {\n    warning.emit('PINODEP005')\n    options.formatters = bindings.formatters\n  }\n  if (bindings.hasOwnProperty('customLevels') === true) {\n    warning.emit('PINODEP006')\n    options.customLevels = bindings.customLevels\n  }\n  if (bindings.hasOwnProperty('level') === true) {\n    warning.emit('PINODEP007')\n    options.level = bindings.level\n  }\n  if (options.hasOwnProperty('serializers') === true) {\n    instance[serializersSym] = Object.create(null)\n\n    for (const k in serializers) {\n      instance[serializersSym][k] = serializers[k]\n    }\n    const parentSymbols = Object.getOwnPropertySymbols(serializers)\n    /* eslint no-var: off */\n    for (var i = 0; i < parentSymbols.length; i++) {\n      const ks = parentSymbols[i]\n      instance[serializersSym][ks] = serializers[ks]\n    }\n\n    for (const bk in options.serializers) {\n      instance[serializersSym][bk] = options.serializers[bk]\n    }\n    const bindingsSymbols = Object.getOwnPropertySymbols(options.serializers)\n    for (var bi = 0; bi < bindingsSymbols.length; bi++) {\n      const bks = bindingsSymbols[bi]\n      instance[serializersSym][bks] = options.serializers[bks]\n    }\n  } else instance[serializersSym] = serializers\n  if (options.hasOwnProperty('formatters')) {\n    const { level, bindings: chindings, log } = options.formatters\n    instance[formattersSym] = buildFormatters(\n      level || formatters.level,\n      chindings || resetChildingsFormatter,\n      log || formatters.log\n    )\n  } else {\n    instance[formattersSym] = buildFormatters(\n      formatters.level,\n      resetChildingsFormatter,\n      formatters.log\n    )\n  }\n  if (options.hasOwnProperty('customLevels') === true) {\n    assertNoLevelCollisions(this.levels, options.customLevels)\n    instance.levels = mappings(options.customLevels, instance[useOnlyCustomLevelsSym])\n    genLsCache(instance)\n  }\n\n  // redact must place before asChindings and only replace if exist\n  if ((typeof options.redact === 'object' && options.redact !== null) || Array.isArray(options.redact)) {\n    instance.redact = options.redact // replace redact directly\n    const stringifiers = redaction(instance.redact, stringify)\n    const formatOpts = { stringify: stringifiers[redactFmtSym] }\n    instance[stringifySym] = stringify\n    instance[stringifiersSym] = stringifiers\n    instance[formatOptsSym] = formatOpts\n  }\n\n  instance[chindingsSym] = asChindings(instance, bindings)\n  const childLevel = options.level || this.level\n  instance[setLevelSym](childLevel)\n\n  return instance\n}\n\nfunction bindings () {\n  const chindings = this[chindingsSym]\n  const chindingsJson = `{${chindings.substr(1)}}` // at least contains ,\"pid\":7068,\"hostname\":\"myMac\"\n  const bindingsFromJson = JSON.parse(chindingsJson)\n  delete bindingsFromJson.pid\n  delete bindingsFromJson.hostname\n  return bindingsFromJson\n}\n\nfunction setBindings (newBindings) {\n  const chindings = asChindings(this, newBindings)\n  this[chindingsSym] = chindings\n  delete this[parsedChindingsSym]\n}\n\n/**\n * Default strategy for creating `mergeObject` from arguments and the result from `mixin()`.\n * Fields from `mergeObject` have higher priority in this strategy.\n *\n * @param {Object} mergeObject The object a user has supplied to the logging function.\n * @param {Object} mixinObject The result of the `mixin` method.\n * @return {Object}\n */\nfunction defaultMixinMergeStrategy (mergeObject, mixinObject) {\n  return Object.assign(mixinObject, mergeObject)\n}\n\nfunction write (_obj, msg, num) {\n  const t = this[timeSym]()\n  const mixin = this[mixinSym]\n  const mixinMergeStrategy = this[mixinMergeStrategySym] || defaultMixinMergeStrategy\n  const objError = _obj instanceof Error\n  let obj\n\n  if (_obj === undefined || _obj === null) {\n    obj = mixin ? mixin({}) : {}\n  } else {\n    obj = mixinMergeStrategy(_obj, mixin ? mixin(_obj) : {})\n    if (!msg && objError) {\n      msg = _obj.message\n    }\n\n    if (objError) {\n      obj.stack = _obj.stack\n      if (!obj.type) {\n        obj.type = 'Error'\n      }\n    }\n  }\n\n  const s = this[asJsonSym](obj, msg, num, t)\n\n  const stream = this[streamSym]\n  if (stream[needsMetadataGsym] === true) {\n    stream.lastLevel = num\n    stream.lastObj = obj\n    stream.lastMsg = msg\n    stream.lastTime = t.slice(this[timeSliceIndexSym])\n    stream.lastLogger = this // for child loggers\n  }\n  if (stream instanceof SonicBoom) stream.write(s)\n  else stream.write(flatstr(s))\n}\n\nfunction flush () {\n  const stream = this[streamSym]\n  if ('flush' in stream) stream.flush()\n}\n","'use strict'\n\nconst fastRedact = require('fast-redact')\nconst { redactFmtSym, wildcardFirstSym } = require('./symbols')\nconst { rx, validator } = fastRedact\n\nconst validate = validator({\n  ERR_PATHS_MUST_BE_STRINGS: () => 'pino – redacted paths must be strings',\n  ERR_INVALID_PATH: (s) => `pino – redact paths array contains an invalid path (${s})`\n})\n\nconst CENSOR = '[Redacted]'\nconst strict = false // TODO should this be configurable?\n\nfunction redaction (opts, serialize) {\n  const { paths, censor } = handle(opts)\n\n  const shape = paths.reduce((o, str) => {\n    rx.lastIndex = 0\n    const first = rx.exec(str)\n    const next = rx.exec(str)\n\n    // ns is the top-level path segment, brackets + quoting removed.\n    let ns = first[1] !== undefined\n      ? first[1].replace(/^(?:\"|'|`)(.*)(?:\"|'|`)$/, '$1')\n      : first[0]\n\n    if (ns === '*') {\n      ns = wildcardFirstSym\n    }\n\n    // top level key:\n    if (next === null) {\n      o[ns] = null\n      return o\n    }\n\n    // path with at least two segments:\n    // if ns is already redacted at the top level, ignore lower level redactions\n    if (o[ns] === null) {\n      return o\n    }\n\n    const { index } = next\n    const nextPath = `${str.substr(index, str.length - 1)}`\n\n    o[ns] = o[ns] || []\n\n    // shape is a mix of paths beginning with literal values and wildcard\n    // paths [ \"a.b.c\", \"*.b.z\" ] should reduce to a shape of\n    // { \"a\": [ \"b.c\", \"b.z\" ], *: [ \"b.z\" ] }\n    // note: \"b.z\" is in both \"a\" and * arrays because \"a\" matches the wildcard.\n    // (* entry has wildcardFirstSym as key)\n    if (ns !== wildcardFirstSym && o[ns].length === 0) {\n      // first time ns's get all '*' redactions so far\n      o[ns].push(...(o[wildcardFirstSym] || []))\n    }\n\n    if (ns === wildcardFirstSym) {\n      // new * path gets added to all previously registered literal ns's.\n      Object.keys(o).forEach(function (k) {\n        if (o[k]) {\n          o[k].push(nextPath)\n        }\n      })\n    }\n\n    o[ns].push(nextPath)\n    return o\n  }, {})\n\n  // the redactor assigned to the format symbol key\n  // provides top level redaction for instances where\n  // an object is interpolated into the msg string\n  const result = {\n    [redactFmtSym]: fastRedact({ paths, censor, serialize, strict })\n  }\n\n  const topCensor = (...args) => {\n    return typeof censor === 'function' ? serialize(censor(...args)) : serialize(censor)\n  }\n\n  return [...Object.keys(shape), ...Object.getOwnPropertySymbols(shape)].reduce((o, k) => {\n    // top level key:\n    if (shape[k] === null) {\n      o[k] = (value) => topCensor(value, [k])\n    } else {\n      const wrappedCensor = typeof censor === 'function'\n        ? (value, path) => {\n            return censor(value, [k, ...path])\n          }\n        : censor\n      o[k] = fastRedact({\n        paths: shape[k],\n        censor: wrappedCensor,\n        serialize,\n        strict\n      })\n    }\n    return o\n  }, result)\n}\n\nfunction handle (opts) {\n  if (Array.isArray(opts)) {\n    opts = { paths: opts, censor: CENSOR }\n    validate(opts)\n    return opts\n  }\n  let { paths, censor = CENSOR, remove } = opts\n  if (Array.isArray(paths) === false) { throw Error('pino – redact must contain an array of strings') }\n  if (remove === true) censor = undefined\n  validate({ paths, censor })\n\n  return { paths, censor }\n}\n\nmodule.exports = redaction\n","'use strict'\n\nconst setLevelSym = Symbol('pino.setLevel')\nconst getLevelSym = Symbol('pino.getLevel')\nconst levelValSym = Symbol('pino.levelVal')\nconst useLevelLabelsSym = Symbol('pino.useLevelLabels')\nconst useOnlyCustomLevelsSym = Symbol('pino.useOnlyCustomLevels')\nconst mixinSym = Symbol('pino.mixin')\n\nconst lsCacheSym = Symbol('pino.lsCache')\nconst chindingsSym = Symbol('pino.chindings')\nconst parsedChindingsSym = Symbol('pino.parsedChindings')\n\nconst asJsonSym = Symbol('pino.asJson')\nconst writeSym = Symbol('pino.write')\nconst redactFmtSym = Symbol('pino.redactFmt')\n\nconst timeSym = Symbol('pino.time')\nconst timeSliceIndexSym = Symbol('pino.timeSliceIndex')\nconst streamSym = Symbol('pino.stream')\nconst stringifySym = Symbol('pino.stringify')\nconst stringifiersSym = Symbol('pino.stringifiers')\nconst endSym = Symbol('pino.end')\nconst formatOptsSym = Symbol('pino.formatOpts')\nconst messageKeySym = Symbol('pino.messageKey')\nconst nestedKeySym = Symbol('pino.nestedKey')\nconst mixinMergeStrategySym = Symbol('pino.mixinMergeStrategy')\n\nconst wildcardFirstSym = Symbol('pino.wildcardFirst')\n\n// public symbols, no need to use the same pino\n// version for these\nconst serializersSym = Symbol.for('pino.serializers')\nconst formattersSym = Symbol.for('pino.formatters')\nconst hooksSym = Symbol.for('pino.hooks')\nconst needsMetadataGsym = Symbol.for('pino.metadata')\n\nmodule.exports = {\n  setLevelSym,\n  getLevelSym,\n  levelValSym,\n  useLevelLabelsSym,\n  mixinSym,\n  lsCacheSym,\n  chindingsSym,\n  parsedChindingsSym,\n  asJsonSym,\n  writeSym,\n  serializersSym,\n  redactFmtSym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  stringifySym,\n  stringifiersSym,\n  endSym,\n  formatOptsSym,\n  messageKeySym,\n  nestedKeySym,\n  wildcardFirstSym,\n  needsMetadataGsym,\n  useOnlyCustomLevelsSym,\n  formattersSym,\n  hooksSym,\n  mixinMergeStrategySym\n}\n","'use strict'\n\nconst nullTime = () => ''\n\nconst epochTime = () => `,\"time\":${Date.now()}`\n\nconst unixTime = () => `,\"time\":${Math.round(Date.now() / 1000.0)}`\n\nconst isoTime = () => `,\"time\":\"${new Date(Date.now()).toISOString()}\"` // using Date.now() for testability\n\nmodule.exports = { nullTime, epochTime, unixTime, isoTime }\n","'use strict'\n\n/* eslint no-prototype-builtins: 0 */\n\nconst format = require('quick-format-unescaped')\nconst { mapHttpRequest, mapHttpResponse } = require('pino-std-serializers')\nconst SonicBoom = require('sonic-boom')\nconst stringifySafe = require('fast-safe-stringify')\nconst {\n  lsCacheSym,\n  chindingsSym,\n  parsedChindingsSym,\n  writeSym,\n  serializersSym,\n  formatOptsSym,\n  endSym,\n  stringifiersSym,\n  stringifySym,\n  wildcardFirstSym,\n  needsMetadataGsym,\n  redactFmtSym,\n  streamSym,\n  nestedKeySym,\n  formattersSym,\n  messageKeySym\n} = require('./symbols')\n\nfunction noop () {}\n\nfunction genLog (level, hook) {\n  if (!hook) return LOG\n\n  return function hookWrappedLog (...args) {\n    hook.call(this, args, LOG, level)\n  }\n\n  function LOG (o, ...n) {\n    if (typeof o === 'object') {\n      let msg = o\n      if (o !== null) {\n        if (o.method && o.headers && o.socket) {\n          o = mapHttpRequest(o)\n        } else if (typeof o.setHeader === 'function') {\n          o = mapHttpResponse(o)\n        }\n      }\n      if (this[nestedKeySym]) o = { [this[nestedKeySym]]: o }\n      let formatParams\n      if (msg === null && n.length === 0) {\n        formatParams = [null]\n      } else {\n        msg = n.shift()\n        formatParams = n\n      }\n      this[writeSym](o, format(msg, formatParams, this[formatOptsSym]), level)\n    } else {\n      this[writeSym](null, format(o, n, this[formatOptsSym]), level)\n    }\n  }\n}\n\n// magically escape strings for json\n// relying on their charCodeAt\n// everything below 32 needs JSON.stringify()\n// 34 and 92 happens all the time, so we\n// have a fast case for them\nfunction asString (str) {\n  let result = ''\n  let last = 0\n  let found = false\n  let point = 255\n  const l = str.length\n  if (l > 100) {\n    return JSON.stringify(str)\n  }\n  for (var i = 0; i < l && point >= 32; i++) {\n    point = str.charCodeAt(i)\n    if (point === 34 || point === 92) {\n      result += str.slice(last, i) + '\\\\'\n      last = i\n      found = true\n    }\n  }\n  if (!found) {\n    result = str\n  } else {\n    result += str.slice(last)\n  }\n  return point < 32 ? JSON.stringify(str) : '\"' + result + '\"'\n}\n\nfunction asJson (obj, msg, num, time) {\n  const stringify = this[stringifySym]\n  const stringifiers = this[stringifiersSym]\n  const end = this[endSym]\n  const chindings = this[chindingsSym]\n  const serializers = this[serializersSym]\n  const formatters = this[formattersSym]\n  const messageKey = this[messageKeySym]\n  let data = this[lsCacheSym][num] + time\n\n  // we need the child bindings added to the output first so instance logged\n  // objects can take precedence when JSON.parse-ing the resulting log line\n  data = data + chindings\n\n  let value\n  const notHasOwnProperty = obj.hasOwnProperty === undefined\n  if (formatters.log) {\n    obj = formatters.log(obj)\n  }\n  if (msg !== undefined) {\n    obj[messageKey] = msg\n  }\n  const wildcardStringifier = stringifiers[wildcardFirstSym]\n  for (const key in obj) {\n    value = obj[key]\n    if ((notHasOwnProperty || obj.hasOwnProperty(key)) && value !== undefined) {\n      value = serializers[key] ? serializers[key](value) : value\n\n      const stringifier = stringifiers[key] || wildcardStringifier\n\n      switch (typeof value) {\n        case 'undefined':\n        case 'function':\n          continue\n        case 'number':\n          /* eslint no-fallthrough: \"off\" */\n          if (Number.isFinite(value) === false) {\n            value = null\n          }\n        // this case explicitly falls through to the next one\n        case 'boolean':\n          if (stringifier) value = stringifier(value)\n          break\n        case 'string':\n          value = (stringifier || asString)(value)\n          break\n        default:\n          value = (stringifier || stringify)(value)\n      }\n      if (value === undefined) continue\n      data += ',\"' + key + '\":' + value\n    }\n  }\n\n  return data + end\n}\n\nfunction asChindings (instance, bindings) {\n  let value\n  let data = instance[chindingsSym]\n  const stringify = instance[stringifySym]\n  const stringifiers = instance[stringifiersSym]\n  const wildcardStringifier = stringifiers[wildcardFirstSym]\n  const serializers = instance[serializersSym]\n  const formatter = instance[formattersSym].bindings\n  bindings = formatter(bindings)\n\n  for (const key in bindings) {\n    value = bindings[key]\n    const valid = key !== 'level' &&\n      key !== 'serializers' &&\n      key !== 'formatters' &&\n      key !== 'customLevels' &&\n      bindings.hasOwnProperty(key) &&\n      value !== undefined\n    if (valid === true) {\n      value = serializers[key] ? serializers[key](value) : value\n      value = (stringifiers[key] || wildcardStringifier || stringify)(value)\n      if (value === undefined) continue\n      data += ',\"' + key + '\":' + value\n    }\n  }\n  return data\n}\n\nfunction getPrettyStream (opts, prettifier, dest, instance) {\n  if (prettifier && typeof prettifier === 'function') {\n    prettifier = prettifier.bind(instance)\n    return prettifierMetaWrapper(prettifier(opts), dest, opts)\n  }\n  try {\n    const prettyFactory = require('pino-pretty').prettyFactory || require('pino-pretty')\n    prettyFactory.asMetaWrapper = prettifierMetaWrapper\n    return prettifierMetaWrapper(prettyFactory(opts), dest, opts)\n  } catch (e) {\n    if (e.message.startsWith(\"Cannot find module 'pino-pretty'\")) {\n      throw Error('Missing `pino-pretty` module: `pino-pretty` must be installed separately')\n    };\n    throw e\n  }\n}\n\nfunction prettifierMetaWrapper (pretty, dest, opts) {\n  opts = Object.assign({ suppressFlushSyncWarning: false }, opts)\n  let warned = false\n  return {\n    [needsMetadataGsym]: true,\n    lastLevel: 0,\n    lastMsg: null,\n    lastObj: null,\n    lastLogger: null,\n    flushSync () {\n      if (opts.suppressFlushSyncWarning || warned) {\n        return\n      }\n      warned = true\n      setMetadataProps(dest, this)\n      dest.write(pretty(Object.assign({\n        level: 40, // warn\n        msg: 'pino.final with prettyPrint does not support flushing',\n        time: Date.now()\n      }, this.chindings())))\n    },\n    chindings () {\n      const lastLogger = this.lastLogger\n      let chindings = null\n\n      // protection against flushSync being called before logging\n      // anything\n      if (!lastLogger) {\n        return null\n      }\n\n      if (lastLogger.hasOwnProperty(parsedChindingsSym)) {\n        chindings = lastLogger[parsedChindingsSym]\n      } else {\n        chindings = JSON.parse('{' + lastLogger[chindingsSym].substr(1) + '}')\n        lastLogger[parsedChindingsSym] = chindings\n      }\n\n      return chindings\n    },\n    write (chunk) {\n      const lastLogger = this.lastLogger\n      const chindings = this.chindings()\n\n      let time = this.lastTime\n\n      if (time.match(/^\\d+/)) {\n        time = parseInt(time)\n      } else {\n        time = time.slice(1, -1)\n      }\n\n      const lastObj = this.lastObj\n      const lastMsg = this.lastMsg\n      const errorProps = null\n\n      const formatters = lastLogger[formattersSym]\n      const formattedObj = formatters.log ? formatters.log(lastObj) : lastObj\n\n      const messageKey = lastLogger[messageKeySym]\n      if (lastMsg && formattedObj && !formattedObj.hasOwnProperty(messageKey)) {\n        formattedObj[messageKey] = lastMsg\n      }\n\n      const obj = Object.assign({\n        level: this.lastLevel,\n        time\n      }, formattedObj, errorProps)\n\n      const serializers = lastLogger[serializersSym]\n      const keys = Object.keys(serializers)\n\n      for (var i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        if (obj[key] !== undefined) {\n          obj[key] = serializers[key](obj[key])\n        }\n      }\n\n      for (const key in chindings) {\n        if (!obj.hasOwnProperty(key)) {\n          obj[key] = chindings[key]\n        }\n      }\n\n      const stringifiers = lastLogger[stringifiersSym]\n      const redact = stringifiers[redactFmtSym]\n\n      const formatted = pretty(typeof redact === 'function' ? redact(obj) : obj)\n      if (formatted === undefined) return\n\n      setMetadataProps(dest, this)\n      dest.write(formatted)\n    }\n  }\n}\n\nfunction hasBeenTampered (stream) {\n  return stream.write !== stream.constructor.prototype.write\n}\n\nfunction buildSafeSonicBoom (opts) {\n  const stream = new SonicBoom(opts)\n  stream.on('error', filterBrokenPipe)\n  return stream\n\n  function filterBrokenPipe (err) {\n    // TODO verify on Windows\n    if (err.code === 'EPIPE') {\n      // If we get EPIPE, we should stop logging here\n      // however we have no control to the consumer of\n      // SonicBoom, so we just overwrite the write method\n      stream.write = noop\n      stream.end = noop\n      stream.flushSync = noop\n      stream.destroy = noop\n      return\n    }\n    stream.removeListener('error', filterBrokenPipe)\n    stream.emit('error', err)\n  }\n}\n\nfunction createArgsNormalizer (defaultOptions) {\n  return function normalizeArgs (instance, opts = {}, stream) {\n    // support stream as a string\n    if (typeof opts === 'string') {\n      stream = buildSafeSonicBoom({ dest: opts, sync: true })\n      opts = {}\n    } else if (typeof stream === 'string') {\n      stream = buildSafeSonicBoom({ dest: stream, sync: true })\n    } else if (opts instanceof SonicBoom || opts.writable || opts._writableState) {\n      stream = opts\n      opts = null\n    }\n    opts = Object.assign({}, defaultOptions, opts)\n    if ('extreme' in opts) {\n      throw Error('The extreme option has been removed, use pino.destination({ sync: false }) instead')\n    }\n    if ('onTerminated' in opts) {\n      throw Error('The onTerminated option has been removed, use pino.final instead')\n    }\n    if ('changeLevelName' in opts) {\n      process.emitWarning(\n        'The changeLevelName option is deprecated and will be removed in v7. Use levelKey instead.',\n        { code: 'changeLevelName_deprecation' }\n      )\n      opts.levelKey = opts.changeLevelName\n      delete opts.changeLevelName\n    }\n    const { enabled, prettyPrint, prettifier, messageKey } = opts\n    if (enabled === false) opts.level = 'silent'\n    stream = stream || process.stdout\n    if (stream === process.stdout && stream.fd >= 0 && !hasBeenTampered(stream)) {\n      stream = buildSafeSonicBoom({ fd: stream.fd, sync: true })\n    }\n    if (prettyPrint) {\n      const prettyOpts = Object.assign({ messageKey }, prettyPrint)\n      stream = getPrettyStream(prettyOpts, prettifier, stream, instance)\n    }\n    return { opts, stream }\n  }\n}\n\nfunction final (logger, handler) {\n  if (typeof logger === 'undefined' || typeof logger.child !== 'function') {\n    throw Error('expected a pino logger instance')\n  }\n  const hasHandler = (typeof handler !== 'undefined')\n  if (hasHandler && typeof handler !== 'function') {\n    throw Error('if supplied, the handler parameter should be a function')\n  }\n  const stream = logger[streamSym]\n  if (typeof stream.flushSync !== 'function') {\n    throw Error('final requires a stream that has a flushSync method, such as pino.destination')\n  }\n\n  const finalLogger = new Proxy(logger, {\n    get: (logger, key) => {\n      if (key in logger.levels.values) {\n        return (...args) => {\n          logger[key](...args)\n          stream.flushSync()\n        }\n      }\n      return logger[key]\n    }\n  })\n\n  if (!hasHandler) {\n    return finalLogger\n  }\n\n  return (err = null, ...args) => {\n    try {\n      stream.flushSync()\n    } catch (e) {\n      // it's too late to wait for the stream to be ready\n      // because this is a final tick scenario.\n      // in practice there shouldn't be a situation where it isn't\n      // however, swallow the error just in case (and for easier testing)\n    }\n    return handler(err, finalLogger, ...args)\n  }\n}\n\nfunction stringify (obj) {\n  try {\n    return JSON.stringify(obj)\n  } catch (_) {\n    return stringifySafe(obj)\n  }\n}\n\nfunction buildFormatters (level, bindings, log) {\n  return {\n    level,\n    bindings,\n    log\n  }\n}\n\nfunction setMetadataProps (dest, that) {\n  if (dest[needsMetadataGsym] === true) {\n    dest.lastLevel = that.lastLevel\n    dest.lastMsg = that.lastMsg\n    dest.lastObj = that.lastObj\n    dest.lastTime = that.lastTime\n    dest.lastLogger = that.lastLogger\n  }\n}\n\nmodule.exports = {\n  noop,\n  buildSafeSonicBoom,\n  getPrettyStream,\n  asChindings,\n  asJson,\n  genLog,\n  createArgsNormalizer,\n  final,\n  stringify,\n  buildFormatters\n}\n","'use strict'\n\nconst fs = require('fs')\nconst EventEmitter = require('events')\nconst flatstr = require('flatstr')\nconst inherits = require('util').inherits\n\nconst BUSY_WRITE_TIMEOUT = 100\n\nconst sleep = require('atomic-sleep')\n\n// 16 MB - magic number\n// This constant ensures that SonicBoom only needs\n// 32 MB of free memory to run. In case of having 1GB+\n// of data to write, this prevents an out of memory\n// condition.\nconst MAX_WRITE = 16 * 1024 * 1024\n\nfunction openFile (file, sonic) {\n  sonic._opening = true\n  sonic._writing = true\n  sonic._asyncDrainScheduled = false\n\n  // NOTE: 'error' and 'ready' events emitted below only relevant when sonic.sync===false\n  // for sync mode, there is no way to add a listener that will receive these\n\n  function fileOpened (err, fd) {\n    if (err) {\n      sonic._reopening = false\n      sonic._writing = false\n      sonic._opening = false\n\n      if (sonic.sync) {\n        process.nextTick(() => {\n          if (sonic.listenerCount('error') > 0) {\n            sonic.emit('error', err)\n          }\n        })\n      } else {\n        sonic.emit('error', err)\n      }\n      return\n    }\n\n    sonic.fd = fd\n    sonic.file = file\n    sonic._reopening = false\n    sonic._opening = false\n    sonic._writing = false\n\n    if (sonic.sync) {\n      process.nextTick(() => sonic.emit('ready'))\n    } else {\n      sonic.emit('ready')\n    }\n\n    if (sonic._reopening) {\n      return\n    }\n\n    // start\n    const len = sonic._buf.length\n    if (len > 0 && len > sonic.minLength && !sonic.destroyed) {\n      actualWrite(sonic)\n    }\n  }\n\n  if (sonic.sync) {\n    try {\n      const fd = fs.openSync(file, 'a')\n      fileOpened(null, fd)\n    } catch (err) {\n      fileOpened(err)\n      throw err\n    }\n  } else {\n    fs.open(file, 'a', fileOpened)\n  }\n}\n\nfunction SonicBoom (opts) {\n  if (!(this instanceof SonicBoom)) {\n    return new SonicBoom(opts)\n  }\n\n  let { fd, dest, minLength, sync } = opts || {}\n\n  fd = fd || dest\n\n  this._buf = ''\n  this.fd = -1\n  this._writing = false\n  this._writingBuf = ''\n  this._ending = false\n  this._reopening = false\n  this._asyncDrainScheduled = false\n  this.file = null\n  this.destroyed = false\n  this.sync = sync || false\n\n  this.minLength = minLength || 0\n\n  if (typeof fd === 'number') {\n    this.fd = fd\n    process.nextTick(() => this.emit('ready'))\n  } else if (typeof fd === 'string') {\n    openFile(fd, this)\n  } else {\n    throw new Error('SonicBoom supports only file descriptors and files')\n  }\n\n  this.release = (err, n) => {\n    if (err) {\n      if (err.code === 'EAGAIN') {\n        if (this.sync) {\n          // This error code should not happen in sync mode, because it is\n          // not using the underlining operating system asynchronous functions.\n          // However it happens, and so we handle it.\n          // Ref: https://github.com/pinojs/pino/issues/783\n          try {\n            sleep(BUSY_WRITE_TIMEOUT)\n            this.release(undefined, 0)\n          } catch (err) {\n            this.release(err)\n          }\n        } else {\n          // Let's give the destination some time to process the chunk.\n          setTimeout(() => {\n            fs.write(this.fd, this._writingBuf, 'utf8', this.release)\n          }, BUSY_WRITE_TIMEOUT)\n        }\n      } else {\n        // The error maybe recoverable later, so just put data back to this._buf\n        this._buf = this._writingBuf + this._buf\n        this._writingBuf = ''\n        this._writing = false\n\n        this.emit('error', err)\n      }\n      return\n    }\n\n    if (this._writingBuf.length !== n) {\n      this._writingBuf = this._writingBuf.slice(n)\n      if (this.sync) {\n        try {\n          do {\n            n = fs.writeSync(this.fd, this._writingBuf, 'utf8')\n            this._writingBuf = this._writingBuf.slice(n)\n          } while (this._writingBuf.length !== 0)\n        } catch (err) {\n          this.release(err)\n          return\n        }\n      } else {\n        fs.write(this.fd, this._writingBuf, 'utf8', this.release)\n        return\n      }\n    }\n\n    this._writingBuf = ''\n\n    if (this.destroyed) {\n      return\n    }\n\n    const len = this._buf.length\n    if (this._reopening) {\n      this._writing = false\n      this._reopening = false\n      this.reopen()\n    } else if (len > 0 && len > this.minLength) {\n      actualWrite(this)\n    } else if (this._ending) {\n      if (len > 0) {\n        actualWrite(this)\n      } else {\n        this._writing = false\n        actualClose(this)\n      }\n    } else {\n      this._writing = false\n      if (this.sync) {\n        if (!this._asyncDrainScheduled) {\n          this._asyncDrainScheduled = true\n          process.nextTick(emitDrain, this)\n        }\n      } else {\n        this.emit('drain')\n      }\n    }\n  }\n\n  this.on('newListener', function (name) {\n    if (name === 'drain') {\n      this._asyncDrainScheduled = false\n    }\n  })\n}\n\nfunction emitDrain (sonic) {\n  const hasListeners = sonic.listenerCount('drain') > 0\n  if (!hasListeners) return\n  sonic._asyncDrainScheduled = false\n  sonic.emit('drain')\n}\n\ninherits(SonicBoom, EventEmitter)\n\nSonicBoom.prototype.write = function (data) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  this._buf += data\n  const len = this._buf.length\n  if (!this._writing && len > this.minLength) {\n    actualWrite(this)\n  }\n  return len < 16384\n}\n\nSonicBoom.prototype.flush = function () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this._writing || this.minLength <= 0) {\n    return\n  }\n\n  actualWrite(this)\n}\n\nSonicBoom.prototype.reopen = function (file) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this._opening) {\n    this.once('ready', () => {\n      this.reopen(file)\n    })\n    return\n  }\n\n  if (this._ending) {\n    return\n  }\n\n  if (!this.file) {\n    throw new Error('Unable to reopen a file descriptor, you must pass a file to SonicBoom')\n  }\n\n  this._reopening = true\n\n  if (this._writing) {\n    return\n  }\n\n  const fd = this.fd\n  this.once('ready', () => {\n    if (fd !== this.fd) {\n      fs.close(fd, (err) => {\n        if (err) {\n          return this.emit('error', err)\n        }\n      })\n    }\n  })\n\n  openFile(file || this.file, this)\n}\n\nSonicBoom.prototype.end = function () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this._opening) {\n    this.once('ready', () => {\n      this.end()\n    })\n    return\n  }\n\n  if (this._ending) {\n    return\n  }\n\n  this._ending = true\n\n  if (!this._writing && this._buf.length > 0 && this.fd >= 0) {\n    actualWrite(this)\n    return\n  }\n\n  if (this._writing) {\n    return\n  }\n\n  actualClose(this)\n}\n\nSonicBoom.prototype.flushSync = function () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this.fd < 0) {\n    throw new Error('sonic boom is not ready yet')\n  }\n\n  while (this._buf.length > 0) {\n    try {\n      fs.writeSync(this.fd, this._buf, 'utf8')\n      this._buf = ''\n    } catch (err) {\n      if (err.code !== 'EAGAIN') {\n        throw err\n      }\n\n      sleep(BUSY_WRITE_TIMEOUT)\n    }\n  }\n}\n\nSonicBoom.prototype.destroy = function () {\n  if (this.destroyed) {\n    return\n  }\n  actualClose(this)\n}\n\nfunction actualWrite (sonic) {\n  sonic._writing = true\n  let buf = sonic._buf\n  const release = sonic.release\n  if (buf.length > MAX_WRITE) {\n    buf = buf.slice(0, MAX_WRITE)\n    sonic._buf = sonic._buf.slice(MAX_WRITE)\n  } else {\n    sonic._buf = ''\n  }\n  flatstr(buf)\n  sonic._writingBuf = buf\n  if (sonic.sync) {\n    try {\n      const written = fs.writeSync(sonic.fd, buf, 'utf8')\n      release(null, written)\n    } catch (err) {\n      release(err)\n    }\n  } else {\n    fs.write(sonic.fd, buf, 'utf8', release)\n  }\n}\n\nfunction actualClose (sonic) {\n  if (sonic.fd === -1) {\n    sonic.once('ready', actualClose.bind(null, sonic))\n    return\n  }\n  // TODO write a test to check if we are not leaking fds\n  fs.close(sonic.fd, (err) => {\n    if (err) {\n      sonic.emit('error', err)\n      return\n    }\n\n    if (sonic._ending && !sonic._writing) {\n      sonic.emit('finish')\n    }\n    sonic.emit('close')\n  })\n  sonic.destroyed = true\n  sonic._buf = ''\n}\n\nmodule.exports = SonicBoom\n","'use strict'\n/* eslint no-prototype-builtins: 0 */\nconst os = require('os')\nconst stdSerializers = require('pino-std-serializers')\nconst redaction = require('./lib/redaction')\nconst time = require('./lib/time')\nconst proto = require('./lib/proto')\nconst symbols = require('./lib/symbols')\nconst { assertDefaultLevelFound, mappings, genLsCache } = require('./lib/levels')\nconst {\n  createArgsNormalizer,\n  asChindings,\n  final,\n  stringify,\n  buildSafeSonicBoom,\n  buildFormatters,\n  noop\n} = require('./lib/tools')\nconst { version } = require('./lib/meta')\nconst { mixinMergeStrategySym } = require('./lib/symbols')\nconst {\n  chindingsSym,\n  redactFmtSym,\n  serializersSym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  stringifySym,\n  stringifiersSym,\n  setLevelSym,\n  endSym,\n  formatOptsSym,\n  messageKeySym,\n  nestedKeySym,\n  mixinSym,\n  useOnlyCustomLevelsSym,\n  formattersSym,\n  hooksSym\n} = symbols\nconst { epochTime, nullTime } = time\nconst { pid } = process\nconst hostname = os.hostname()\nconst defaultErrorSerializer = stdSerializers.err\nconst defaultOptions = {\n  level: 'info',\n  messageKey: 'msg',\n  nestedKey: null,\n  enabled: true,\n  prettyPrint: false,\n  base: { pid, hostname },\n  serializers: Object.assign(Object.create(null), {\n    err: defaultErrorSerializer\n  }),\n  formatters: Object.assign(Object.create(null), {\n    bindings (bindings) {\n      return bindings\n    },\n    level (label, number) {\n      return { level: number }\n    }\n  }),\n  hooks: {\n    logMethod: undefined\n  },\n  timestamp: epochTime,\n  name: undefined,\n  redact: null,\n  customLevels: null,\n  levelKey: undefined,\n  useOnlyCustomLevels: false\n}\n\nconst normalize = createArgsNormalizer(defaultOptions)\n\nconst serializers = Object.assign(Object.create(null), stdSerializers)\n\nfunction pino (...args) {\n  const instance = {}\n  const { opts, stream } = normalize(instance, ...args)\n  const {\n    redact,\n    crlf,\n    serializers,\n    timestamp,\n    messageKey,\n    nestedKey,\n    base,\n    name,\n    level,\n    customLevels,\n    useLevelLabels,\n    changeLevelName,\n    levelKey,\n    mixin,\n    mixinMergeStrategy,\n    useOnlyCustomLevels,\n    formatters,\n    hooks\n  } = opts\n\n  const allFormatters = buildFormatters(\n    formatters.level,\n    formatters.bindings,\n    formatters.log\n  )\n\n  if (useLevelLabels && !(changeLevelName || levelKey)) {\n    process.emitWarning('useLevelLabels is deprecated, use the formatters.level option instead', 'Warning', 'PINODEP001')\n    allFormatters.level = labelsFormatter\n  } else if ((changeLevelName || levelKey) && !useLevelLabels) {\n    process.emitWarning('changeLevelName and levelKey are deprecated, use the formatters.level option instead', 'Warning', 'PINODEP002')\n    allFormatters.level = levelNameFormatter(changeLevelName || levelKey)\n  } else if ((changeLevelName || levelKey) && useLevelLabels) {\n    process.emitWarning('useLevelLabels is deprecated, use the formatters.level option instead', 'Warning', 'PINODEP001')\n    process.emitWarning('changeLevelName and levelKey are deprecated, use the formatters.level option instead', 'Warning', 'PINODEP002')\n    allFormatters.level = levelNameLabelFormatter(changeLevelName || levelKey)\n  }\n\n  if (serializers[Symbol.for('pino.*')]) {\n    process.emitWarning('The pino.* serializer is deprecated, use the formatters.log options instead', 'Warning', 'PINODEP003')\n    allFormatters.log = serializers[Symbol.for('pino.*')]\n  }\n\n  if (!allFormatters.bindings) {\n    allFormatters.bindings = defaultOptions.formatters.bindings\n  }\n  if (!allFormatters.level) {\n    allFormatters.level = defaultOptions.formatters.level\n  }\n\n  const stringifiers = redact ? redaction(redact, stringify) : {}\n  const formatOpts = redact\n    ? { stringify: stringifiers[redactFmtSym] }\n    : { stringify }\n  const end = '}' + (crlf ? '\\r\\n' : '\\n')\n  const coreChindings = asChindings.bind(null, {\n    [chindingsSym]: '',\n    [serializersSym]: serializers,\n    [stringifiersSym]: stringifiers,\n    [stringifySym]: stringify,\n    [formattersSym]: allFormatters\n  })\n\n  let chindings = ''\n  if (base !== null) {\n    if (name === undefined) {\n      chindings = coreChindings(base)\n    } else {\n      chindings = coreChindings(Object.assign({}, base, { name }))\n    }\n  }\n\n  const time = (timestamp instanceof Function)\n    ? timestamp\n    : (timestamp ? epochTime : nullTime)\n  const timeSliceIndex = time().indexOf(':') + 1\n\n  if (useOnlyCustomLevels && !customLevels) throw Error('customLevels is required if useOnlyCustomLevels is set true')\n  if (mixin && typeof mixin !== 'function') throw Error(`Unknown mixin type \"${typeof mixin}\" - expected \"function\"`)\n\n  assertDefaultLevelFound(level, customLevels, useOnlyCustomLevels)\n  const levels = mappings(customLevels, useOnlyCustomLevels)\n\n  Object.assign(instance, {\n    levels,\n    [useOnlyCustomLevelsSym]: useOnlyCustomLevels,\n    [streamSym]: stream,\n    [timeSym]: time,\n    [timeSliceIndexSym]: timeSliceIndex,\n    [stringifySym]: stringify,\n    [stringifiersSym]: stringifiers,\n    [endSym]: end,\n    [formatOptsSym]: formatOpts,\n    [messageKeySym]: messageKey,\n    [nestedKeySym]: nestedKey,\n    [serializersSym]: serializers,\n    [mixinSym]: mixin,\n    [mixinMergeStrategySym]: mixinMergeStrategy,\n    [chindingsSym]: chindings,\n    [formattersSym]: allFormatters,\n    [hooksSym]: hooks,\n    silent: noop\n  })\n\n  Object.setPrototypeOf(instance, proto())\n\n  genLsCache(instance)\n\n  instance[setLevelSym](level)\n\n  return instance\n}\n\nfunction labelsFormatter (label, number) {\n  return { level: label }\n}\n\nfunction levelNameFormatter (name) {\n  return function (label, number) {\n    return { [name]: number }\n  }\n}\n\nfunction levelNameLabelFormatter (name) {\n  return function (label, number) {\n    return { [name]: label }\n  }\n}\n\nmodule.exports = pino\n\nmodule.exports.extreme = (dest = process.stdout.fd) => {\n  process.emitWarning(\n    'The pino.extreme() option is deprecated and will be removed in v7. Use pino.destination({ sync: false }) instead.',\n    { code: 'extreme_deprecation' }\n  )\n  return buildSafeSonicBoom({ dest, minLength: 4096, sync: false })\n}\n\nmodule.exports.destination = (dest = process.stdout.fd) => {\n  if (typeof dest === 'object') {\n    dest.dest = dest.dest || process.stdout.fd\n    return buildSafeSonicBoom(dest)\n  } else {\n    return buildSafeSonicBoom({ dest, minLength: 0, sync: true })\n  }\n}\n\nmodule.exports.final = final\nmodule.exports.levels = mappings()\nmodule.exports.stdSerializers = serializers\nmodule.exports.stdTimeFunctions = Object.assign({}, time)\nmodule.exports.symbols = symbols\nmodule.exports.version = version\n\n// Enables default and name export with TypeScript and Babel\nmodule.exports.default = pino\nmodule.exports.pino = pino\n","'use strict'\n\nconst { format } = require('util')\n\nfunction build () {\n  const codes = {}\n  const emitted = new Map()\n\n  function create (name, code, message) {\n    if (!name) throw new Error('Warning name must not be empty')\n    if (!code) throw new Error('Warning code must not be empty')\n    if (!message) throw new Error('Warning message must not be empty')\n\n    code = code.toUpperCase()\n\n    if (codes[code] !== undefined) {\n      throw new Error(`The code '${code}' already exist`)\n    }\n\n    function buildWarnOpts (a, b, c) {\n      // more performant than spread (...) operator\n      let formatted\n      if (a && b && c) {\n        formatted = format(message, a, b, c)\n      } else if (a && b) {\n        formatted = format(message, a, b)\n      } else if (a) {\n        formatted = format(message, a)\n      } else {\n        formatted = message\n      }\n\n      return {\n        code,\n        name,\n        message: formatted\n      }\n    }\n\n    emitted.set(code, false)\n    codes[code] = buildWarnOpts\n\n    return codes[code]\n  }\n\n  function emit (code, a, b, c) {\n    if (codes[code] === undefined) throw new Error(`The code '${code}' does not exist`)\n    if (emitted.get(code) === true) return\n    emitted.set(code, true)\n\n    const warning = codes[code](a, b, c)\n    process.emitWarning(warning.message, warning.name, warning.code)\n  }\n\n  return {\n    create,\n    emit,\n    emitted\n  }\n}\n\nmodule.exports = build\n","'use strict'\nfunction tryStringify (o) {\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\n}\n\nmodule.exports = format\n\nfunction format(f, args, opts) {\n  var ss = (opts && opts.stringify) || tryStringify\n  var offset = 1\n  if (typeof f === 'object' && f !== null) {\n    var len = args.length + offset\n    if (len === 1) return f\n    var objects = new Array(len)\n    objects[0] = ss(f)\n    for (var index = 1; index < len; index++) {\n      objects[index] = ss(args[index])\n    }\n    return objects.join(' ')\n  }\n  if (typeof f !== 'string') {\n    return f\n  }\n  var argLen = args.length\n  if (argLen === 0) return f\n  var str = ''\n  var a = 1 - offset\n  var lastPos = -1\n  var flen = (f && f.length) || 0\n  for (var i = 0; i < flen;) {\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\n      lastPos = lastPos > -1 ? lastPos : 0\n      switch (f.charCodeAt(i + 1)) {\n        case 100: // 'd'\n        case 102: // 'f'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Number(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 105: // 'i'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Math.floor(Number(args[a]))\n          lastPos = i + 2\n          i++\n          break\n        case 79: // 'O'\n        case 111: // 'o'\n        case 106: // 'j'\n          if (a >= argLen)\n            break\n          if (args[a] === undefined) break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          var type = typeof args[a]\n          if (type === 'string') {\n            str += '\\'' + args[a] + '\\''\n            lastPos = i + 2\n            i++\n            break\n          }\n          if (type === 'function') {\n            str += args[a].name || '<anonymous>'\n            lastPos = i + 2\n            i++\n            break\n          }\n          str += ss(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 115: // 's'\n          if (a >= argLen)\n            break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += String(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 37: // '%'\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += '%'\n          lastPos = i + 2\n          i++\n          a--\n          break\n      }\n      ++a\n    }\n    ++i\n  }\n  if (lastPos === -1)\n    return f\n  else if (lastPos < flen) {\n    str += f.slice(lastPos)\n  }\n\n  return str\n}\n","'use strict';\n\nconst codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n\n  function getMessage (arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message\n    } else {\n      return message(arg1, arg2, arg3)\n    }\n  }\n\n  class NodeError extends Base {\n    constructor (arg1, arg2, arg3) {\n      super(getMessage(arg1, arg2, arg3));\n    }\n  }\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n\n  codes[code] = NodeError;\n}\n\n// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    const len = expected.length;\n    expected = expected.map((i) => String(i));\n    if (len > 2) {\n      return `one of ${thing} ${expected.slice(0, len - 1).join(', ')}, or ` +\n             expected[len - 1];\n    } else if (len === 2) {\n      return `one of ${thing} ${expected[0]} or ${expected[1]}`;\n    } else {\n      return `of ${thing} ${expected[0]}`;\n    }\n  } else {\n    return `of ${thing} ${String(expected)}`;\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nfunction startsWith(str, search, pos) {\n\treturn str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n\tif (this_len === undefined || this_len > str.length) {\n\t\tthis_len = str.length;\n\t}\n\treturn str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"'\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  let determiner;\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  let msg;\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = `The ${name} ${determiner} ${oneOf(expected, 'type')}`;\n  } else {\n    const type = includes(name, '.') ? 'property' : 'argument';\n    msg = `The \"${name}\" ${type} ${determiner} ${oneOf(expected, 'type')}`;\n  }\n\n  msg += `. Received type ${typeof actual}`;\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented'\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\n\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ERR_INVALID_ARG_TYPE = require('../../../errors').codes.ERR_INVALID_ARG_TYPE;\n\nfunction from(Readable, iterable, opts) {\n  var iterator;\n\n  if (iterable && typeof iterable.next === 'function') {\n    iterator = iterable;\n  } else if (iterable && iterable[Symbol.asyncIterator]) iterator = iterable[Symbol.asyncIterator]();else if (iterable && iterable[Symbol.iterator]) iterator = iterable[Symbol.iterator]();else throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable);\n\n  var readable = new Readable(_objectSpread({\n    objectMode: true\n  }, opts)); // Reading boolean to protect against _read\n  // being called before last iteration completion.\n\n  var reading = false;\n\n  readable._read = function () {\n    if (!reading) {\n      reading = true;\n      next();\n    }\n  };\n\n  function next() {\n    return _next2.apply(this, arguments);\n  }\n\n  function _next2() {\n    _next2 = _asyncToGenerator(function* () {\n      try {\n        var _ref = yield iterator.next(),\n            value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          readable.push(null);\n        } else if (readable.push((yield value))) {\n          next();\n        } else {\n          reading = false;\n        }\n      } catch (err) {\n        readable.destroy(err);\n      }\n    });\n    return _next2.apply(this, arguments);\n  }\n\n  return readable;\n}\n\nmodule.exports = from;","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('stream');\n","var Stream = require('stream');\nif (process.env.READABLE_STREAM === 'disable' && Stream) {\n  module.exports = Stream.Readable;\n  Object.assign(module.exports, Stream);\n  module.exports.Stream = Stream;\n} else {\n  exports = module.exports = require('./lib/_stream_readable.js');\n  exports.Stream = Stream || exports;\n  exports.Readable = exports;\n  exports.Writable = require('./lib/_stream_writable.js');\n  exports.Duplex = require('./lib/_stream_duplex.js');\n  exports.Transform = require('./lib/_stream_transform.js');\n  exports.PassThrough = require('./lib/_stream_passthrough.js');\n  exports.finished = require('./lib/internal/streams/end-of-stream.js');\n  exports.pipeline = require('./lib/internal/streams/pipeline.js');\n}\n","'use strict'\nmodule.exports = rfdc\n\nfunction copyBuffer (cur) {\n  if (cur instanceof Buffer) {\n    return Buffer.from(cur)\n  }\n\n  return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length)\n}\n\nfunction rfdc (opts) {\n  opts = opts || {}\n\n  if (opts.circles) return rfdcCircles(opts)\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    var keys = Object.keys(a)\n    var a2 = new Array(keys.length)\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i]\n      var cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur)\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur)\n      } else {\n        a2[k] = fn(cur)\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))\n    var o2 = {}\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), clone))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), clone))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        o2[k] = clone(cur)\n      }\n    }\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))\n    var o2 = {}\n    for (var k in o) {\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        o2[k] = cloneProto(cur)\n      }\n    }\n    return o2\n  }\n}\n\nfunction rfdcCircles (opts) {\n  var refs = []\n  var refsNew = []\n\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    var keys = Object.keys(a)\n    var a2 = new Array(keys.length)\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i]\n      var cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur)\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur)\n      } else {\n        var index = refs.indexOf(cur)\n        if (index !== -1) {\n          a2[k] = refsNew[index]\n        } else {\n          a2[k] = fn(cur)\n        }\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))\n    var o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), clone))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), clone))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        var i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = clone(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))\n    var o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (var k in o) {\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        var i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = cloneProto(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n}\n","'use strict'\n\nconst hasBuffer = typeof Buffer !== 'undefined'\nconst suspectProtoRx = /\"(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])(?:p|\\\\u0070)(?:r|\\\\u0072)(?:o|\\\\u006[Ff])(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])\"\\s*:/\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/\n\nfunction parse (text, reviver, options) {\n  // Normalize arguments\n  if (options == null) {\n    if (reviver !== null && typeof reviver === 'object') {\n      options = reviver\n      reviver = undefined\n    } else {\n      options = {}\n    }\n  }\n\n  const protoAction = options.protoAction || 'error'\n  const constructorAction = options.constructorAction || 'error'\n\n  if (hasBuffer && Buffer.isBuffer(text)) {\n    text = text.toString()\n  }\n\n  // BOM checker\n  if (text && text.charCodeAt(0) === 0xFEFF) {\n    text = text.slice(1)\n  }\n\n  // Parse normally, allowing exceptions\n  const obj = JSON.parse(text, reviver)\n\n  // options: 'error' (default) / 'remove' / 'ignore'\n  if (protoAction === 'ignore' && constructorAction === 'ignore') {\n    return obj\n  }\n\n  // Ignore null and non-objects\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  if (protoAction !== 'ignore' && constructorAction !== 'ignore') {\n    if (suspectProtoRx.test(text) === false && suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  } else if (protoAction !== 'ignore' && constructorAction === 'ignore') {\n    if (suspectProtoRx.test(text) === false) {\n      return obj\n    }\n  } else {\n    if (suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  }\n\n  // Scan result for proto keys\n  scan(obj, { protoAction, constructorAction })\n\n  return obj\n}\n\nfunction scan (obj, { protoAction = 'error', constructorAction = 'error' } = {}) {\n  let next = [obj]\n\n  while (next.length) {\n    const nodes = next\n    next = []\n\n    for (const node of nodes) {\n      if (protoAction !== 'ignore' && Object.prototype.hasOwnProperty.call(node, '__proto__')) { // Avoid calling node.hasOwnProperty directly\n        if (protoAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.__proto__ // eslint-disable-line no-proto\n      }\n\n      if (constructorAction !== 'ignore' &&\n          Object.prototype.hasOwnProperty.call(node, 'constructor') &&\n          Object.prototype.hasOwnProperty.call(node.constructor, 'prototype')) { // Avoid calling node.hasOwnProperty directly\n        if (constructorAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.constructor\n      }\n\n      for (const key in node) {\n        const value = node[key]\n        if (value && typeof value === 'object') {\n          next.push(node[key])\n        }\n      }\n    }\n  }\n}\n\nfunction safeParse (text, reviver) {\n  try {\n    return parse(text, reviver)\n  } catch (ignoreError) {\n    return null\n  }\n}\n\nmodule.exports = {\n  parse,\n  scan,\n  safeParse\n}\n","/*\nCopyright (c) 2014-2018, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n'use strict'\n\nconst { Transform } = require('readable-stream')\nconst { StringDecoder } = require('string_decoder')\nconst kLast = Symbol('last')\nconst kDecoder = Symbol('decoder')\n\nfunction transform (chunk, enc, cb) {\n  var list\n  if (this.overflow) { // Line buffer is full. Skip to start of next line.\n    var buf = this[kDecoder].write(chunk)\n    list = buf.split(this.matcher)\n\n    if (list.length === 1) return cb() // Line ending not found. Discard entire chunk.\n\n    // Line ending found. Discard trailing fragment of previous line and reset overflow state.\n    list.shift()\n    this.overflow = false\n  } else {\n    this[kLast] += this[kDecoder].write(chunk)\n    list = this[kLast].split(this.matcher)\n  }\n\n  this[kLast] = list.pop()\n\n  for (var i = 0; i < list.length; i++) {\n    try {\n      push(this, this.mapper(list[i]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  this.overflow = this[kLast].length > this.maxLength\n  if (this.overflow && !this.skipOverflow) return cb(new Error('maximum buffer reached'))\n\n  cb()\n}\n\nfunction flush (cb) {\n  // forward any gibberish left in there\n  this[kLast] += this[kDecoder].end()\n\n  if (this[kLast]) {\n    try {\n      push(this, this.mapper(this[kLast]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  cb()\n}\n\nfunction push (self, val) {\n  if (val !== undefined) {\n    self.push(val)\n  }\n}\n\nfunction noop (incoming) {\n  return incoming\n}\n\nfunction split (matcher, mapper, options) {\n  // Set defaults for any arguments not supplied.\n  matcher = matcher || /\\r?\\n/\n  mapper = mapper || noop\n  options = options || {}\n\n  // Test arguments explicitly.\n  switch (arguments.length) {\n    case 1:\n      // If mapper is only argument.\n      if (typeof matcher === 'function') {\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If options is only argument.\n      } else if (typeof matcher === 'object' && !(matcher instanceof RegExp)) {\n        options = matcher\n        matcher = /\\r?\\n/\n      }\n      break\n\n    case 2:\n      // If mapper and options are arguments.\n      if (typeof matcher === 'function') {\n        options = mapper\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If matcher and options are arguments.\n      } else if (typeof mapper === 'object') {\n        options = mapper\n        mapper = noop\n      }\n  }\n\n  options = Object.assign({}, options)\n  options.transform = transform\n  options.flush = flush\n  options.readableObjectMode = true\n\n  const stream = new Transform(options)\n\n  stream[kLast] = ''\n  stream[kDecoder] = new StringDecoder('utf8')\n  stream.matcher = matcher\n  stream.mapper = mapper\n  stream.maxLength = options.maxLength\n  stream.skipOverflow = options.skipOverflow\n  stream.overflow = false\n\n  return stream\n}\n\nmodule.exports = split\n","module.exports = {\n\tcompareTwoStrings:compareTwoStrings,\n\tfindBestMatch:findBestMatch\n};\n\nfunction compareTwoStrings(first, second) {\n\tfirst = first.replace(/\\s+/g, '')\n\tsecond = second.replace(/\\s+/g, '')\n\n\tif (first === second) return 1; // identical or empty\n\tif (first.length < 2 || second.length < 2) return 0; // if either is a 0-letter or 1-letter string\n\n\tlet firstBigrams = new Map();\n\tfor (let i = 0; i < first.length - 1; i++) {\n\t\tconst bigram = first.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram) + 1\n\t\t\t: 1;\n\n\t\tfirstBigrams.set(bigram, count);\n\t};\n\n\tlet intersectionSize = 0;\n\tfor (let i = 0; i < second.length - 1; i++) {\n\t\tconst bigram = second.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram)\n\t\t\t: 0;\n\n\t\tif (count > 0) {\n\t\t\tfirstBigrams.set(bigram, count - 1);\n\t\t\tintersectionSize++;\n\t\t}\n\t}\n\n\treturn (2.0 * intersectionSize) / (first.length + second.length - 2);\n}\n\nfunction findBestMatch(mainString, targetStrings) {\n\tif (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');\n\t\n\tconst ratings = [];\n\tlet bestMatchIndex = 0;\n\n\tfor (let i = 0; i < targetStrings.length; i++) {\n\t\tconst currentTargetString = targetStrings[i];\n\t\tconst currentRating = compareTwoStrings(mainString, currentTargetString)\n\t\tratings.push({target: currentTargetString, rating: currentRating})\n\t\tif (currentRating > ratings[bestMatchIndex].rating) {\n\t\t\tbestMatchIndex = i\n\t\t}\n\t}\n\t\n\t\n\tconst bestMatch = ratings[bestMatchIndex]\n\t\n\treturn { ratings: ratings, bestMatch: bestMatch, bestMatchIndex: bestMatchIndex };\n}\n\nfunction areArgsValid(mainString, targetStrings) {\n\tif (typeof mainString !== 'string') return false;\n\tif (!Array.isArray(targetStrings)) return false;\n\tif (!targetStrings.length) return false;\n\tif (targetStrings.find( function (s) { return typeof s !== 'string'})) return false;\n\treturn true;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","/** @license URI.js v4.4.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.URI = global.URI || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction merge() {\n    for (var _len = arguments.length, sets = Array(_len), _key = 0; _key < _len; _key++) {\n        sets[_key] = arguments[_key];\n    }\n\n    if (sets.length > 1) {\n        sets[0] = sets[0].slice(0, -1);\n        var xl = sets.length - 1;\n        for (var x = 1; x < xl; ++x) {\n            sets[x] = sets[x].slice(1, -1);\n        }\n        sets[xl] = sets[xl].slice(1);\n        return sets.join('');\n    } else {\n        return sets[0];\n    }\n}\nfunction subexp(str) {\n    return \"(?:\" + str + \")\";\n}\nfunction typeOf(o) {\n    return o === undefined ? \"undefined\" : o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nfunction toArray(obj) {\n    return obj !== undefined && obj !== null ? obj instanceof Array ? obj : typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj) : [];\n}\nfunction assign(target, source) {\n    var obj = target;\n    if (source) {\n        for (var key in source) {\n            obj[key] = source[key];\n        }\n    }\n    return obj;\n}\n\nfunction buildExps(isIRI) {\n    var ALPHA$$ = \"[A-Za-z]\",\n        CR$ = \"[\\\\x0D]\",\n        DIGIT$$ = \"[0-9]\",\n        DQUOTE$$ = \"[\\\\x22]\",\n        HEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),\n        //case-insensitive\n    LF$$ = \"[\\\\x0A]\",\n        SP$$ = \"[\\\\x20]\",\n        PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),\n        //expanded\n    GEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n        SUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n        RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n        UCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",\n        //subset, excludes bidi control characters\n    IPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",\n        //subset\n    UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n        SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n        USERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n        DEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n        DEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),\n        //relaxed parsing rules\n    IPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n        H16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n        LS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n        IPV6ADDRESS1$ = subexp(subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$),\n        //                           6( h16 \":\" ) ls32\n    IPV6ADDRESS2$ = subexp(\"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$),\n        //                      \"::\" 5( h16 \":\" ) ls32\n    IPV6ADDRESS3$ = subexp(subexp(H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$),\n        //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n    IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$),\n        //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n    IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$),\n        //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n    IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" + H16$ + \"\\\\:\" + LS32$),\n        //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n    IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\" + LS32$),\n        //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n    IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\" + H16$),\n        //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n    IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"),\n        //[ *6( h16 \":\" ) h16 ] \"::\"\n    IPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n        ZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),\n        //RFC 6874\n    IPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),\n        //RFC 6874\n    IPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),\n        //RFC 6874, with relaxed parsing rules\n    IPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n        IP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),\n        //RFC 6874\n    REG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n        HOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n        PORT$ = subexp(DIGIT$$ + \"*\"),\n        AUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n        PCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n        SEGMENT$ = subexp(PCHAR$ + \"*\"),\n        SEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n        SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n        PATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n        PATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),\n        //simplified\n    PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n        PATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        QUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n        FRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n        HIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        RELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n        RELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        URI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n        ABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n        GENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        RELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        ABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n        SAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        AUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\";\n    return {\n        NOT_SCHEME: new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n        NOT_USERINFO: new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_HOST: new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_PATH: new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_PATH_NOSCHEME: new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_QUERY: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n        NOT_FRAGMENT: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n        ESCAPE: new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        UNRESERVED: new RegExp(UNRESERVED$$, \"g\"),\n        OTHER_CHARS: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n        PCT_ENCODED: new RegExp(PCT_ENCODED$, \"g\"),\n        IPV4ADDRESS: new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n        IPV6ADDRESS: new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\") //RFC 6874, with relaxed parsing rules\n    };\n}\nvar URI_PROTOCOL = buildExps(false);\n\nvar IRI_PROTOCOL = buildExps(true);\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/** Highest positive signed 32-bit float value */\n\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error$1(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tvar result = [];\n\tvar length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tvar parts = string.split('@');\n\tvar result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tvar labels = string.split('.');\n\tvar encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t// Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nvar ucs2encode = function ucs2encode(array) {\n\treturn String.fromCodePoint.apply(String, toConsumableArray(array));\n};\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nvar basicToDigit = function basicToDigit(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nvar digitToBasic = function digitToBasic(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nvar adapt = function adapt(delta, numPoints, firstTime) {\n\tvar k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (; /* no initialization */delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nvar decode = function decode(input) {\n\t// Don't use UCS-2.\n\tvar output = [];\n\tvar inputLength = input.length;\n\tvar i = 0;\n\tvar n = initialN;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tvar basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (var j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror$1('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (var index = basic > 0 ? basic + 1 : 0; index < inputLength;) /* no final expression */{\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tvar oldi = i;\n\t\tfor (var w = 1, k = base;; /* no condition */k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror$1('invalid-input');\n\t\t\t}\n\n\t\t\tvar digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror$1('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror$1('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\t\t}\n\n\t\tvar out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror$1('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\t}\n\n\treturn String.fromCodePoint.apply(String, output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nvar encode = function encode(input) {\n\tvar output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tvar inputLength = input.length;\n\n\t// Initialize the state.\n\tvar n = initialN;\n\tvar delta = 0;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points.\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _currentValue2 = _step.value;\n\n\t\t\tif (_currentValue2 < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(_currentValue2));\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar basicLength = output.length;\n\tvar handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tvar m = maxInt;\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = input[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar currentValue = _step2.value;\n\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow.\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror$1('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tvar _iteratorNormalCompletion3 = true;\n\t\tvar _didIteratorError3 = false;\n\t\tvar _iteratorError3 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator3 = input[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\tvar _currentValue = _step3.value;\n\n\t\t\t\tif (_currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror$1('overflow');\n\t\t\t\t}\n\t\t\t\tif (_currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\t\tvar q = delta;\n\t\t\t\t\tfor (var k = base;; /* no condition */k += base) {\n\t\t\t\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar qMinusT = q - t;\n\t\t\t\t\t\tvar baseMinusT = base - t;\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError3 = true;\n\t\t\t_iteratorError3 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t_iterator3.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nvar toUnicode = function toUnicode(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nvar toASCII = function toASCII(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nvar punycode = {\n\t/**\n  * A string representing the current Punycode.js version number.\n  * @memberOf punycode\n  * @type String\n  */\n\t'version': '2.1.0',\n\t/**\n  * An object of methods to convert from JavaScript's internal character\n  * representation (UCS-2) to Unicode code points, and back.\n  * @see <https://mathiasbynens.be/notes/javascript-encoding>\n  * @memberOf punycode\n  * @type Object\n  */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\n/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\nvar SCHEMES = {};\nfunction pctEncChar(chr) {\n    var c = chr.charCodeAt(0);\n    var e = void 0;\n    if (c < 16) e = \"%0\" + c.toString(16).toUpperCase();else if (c < 128) e = \"%\" + c.toString(16).toUpperCase();else if (c < 2048) e = \"%\" + (c >> 6 | 192).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();else e = \"%\" + (c >> 12 | 224).toString(16).toUpperCase() + \"%\" + (c >> 6 & 63 | 128).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();\n    return e;\n}\nfunction pctDecChars(str) {\n    var newStr = \"\";\n    var i = 0;\n    var il = str.length;\n    while (i < il) {\n        var c = parseInt(str.substr(i + 1, 2), 16);\n        if (c < 128) {\n            newStr += String.fromCharCode(c);\n            i += 3;\n        } else if (c >= 194 && c < 224) {\n            if (il - i >= 6) {\n                var c2 = parseInt(str.substr(i + 4, 2), 16);\n                newStr += String.fromCharCode((c & 31) << 6 | c2 & 63);\n            } else {\n                newStr += str.substr(i, 6);\n            }\n            i += 6;\n        } else if (c >= 224) {\n            if (il - i >= 9) {\n                var _c = parseInt(str.substr(i + 4, 2), 16);\n                var c3 = parseInt(str.substr(i + 7, 2), 16);\n                newStr += String.fromCharCode((c & 15) << 12 | (_c & 63) << 6 | c3 & 63);\n            } else {\n                newStr += str.substr(i, 9);\n            }\n            i += 9;\n        } else {\n            newStr += str.substr(i, 3);\n            i += 3;\n        }\n    }\n    return newStr;\n}\nfunction _normalizeComponentEncoding(components, protocol) {\n    function decodeUnreserved(str) {\n        var decStr = pctDecChars(str);\n        return !decStr.match(protocol.UNRESERVED) ? str : decStr;\n    }\n    if (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n    if (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    return components;\n}\n\nfunction _stripLeadingZeros(str) {\n    return str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\nfunction _normalizeIPv4(host, protocol) {\n    var matches = host.match(protocol.IPV4ADDRESS) || [];\n\n    var _matches = slicedToArray(matches, 2),\n        address = _matches[1];\n\n    if (address) {\n        return address.split(\".\").map(_stripLeadingZeros).join(\".\");\n    } else {\n        return host;\n    }\n}\nfunction _normalizeIPv6(host, protocol) {\n    var matches = host.match(protocol.IPV6ADDRESS) || [];\n\n    var _matches2 = slicedToArray(matches, 3),\n        address = _matches2[1],\n        zone = _matches2[2];\n\n    if (address) {\n        var _address$toLowerCase$ = address.toLowerCase().split('::').reverse(),\n            _address$toLowerCase$2 = slicedToArray(_address$toLowerCase$, 2),\n            last = _address$toLowerCase$2[0],\n            first = _address$toLowerCase$2[1];\n\n        var firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n        var lastFields = last.split(\":\").map(_stripLeadingZeros);\n        var isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n        var fieldCount = isLastFieldIPv4Address ? 7 : 8;\n        var lastFieldsStart = lastFields.length - fieldCount;\n        var fields = Array(fieldCount);\n        for (var x = 0; x < fieldCount; ++x) {\n            fields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n        }\n        if (isLastFieldIPv4Address) {\n            fields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n        }\n        var allZeroFields = fields.reduce(function (acc, field, index) {\n            if (!field || field === \"0\") {\n                var lastLongest = acc[acc.length - 1];\n                if (lastLongest && lastLongest.index + lastLongest.length === index) {\n                    lastLongest.length++;\n                } else {\n                    acc.push({ index: index, length: 1 });\n                }\n            }\n            return acc;\n        }, []);\n        var longestZeroFields = allZeroFields.sort(function (a, b) {\n            return b.length - a.length;\n        })[0];\n        var newHost = void 0;\n        if (longestZeroFields && longestZeroFields.length > 1) {\n            var newFirst = fields.slice(0, longestZeroFields.index);\n            var newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n            newHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n        } else {\n            newHost = fields.join(\":\");\n        }\n        if (zone) {\n            newHost += \"%\" + zone;\n        }\n        return newHost;\n    } else {\n        return host;\n    }\n}\nvar URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nvar NO_MATCH_IS_UNDEFINED = \"\".match(/(){0}/)[1] === undefined;\nfunction parse(uriString) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var components = {};\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    if (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n    var matches = uriString.match(URI_PARSE);\n    if (matches) {\n        if (NO_MATCH_IS_UNDEFINED) {\n            //store each component\n            components.scheme = matches[1];\n            components.userinfo = matches[3];\n            components.host = matches[4];\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || \"\";\n            components.query = matches[7];\n            components.fragment = matches[8];\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = matches[5];\n            }\n        } else {\n            //IE FIX for improper RegExp matching\n            //store each component\n            components.scheme = matches[1] || undefined;\n            components.userinfo = uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined;\n            components.host = uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined;\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || \"\";\n            components.query = uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined;\n            components.fragment = uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined;\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined;\n            }\n        }\n        if (components.host) {\n            //normalize IP hosts\n            components.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n        }\n        //determine reference type\n        if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n            components.reference = \"same-document\";\n        } else if (components.scheme === undefined) {\n            components.reference = \"relative\";\n        } else if (components.fragment === undefined) {\n            components.reference = \"absolute\";\n        } else {\n            components.reference = \"uri\";\n        }\n        //check for reference errors\n        if (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n            components.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n        }\n        //find scheme handler\n        var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n        //check if scheme can't handle IRIs\n        if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n            //if host component is a domain name\n            if (components.host && (options.domainHost || schemeHandler && schemeHandler.domainHost)) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n                } catch (e) {\n                    components.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n                }\n            }\n            //convert IRI -> URI\n            _normalizeComponentEncoding(components, URI_PROTOCOL);\n        } else {\n            //normalize encodings\n            _normalizeComponentEncoding(components, protocol);\n        }\n        //perform scheme specific parsing\n        if (schemeHandler && schemeHandler.parse) {\n            schemeHandler.parse(components, options);\n        }\n    } else {\n        components.error = components.error || \"URI can not be parsed.\";\n    }\n    return components;\n}\n\nfunction _recomposeAuthority(components, options) {\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    if (components.userinfo !== undefined) {\n        uriTokens.push(components.userinfo);\n        uriTokens.push(\"@\");\n    }\n    if (components.host !== undefined) {\n        //normalize IP hosts, add brackets and escape zone separator for IPv6\n        uriTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, function (_, $1, $2) {\n            return \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\";\n        }));\n    }\n    if (typeof components.port === \"number\" || typeof components.port === \"string\") {\n        uriTokens.push(\":\");\n        uriTokens.push(String(components.port));\n    }\n    return uriTokens.length ? uriTokens.join(\"\") : undefined;\n}\n\nvar RDS1 = /^\\.\\.?\\//;\nvar RDS2 = /^\\/\\.(\\/|$)/;\nvar RDS3 = /^\\/\\.\\.(\\/|$)/;\nvar RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\nfunction removeDotSegments(input) {\n    var output = [];\n    while (input.length) {\n        if (input.match(RDS1)) {\n            input = input.replace(RDS1, \"\");\n        } else if (input.match(RDS2)) {\n            input = input.replace(RDS2, \"/\");\n        } else if (input.match(RDS3)) {\n            input = input.replace(RDS3, \"/\");\n            output.pop();\n        } else if (input === \".\" || input === \"..\") {\n            input = \"\";\n        } else {\n            var im = input.match(RDS5);\n            if (im) {\n                var s = im[0];\n                input = input.slice(s.length);\n                output.push(s);\n            } else {\n                throw new Error(\"Unexpected dot segment condition\");\n            }\n        }\n    }\n    return output.join(\"\");\n}\n\nfunction serialize(components) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var protocol = options.iri ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    //find scheme handler\n    var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n    //perform scheme specific serialization\n    if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n    if (components.host) {\n        //if host component is an IPv6 address\n        if (protocol.IPV6ADDRESS.test(components.host)) {}\n        //TODO: normalize IPv6 address as per RFC 5952\n\n        //if host component is a domain name\n        else if (options.domainHost || schemeHandler && schemeHandler.domainHost) {\n                //convert IDN via punycode\n                try {\n                    components.host = !options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host);\n                } catch (e) {\n                    components.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                }\n            }\n    }\n    //normalize encoding\n    _normalizeComponentEncoding(components, protocol);\n    if (options.reference !== \"suffix\" && components.scheme) {\n        uriTokens.push(components.scheme);\n        uriTokens.push(\":\");\n    }\n    var authority = _recomposeAuthority(components, options);\n    if (authority !== undefined) {\n        if (options.reference !== \"suffix\") {\n            uriTokens.push(\"//\");\n        }\n        uriTokens.push(authority);\n        if (components.path && components.path.charAt(0) !== \"/\") {\n            uriTokens.push(\"/\");\n        }\n    }\n    if (components.path !== undefined) {\n        var s = components.path;\n        if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n            s = removeDotSegments(s);\n        }\n        if (authority === undefined) {\n            s = s.replace(/^\\/\\//, \"/%2F\"); //don't allow the path to start with \"//\"\n        }\n        uriTokens.push(s);\n    }\n    if (components.query !== undefined) {\n        uriTokens.push(\"?\");\n        uriTokens.push(components.query);\n    }\n    if (components.fragment !== undefined) {\n        uriTokens.push(\"#\");\n        uriTokens.push(components.fragment);\n    }\n    return uriTokens.join(\"\"); //merge tokens into a string\n}\n\nfunction resolveComponents(base, relative) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var skipNormalization = arguments[3];\n\n    var target = {};\n    if (!skipNormalization) {\n        base = parse(serialize(base, options), options); //normalize base components\n        relative = parse(serialize(relative, options), options); //normalize relative components\n    }\n    options = options || {};\n    if (!options.tolerant && relative.scheme) {\n        target.scheme = relative.scheme;\n        //target.authority = relative.authority;\n        target.userinfo = relative.userinfo;\n        target.host = relative.host;\n        target.port = relative.port;\n        target.path = removeDotSegments(relative.path || \"\");\n        target.query = relative.query;\n    } else {\n        if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n            //target.authority = relative.authority;\n            target.userinfo = relative.userinfo;\n            target.host = relative.host;\n            target.port = relative.port;\n            target.path = removeDotSegments(relative.path || \"\");\n            target.query = relative.query;\n        } else {\n            if (!relative.path) {\n                target.path = base.path;\n                if (relative.query !== undefined) {\n                    target.query = relative.query;\n                } else {\n                    target.query = base.query;\n                }\n            } else {\n                if (relative.path.charAt(0) === \"/\") {\n                    target.path = removeDotSegments(relative.path);\n                } else {\n                    if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n                        target.path = \"/\" + relative.path;\n                    } else if (!base.path) {\n                        target.path = relative.path;\n                    } else {\n                        target.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n                    }\n                    target.path = removeDotSegments(target.path);\n                }\n                target.query = relative.query;\n            }\n            //target.authority = base.authority;\n            target.userinfo = base.userinfo;\n            target.host = base.host;\n            target.port = base.port;\n        }\n        target.scheme = base.scheme;\n    }\n    target.fragment = relative.fragment;\n    return target;\n}\n\nfunction resolve(baseURI, relativeURI, options) {\n    var schemelessOptions = assign({ scheme: 'null' }, options);\n    return serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n}\n\nfunction normalize(uri, options) {\n    if (typeof uri === \"string\") {\n        uri = serialize(parse(uri, options), options);\n    } else if (typeOf(uri) === \"object\") {\n        uri = parse(serialize(uri, options), options);\n    }\n    return uri;\n}\n\nfunction equal(uriA, uriB, options) {\n    if (typeof uriA === \"string\") {\n        uriA = serialize(parse(uriA, options), options);\n    } else if (typeOf(uriA) === \"object\") {\n        uriA = serialize(uriA, options);\n    }\n    if (typeof uriB === \"string\") {\n        uriB = serialize(parse(uriB, options), options);\n    } else if (typeOf(uriB) === \"object\") {\n        uriB = serialize(uriB, options);\n    }\n    return uriA === uriB;\n}\n\nfunction escapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE, pctEncChar);\n}\n\nfunction unescapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED, pctDecChars);\n}\n\nvar handler = {\n    scheme: \"http\",\n    domainHost: true,\n    parse: function parse(components, options) {\n        //report missing host\n        if (!components.host) {\n            components.error = components.error || \"HTTP URIs must have a host.\";\n        }\n        return components;\n    },\n    serialize: function serialize(components, options) {\n        var secure = String(components.scheme).toLowerCase() === \"https\";\n        //normalize the default port\n        if (components.port === (secure ? 443 : 80) || components.port === \"\") {\n            components.port = undefined;\n        }\n        //normalize the empty path\n        if (!components.path) {\n            components.path = \"/\";\n        }\n        //NOTE: We do not parse query strings for HTTP URIs\n        //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n        //and not the HTTP spec.\n        return components;\n    }\n};\n\nvar handler$1 = {\n    scheme: \"https\",\n    domainHost: handler.domainHost,\n    parse: handler.parse,\n    serialize: handler.serialize\n};\n\nfunction isSecure(wsComponents) {\n    return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n//RFC 6455\nvar handler$2 = {\n    scheme: \"ws\",\n    domainHost: true,\n    parse: function parse(components, options) {\n        var wsComponents = components;\n        //indicate if the secure flag is set\n        wsComponents.secure = isSecure(wsComponents);\n        //construct resouce name\n        wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n        wsComponents.path = undefined;\n        wsComponents.query = undefined;\n        return wsComponents;\n    },\n    serialize: function serialize(wsComponents, options) {\n        //normalize the default port\n        if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n            wsComponents.port = undefined;\n        }\n        //ensure scheme matches secure flag\n        if (typeof wsComponents.secure === 'boolean') {\n            wsComponents.scheme = wsComponents.secure ? 'wss' : 'ws';\n            wsComponents.secure = undefined;\n        }\n        //reconstruct path from resource name\n        if (wsComponents.resourceName) {\n            var _wsComponents$resourc = wsComponents.resourceName.split('?'),\n                _wsComponents$resourc2 = slicedToArray(_wsComponents$resourc, 2),\n                path = _wsComponents$resourc2[0],\n                query = _wsComponents$resourc2[1];\n\n            wsComponents.path = path && path !== '/' ? path : undefined;\n            wsComponents.query = query;\n            wsComponents.resourceName = undefined;\n        }\n        //forbid fragment component\n        wsComponents.fragment = undefined;\n        return wsComponents;\n    }\n};\n\nvar handler$3 = {\n    scheme: \"wss\",\n    domainHost: handler$2.domainHost,\n    parse: handler$2.parse,\n    serialize: handler$2.serialize\n};\n\nvar O = {};\nvar isIRI = true;\n//RFC 3986\nvar UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nvar HEXDIG$$ = \"[0-9A-Fa-f]\"; //case-insensitive\nvar PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)); //expanded\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nvar ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nvar QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nvar VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nvar SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nvar UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nvar PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nvar NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nvar NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nvar NOT_HFVALUE = NOT_HFNAME;\nfunction decodeUnreserved(str) {\n    var decStr = pctDecChars(str);\n    return !decStr.match(UNRESERVED) ? str : decStr;\n}\nvar handler$4 = {\n    scheme: \"mailto\",\n    parse: function parse$$1(components, options) {\n        var mailtoComponents = components;\n        var to = mailtoComponents.to = mailtoComponents.path ? mailtoComponents.path.split(\",\") : [];\n        mailtoComponents.path = undefined;\n        if (mailtoComponents.query) {\n            var unknownHeaders = false;\n            var headers = {};\n            var hfields = mailtoComponents.query.split(\"&\");\n            for (var x = 0, xl = hfields.length; x < xl; ++x) {\n                var hfield = hfields[x].split(\"=\");\n                switch (hfield[0]) {\n                    case \"to\":\n                        var toAddrs = hfield[1].split(\",\");\n                        for (var _x = 0, _xl = toAddrs.length; _x < _xl; ++_x) {\n                            to.push(toAddrs[_x]);\n                        }\n                        break;\n                    case \"subject\":\n                        mailtoComponents.subject = unescapeComponent(hfield[1], options);\n                        break;\n                    case \"body\":\n                        mailtoComponents.body = unescapeComponent(hfield[1], options);\n                        break;\n                    default:\n                        unknownHeaders = true;\n                        headers[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n                        break;\n                }\n            }\n            if (unknownHeaders) mailtoComponents.headers = headers;\n        }\n        mailtoComponents.query = undefined;\n        for (var _x2 = 0, _xl2 = to.length; _x2 < _xl2; ++_x2) {\n            var addr = to[_x2].split(\"@\");\n            addr[0] = unescapeComponent(addr[0]);\n            if (!options.unicodeSupport) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    addr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n                } catch (e) {\n                    mailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n                }\n            } else {\n                addr[1] = unescapeComponent(addr[1], options).toLowerCase();\n            }\n            to[_x2] = addr.join(\"@\");\n        }\n        return mailtoComponents;\n    },\n    serialize: function serialize$$1(mailtoComponents, options) {\n        var components = mailtoComponents;\n        var to = toArray(mailtoComponents.to);\n        if (to) {\n            for (var x = 0, xl = to.length; x < xl; ++x) {\n                var toAddr = String(to[x]);\n                var atIdx = toAddr.lastIndexOf(\"@\");\n                var localPart = toAddr.slice(0, atIdx).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n                var domain = toAddr.slice(atIdx + 1);\n                //convert IDN via punycode\n                try {\n                    domain = !options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain);\n                } catch (e) {\n                    components.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                }\n                to[x] = localPart + \"@\" + domain;\n            }\n            components.path = to.join(\",\");\n        }\n        var headers = mailtoComponents.headers = mailtoComponents.headers || {};\n        if (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n        if (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n        var fields = [];\n        for (var name in headers) {\n            if (headers[name] !== O[name]) {\n                fields.push(name.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) + \"=\" + headers[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar));\n            }\n        }\n        if (fields.length) {\n            components.query = fields.join(\"&\");\n        }\n        return components;\n    }\n};\n\nvar URN_PARSE = /^([^\\:]+)\\:(.*)/;\n//RFC 2141\nvar handler$5 = {\n    scheme: \"urn\",\n    parse: function parse$$1(components, options) {\n        var matches = components.path && components.path.match(URN_PARSE);\n        var urnComponents = components;\n        if (matches) {\n            var scheme = options.scheme || urnComponents.scheme || \"urn\";\n            var nid = matches[1].toLowerCase();\n            var nss = matches[2];\n            var urnScheme = scheme + \":\" + (options.nid || nid);\n            var schemeHandler = SCHEMES[urnScheme];\n            urnComponents.nid = nid;\n            urnComponents.nss = nss;\n            urnComponents.path = undefined;\n            if (schemeHandler) {\n                urnComponents = schemeHandler.parse(urnComponents, options);\n            }\n        } else {\n            urnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n        }\n        return urnComponents;\n    },\n    serialize: function serialize$$1(urnComponents, options) {\n        var scheme = options.scheme || urnComponents.scheme || \"urn\";\n        var nid = urnComponents.nid;\n        var urnScheme = scheme + \":\" + (options.nid || nid);\n        var schemeHandler = SCHEMES[urnScheme];\n        if (schemeHandler) {\n            urnComponents = schemeHandler.serialize(urnComponents, options);\n        }\n        var uriComponents = urnComponents;\n        var nss = urnComponents.nss;\n        uriComponents.path = (nid || options.nid) + \":\" + nss;\n        return uriComponents;\n    }\n};\n\nvar UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\n//RFC 4122\nvar handler$6 = {\n    scheme: \"urn:uuid\",\n    parse: function parse(urnComponents, options) {\n        var uuidComponents = urnComponents;\n        uuidComponents.uuid = uuidComponents.nss;\n        uuidComponents.nss = undefined;\n        if (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n            uuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n        }\n        return uuidComponents;\n    },\n    serialize: function serialize(uuidComponents, options) {\n        var urnComponents = uuidComponents;\n        //normalize UUID\n        urnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n        return urnComponents;\n    }\n};\n\nSCHEMES[handler.scheme] = handler;\nSCHEMES[handler$1.scheme] = handler$1;\nSCHEMES[handler$2.scheme] = handler$2;\nSCHEMES[handler$3.scheme] = handler$3;\nSCHEMES[handler$4.scheme] = handler$4;\nSCHEMES[handler$5.scheme] = handler$5;\nSCHEMES[handler$6.scheme] = handler$6;\n\nexports.SCHEMES = SCHEMES;\nexports.pctEncChar = pctEncChar;\nexports.pctDecChars = pctDecChars;\nexports.parse = parse;\nexports.removeDotSegments = removeDotSegments;\nexports.serialize = serialize;\nexports.resolveComponents = resolveComponents;\nexports.resolve = resolve;\nexports.normalize = normalize;\nexports.equal = equal;\nexports.escapeComponent = escapeComponent;\nexports.unescapeComponent = unescapeComponent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=uri.all.js.map\n","\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nmodule.exports = require('util').deprecate;\n",null,"module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"querystring\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"vm\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* this module exists to let us import and call the `run` function from the tests */\nconst run_1 = require(\"./run\");\n(0, run_1.run)();\n"],"mappings":";;;;;;;A;;A;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChlxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrvolZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjnaplHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACthEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvtpvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjvrjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACttFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5utbtvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChhSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzzjwrrrPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjzfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzFA;AACA;AACA;AACA;AACA;;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjljEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChnvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjrtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxhFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrjejJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC5QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACjtphzrtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACxjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACbhxrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjpbntnmxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxrjxvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;AC1BA;;;A;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACfnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;ACvSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChlvl6CA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACLA;;;A;;;;;AAAA;;;A;;;;;AAAA;;;A;;;;;;A;;A;;;;;;A;;A;;;;;;A;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;;;;;;A","sourceRoot":""}